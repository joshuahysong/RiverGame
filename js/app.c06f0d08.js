(function(){"use strict";var e={1439:function(e,t,i){var s=i(6369),r=function(){var e=this,t=e._self._c;return t("div",[t("nav-bar",{on:{"new-game":e.startNewGame}}),t("div",{staticClass:"main-app container-fluid text-center mb-5 p-0"},[e.showGameEnd?e._e():t("action-bar"),e.showGameEnd?t("div",{staticClass:"row no-gutters mt-1"},[t("div",{staticClass:"col-12 col-xl-10 offset-xl-1"},[t("game-end",{staticClass:"m-1"})],1)]):e._e(),e.showWarBoard?t("div",{staticClass:"row no-gutters mt-2"},[t("div",{staticClass:"col-12 col-xl-10 offset-xl-1"},[t("war-board",{staticClass:"m-1"})],1)]):e._e(),t("div",{staticClass:"row no-gutters mt-2"},[t("div",{staticClass:"col-12 col-lg-9 col-xl-7 order-2 order-xl-1"},[t("div",{staticClass:"map-container"},[t("div",{staticClass:"grid"},e._l(e.map,(function(i,s){return t("map-square",{key:s,staticClass:"cell",attrs:{"map-square-type":i,index:s,tile:e.getTile(s)}})})),1)])]),t("div",{staticClass:"col-12 col-xl-2 order-1 order-xl-2 mb-2 m-xl-0"},[t("div",{staticClass:"row no-gutters justify-content-center align-items-center"},[e.showMonumentsAboveHand?t("div",{staticClass:"col-12 col-md-6 mb-2 px-1 d-block d-lg-none"},[t("monument-card")],1):e._e(),t("div",{staticClass:"col-12 col-md-10 col-lg-8 col-xl-12 px-1 px-xl-0 pr-xl-3"},[t("player-hand",{attrs:{player:e.getPlayer(e.actionPlayerId),selectable:""}})],1),t("div",{staticClass:"col-12 mt-3 pr-3 d-none d-xl-block"},[t("monument-card")],1)])]),t("div",{staticClass:"col-12 col-lg-3 order-3"},[t("div",{staticClass:"row no-gutters"},[e._l(e.allPlayers,(function(i,s){return t("div",{key:s,staticClass:"col-6 col-lg-12 px-1",class:0!=s?"mt-2":"mt-2 mt-lg-0"},[t("player-card",{class:{"border-danger":i?.id===e.actionPlayerId},attrs:{player:e.getPlayer(i?.id),"show-score":i?.id===e.visiblePlayerId&&i?.id===e.actionPlayerId}})],1)})),t("div",{staticClass:"col-6 col-lg-12 px-1 mt-2 d-block d-xl-none"},[t("monument-card",{staticClass:"h-100"})],1),t("div",{staticClass:"col-6 col-lg-12 px-1 mt-2"},[t("progress-card")],1),t("div",{staticClass:"col-12 px-1 mt-2"},[t("game-log")],1)],2)])])],1),t("b-navbar",{staticClass:"border-top py-0",attrs:{type:"light",variant:"light",fixed:"bottom"}},[t("b-navbar-nav",{staticClass:"mx-auto",attrs:{small:""}},[t("b-nav-text",[e._v("Version: "+e._s(e.appVersion))])],1)],1)],1)},a=[],l=i(3822),o=function(){var e=this,t=e._self._c;return t("div",{staticClass:"row no-gutters justify-content-center align-items-center bg-light w-100 py-2 border-bottom action-bar"},[t("div",{staticClass:"col-12 col-sm-auto m-0 mr-sm-2"},[t("b-icon",{staticClass:"mr-2",attrs:{icon:e.leaderIcon}}),e.showCurrentPlayerMessage?t("div",{staticClass:"d-inline-block"},[e._v(" "+e._s(e.playerName)+"'s Turn: "+e._s(e.remainingActionsMessage)+" ")]):e._e(),e.showTakeTreasureMessage?t("div",{staticClass:"d-inline-block"},[e._v(" "+e._s(e.playerName)+" "+e._s(e.treasureMessage)+" ")]):e._e(),e.showBuildMonumentMessage?t("div",{staticClass:"d-inline-block"},[e._v(" "+e._s(e.playerName)+": Select a monument to build. ")]):e._e(),e.showBuildMonumentMultipleMessage?t("div",{staticClass:"d-inline-block"},[e._v(" "+e._s(e.playerName)+": Select the top-left location for the monument. ")]):e._e(),e.showSwapTilesMessage?t("div",{staticClass:"d-inline-block"},[e._v(" "+e._s(e.playerName)+": Select tiles to discard and redraw. ")]):e._e(),e.showWarMessage?t("div",{staticClass:"d-inline-block"},[e._v(" "+e._s(e.playerName)+": Select"),t("b-icon",{staticClass:"mx-2",class:e.warTileType,attrs:{icon:"square-fill"}}),e._v("to commit for support. ")],1):e._e(),e.showWarChooseLeaderMessage?t("div",{staticClass:"d-inline-block"},[e._v(" "+e._s(e.playerName)+": Select which leaders must battle first. ")]):e._e()],1),e.showPlayerActionButtons?t("div",{staticClass:"col-12 col-sm-auto pt-1 pt-sm-0"},[e.showCurrentPlayerMessage?t("div",[t("b-button",{staticClass:"mr-2",attrs:{variant:"primary",size:"sm",disabled:e.areActionsDepleted},on:{click:e.beginSwapTiles}},[e._v(" Swap Tiles ")]),t("b-button",{staticClass:"mr-2",attrs:{variant:"warning",size:"sm",disabled:!e.hasSnapshot},on:{click:e.undoLastAction}},[e._v(" Undo ")]),t("b-button",{staticClass:"mr-2",attrs:{variant:"danger",size:"sm",hidden:e.areActionsDepleted},on:{click:e.showPassTurnMessageBox}},[e._v(" Pass ")]),t("b-button",{attrs:{variant:"success",size:"sm",hidden:!e.areActionsDepleted},on:{click:e.doEndTurn}},[e._v(" End Turn ")])],1):e._e(),e.showBuildMonumentMessage||e.showBuildMonumentMultipleMessage?t("div",[t("b-button",{attrs:{variant:"warning",size:"sm"},on:{click:e.passMonumentBuilding}},[e._v(" Pass ")])],1):e._e(),e.showSwapTilesMessage?t("div",[t("b-button",{staticClass:"mr-2",attrs:{variant:"warning",size:"sm"},on:{click:e.stopSwapTiles}},[e._v(" Cancel ")]),t("b-button",{attrs:{variant:"danger",size:"sm"},on:{click:e.doSwapTiles}},[e._v(" Discard "+e._s(e.player.selectedTiles.length)+" Tile"+e._s(1===e.player.selectedTiles.length?"":"s")+" ")])],1):e._e(),e.showWarMessage?t("div",[e.showRevoltAttackMessage?t("b-button",{staticClass:"mr-2",attrs:{variant:"warning",size:"sm",disabled:!e.hasSnapshot},on:{click:e.undoLastAction}},[e._v(" Undo ")]):e._e(),t("b-button",{attrs:{variant:"success",size:"sm"},on:{click:e.commitTilesToConflict}},[e._v(" Commit "+e._s(e.player.selectedTiles.length)+" Tiles ")])],1):e._e()]):e._e()])},n=[];const c={empty:0,temple:1,market:2,settlement:3,farm:4,catastrophe:5,king:6,priest:7,farmer:8,trader:9,generic:10,monumentTopLeft:11,monumentTopRight:12,monumentBottomLeft:13,monumentBottomRight:14},d=[c.king,c.priest,c.farmer,c.trader],m={ground:0,river:1,treasure:2,priorityTreasure:3},p={loading:0,playTile:1,swapTiles:2,takeTreasure:3,buildMonument:4,buildMonumentMultiple:5,conflictAttack:6,conflictDefend:7,conflictChooseLeader:8,gameOver:9},u=["suit-diamond-fill","star-fill","suit-heart-fill","egg-fill"],g={columns:16,rows:11},h={small:576,medium:768,large:992,extraLarge:1200},y={redBlue:1,blueGreen:2,greenRed:3,blackRed:4,blackGreen:5,blackBlue:6,redMonuments:[1,3,4],blueMonuments:[1,2,6],greenMonuments:[2,3,5],blackMonuments:[4,5,6]},T={system:0,action:1},f={none:0,revolt:1,war:2},v={getTileNameByType(e){return b(Object.keys(c).find((t=>c[t]===e)))},getCoordinatesByIndex(e){var t=Math.floor(e/g.columns)+10;return`${t.toString(36).toUpperCase()}-${e%g.columns+1}`},getPlayerIconNameById(e){return u[e-1]},getActionNameByType(e){return Object.keys(p).find((t=>p[t]===e))},getMessageNameByType(e){return b(Object.keys(T).find((t=>T[t]===e)))},capitalizeFirstLetter(e){return e&&e[0].toUpperCase()+e.slice(1)},getMonumentNameByType(e){return this.capitalizeFirstLetter(C(Object.keys(y).find((t=>y[t]===e)))).replace(" "," & ")},getLogToken(e){return e?`{${e.playerId}|${e.tileType}}`:null}};function b(e){return e.split(/(?=[A-Z])/).map((e=>e.toLowerCase())).join("-")}function C(e){return e.split(/(?=[A-Z])/).join(" ")}var w=v,x={name:"ActionBar",computed:{...(0,l.Se)("game",["remainingActions","turnPlayerId","actionPlayerId","visiblePlayerId","currentActionType","hasSnapshot","conflictAttackerLeader","conflictDefenderLeader","conflictTileType","conflictType"]),...(0,l.Se)("board",["availableMonumentLocations","treasuresToTake","conflictTile","remainingTreasures"]),leaderIcon(){return w.getPlayerIconNameById(this.actionPlayerId)},player(){return this.$store.getters["players/getPlayer"](this.actionPlayerId)},playerName(){return this.player?.name},remainingActionsMessage(){return`${this.remainingActions} Action${1==this.remainingActions?"":"s"} Remaining. `},areActionsDepleted(){return 0==this.remainingActions},treasureMessage(){return this.treasuresToTake>1?`must select 1 of ${this.treasuresToTake} Treasures to acquire.`:"must select a Treasure to acquire."},warTileType(){return w.getTileNameByType(this.conflictTileType)},showPlayerActionButtons(){return this.visiblePlayerId===this.actionPlayerId},showCurrentPlayerMessage(){return this.currentActionType===p.playTile},showTakeTreasureMessage(){return this.currentActionType===p.takeTreasure},showBuildMonumentMessage(){return this.currentActionType===p.buildMonument},showBuildMonumentMultipleMessage(){return this.currentActionType===p.buildMonumentMultiple},showSwapTilesMessage(){return this.currentActionType===p.swapTiles},showRevoltAttackMessage(){return this.conflictType===f.revolt&&this.currentActionType===p.conflictAttack},showRevoltDefendMessage(){return this.conflictType===f.revolt&&this.currentActionType===p.conflictDefend},showWarAttackMessage(){return this.conflictType===f.war&&this.currentActionType===p.conflictAttack},showWarDefendMessage(){return this.conflictType===f.war&&this.currentActionType===p.conflictDefend},showWarChooseLeaderMessage(){return this.currentActionType===p.conflictChooseLeader},showWarMessage(){return this.showRevoltAttackMessage||this.showRevoltDefendMessage||this.showWarAttackMessage||this.showWarDefendMessage}},methods:{async doEndTurn(){this.$store.commit("game/clearSnapshot"),this.$store.commit("board/resetBoardTileHighlights"),this.$store.commit("board/resetAvailableTileLocations"),this.$store.dispatch("board/checkForMonumentScore"),this.remainingTreasures<=2&&(this.$store.commit("log/logActionMessage",{text:`Game has ended due to ${this.remainingTreasures.remainingTreasures} treasure remaining on the board`},{root:!0}),this.$store.commit("game/setActionType",p.gameOver),this.$store.dispatch("game/save")),await this.$store.dispatch("players/refillPlayerHands"),this.currentActionType!==p.gameOver&&(this.$store.commit("game/nextActivePlayer"),this.$store.dispatch("game/save"))},async showPassTurnMessageBox(){this.$store.commit("board/resetAvailableTileLocations"),this.$store.commit("board/resetBoardTileHighlights");const e=this.$createElement,t=e("div",{class:["text-center"]},["Are you sure?",e("br"),`You have ${this.remainingActionsMessage}`]);this.$bvModal.msgBoxConfirm(t,{size:"sm",buttonSize:"sm",okVariant:"danger",okTitle:"Pass Turn",cancelVariant:"primary",footerClass:"border-top-0"}).then((async e=>{e&&(this.$store.commit("log/logActionMessage",{playerId:this.player.id,text:"passed their turn"}),await this.doEndTurn())}))},passMonumentBuilding(){this.showBuildMonumentMessage=!1,this.availableMonumentLocations.forEach((e=>{let t=this.$store.getters["board/tile"](e.index);this.$store.commit("board/updateTile",{...t,isHighlighted:!1})})),this.$store.commit("game/setActionType",p.playTile),this.$store.commit("game/actionCompleted"),this.$store.commit("board/checkForTreasureToTake")},beginSwapTiles(){this.$store.commit("board/resetAvailableTileLocations"),this.$store.commit("board/resetBoardTileHighlights"),this.$store.commit("players/clearTileSelection",this.player.id),this.$store.commit("game/setActionType",p.swapTiles)},stopSwapTiles(){this.$store.commit("players/clearTileSelection",this.player.id),this.$store.commit("game/clearSnapshot"),this.$store.commit("game/setActionType",p.playTile)},async doSwapTiles(){await this.$store.dispatch("players/swapTiles",{...this.player}),this.currentActionType!==p.gameOver?(this.$store.commit("game/setActionType",p.playTile),this.$store.commit("game/actionCompleted")):this.$store.dispatch("game/save")},undoLastAction(){this.$store.dispatch("game/restoreSnapshot"),this.$store.commit("game/clearSnapshot"),this.$store.commit("board/resetBoardTileHighlights")},commitTilesToConflict(){this.currentActionType===p.conflictAttack?(this.$store.commit("game/clearSnapshot"),this.$store.commit("game/setConflictAttackerTiles",this.player.selectedTiles),this.$store.commit("players/removeTilesFromHand",{playerId:this.player.id,tilesToRemove:[...this.player.selectedTiles]}),this.$store.commit("players/clearTileSelection",this.player.id),this.$store.commit("game/setActionPlayerId",this.conflictDefenderLeader.playerId),this.$store.commit("game/setActionType",p.conflictDefend)):this.currentActionType===p.conflictDefend&&(this.$store.commit("game/setConflictDefenderTiles",this.player.selectedTiles),this.$store.commit("players/removeTilesFromHand",{playerId:this.player.id,tilesToRemove:[...this.player.selectedTiles]}),this.$store.commit("players/clearTileSelection",this.player.id),this.$store.dispatch("game/resolveConflict"),this.$store.dispatch("board/checkForWar",this.conflictTile),this.currentActionType!==p.conflictAttack&&this.currentActionType!==p.conflictChooseLeader&&(this.$store.commit("game/setActionPlayerId",this.turnPlayerId),this.$store.commit("game/setActionType",p.playTile),this.$store.commit("game/actionCompleted"),this.$store.dispatch("board/checkForTreasureToTake")))}}},k=x,S=i(1001),A=(0,S.Z)(k,o,n,!1,null,"00ff8bad",null),_=A.exports,I=function(){var e=this,t=e._self._c;return t("div",{staticClass:"card overflow-hidden"},[e._l(e.confettiInstances,(function(e){return t("div",{key:e,class:"confetti-"+e})})),e._m(0),t("div",{staticClass:"card-body pt-0 pb-2 px-2"},[t("div",{staticClass:"row no-gutters align-items-center pb-2"},[t("div",{staticClass:"col"},[e._v(" "+e._s(e.getWinnerName(e.winningPlayerId))+" is the Winner! ")])]),e._l(e.playerScores,(function(i,s){return t("div",{key:s,staticClass:"row no-gutters align-items-center justify-content-center small"},[t("div",{staticClass:"col-auto"},[e._v(" #"+e._s(s+1)+": "+e._s(i.player.name)+" ("+e._s(i.score[0])+" points) ")])])}))],2)],2)},L=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"card-header bg-transparent border-0 py-2"},[t("strong",[e._v("Game Over")])])}],M=(i(7658),{name:"GameEnd",data(){return{confettiInstances:[],playerScores:[],winningPlayerId:0}},mounted(){this.confettiInstances=[...Array(150).keys()],this.playerScores=this.getScores(),this.winningPlayerId=this.playerScores[0].player.id,this.$store.commit("log/logActionMessage",{playerId:this.winningPlayerId,text:"wins the game with 0 points"})},computed:{...(0,l.Se)("game",["currentActionType"]),...(0,l.Se)("players",{allPlayers:"all"})},methods:{getWinnerName(e){const t=this.$store.getters["players/getPlayer"](e);return t?t.name:""},getScores(){let e=[];for(const t of this.allPlayers){let i=t.score.treasure,s=[t.score.temple,t.score.farm,t.score.settlement,t.score.market];for(let e=0;e<i;e++){let e=Math.min(...s),t=s.indexOf(e);s.splice(t,1),s.push(++e)}s.sort(((e,t)=>e-t)),e.push({player:{...t},score:[...s]})}return e.sort(((e,t)=>{let i=t.score[0]-e.score[0];if(i)return i;let s=t.score[1]-e.score[1];if(s)return s;let r=t.score[2]-e.score[2];if(r)return r;let a=t.score[3]-e.score[3];return a||void 0})),e}}}),P=M,B=(0,S.Z)(P,I,L,!1,null,"349b2501",null),$=B.exports,z=function(){var e=this,t=e._self._c;return t("div",{staticClass:"card"},[e._m(0),t("div",{staticClass:"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1"},[t("div",{staticClass:"scroll border text-left p-2 small"},e._l(e.messages,(function(i,s){return t("div",{key:s,staticClass:"log",class:e.getClass(i)},[e.showLogTimestamps?t("span",[e._v(e._s(i.timestamp)+": ")]):e._e(),i.playerId>=0?t("b-icon",{staticClass:"mr-1",attrs:{icon:e.getLeaderIcon(i)}}):e._e(),e._l(i.text.split(" "),(function(i,s){return t("span",{key:s},["{"===i[0]?t("span",[t("b-icon",e._b({},"b-icon",e.getMessageIcon(i),!1)),e._v(" ")],1):i?t("span",[e._v(e._s(i)+" ")]):e._e()])}))],2)})),0)])])},R=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"card-header bg-transparent border-0 py-2"},[t("strong",[e._v("Log")])])}],N={name:"GameLog",computed:{...(0,l.Se)("log",["messages"]),...(0,l.Se)("settings",["showLogTimestamps"])},methods:{getTimestamp(e){return e.timestamp.toLocaleString("en-US")},getLeaderIcon(e){return w.getPlayerIconNameById(e.playerId)},getMessageIcon(e){const t={icon:"",class:""};e=e.replace(/\r?\n|\r/g,"");const i=e.substring(1,e.length-1).split("|");if("treasure"===i[0]?(t.icon="circle-fill",t.class="treasure"):t.icon=w.getPlayerIconNameById(1*i[0]),2===i.length){const e=d.includes(1*i[1]);e||(t.icon="square-fill"),t.class=w.getTileNameByType(1*i[1])}return t},getClass(e){return w.getMessageNameByType(e.messageType)}}},D=N,W=(0,S.Z)(D,z,R,!1,null,"0b4f5a10",null),F=W.exports,H=function(){var e=this,t=e._self._c;return t("div",{staticClass:"map-square ground",class:e.getMapSquareClass(),on:{click:e.doMapSquareClick}},[e.hasTile&&!e.tile.isLeaderTile?t("civilization-tile",{attrs:{"tile-type":e.tile.tileType,highlight:e.tile.isHighlighted,"has-treasure":e.tile.hasTreasure,"is-conflict-tile":e.isConflictTile}}):e._e(),e.hasTile&&e.tile.isLeaderTile?t("leader-tile",{attrs:{"tile-type":e.tile.tileType,"map-index":e.index,highlight:e.tile.isHighlighted,player:e.getPlayer(),"show-pointer":e.showLeaderPointer,"show-strength":e.showLeaderStrength}}):e._e(),e.showMonument?t("monument-tile",{staticClass:"monument",attrs:{monumentType:e.tile.monumentType}}):e._e(),e.isRiverTile&&"="===e.riverPath?t("div",{staticClass:"river river-horizontal"}):e._e(),e.isRiverTile&&"║"===e.riverPath?t("div",{staticClass:"river river-vertical"}):e._e(),e.isRiverTile&&e.showRiverHorizontalLeft?t("div",{staticClass:"river river-horizontal-left"}):e._e(),e.isRiverTile&&e.showRiverHorizontalRight?t("div",{staticClass:"river river-horizontal-right"}):e._e(),e.isRiverTile&&e.showRiverVerticalBottom?t("div",{staticClass:"river river-vertical-bottom"}):e._e(),e.isRiverTile&&e.showRiverVerticalTop?t("div",{staticClass:"river river-vertical-top"}):e._e(),e.showKingdoms?t("div",{staticClass:"kingdom",style:e.kingdomStyle}):e._e(),e.showCoordinates?t("div",{staticClass:"coordinates coordinates-text-size",class:{"text-white":e.hasTile,pointer:e.tile&&e.tile.isHighlighted||e.showLeaderPointer}},[e._v(" "+e._s(e.coordinates)+" ")]):e._e(),e.showIndexes&&e.debug?t("div",{staticClass:"coordinates coordinates-text-size d-flex justify-content-center",class:{"text-white":e.hasTile,pointer:e.tile&&e.tile.isHighlighted||e.showLeaderPointer}},[t("span",{staticClass:"align-self-end"},[e._v(e._s(e.index))])]):e._e()],1)},O=[],j=function(){var e=this,t=e._self._c;return t("div",{staticClass:"tile",class:e.tileClass,style:e.tileStyle},[e.hasTreasure?t("div",{staticClass:"treasure-icon",style:e.treasureStyle}):e._e(),e.isConflictTile?t("div",{staticClass:"conflict-tile text-dark bg-warning"},[t("b-icon",{staticClass:"w-100 h-100 light",attrs:{icon:"x-square"}})],1):e._e()])},E=[],G={name:"CivilizationTile",props:{tileType:Number,selected:Boolean,highlight:Boolean,disabled:Boolean,hasTreasure:Boolean,showPointer:Boolean,isConflictTile:Boolean,size:Number},data(){return{calculatedSize:0}},mounted(){window.addEventListener("resize",this.onWindowResize),this.onWindowResize()},unmounted(){window.removeEventListener("resize",this.onWindowResize)},computed:{tileClass(){let e=w.getTileNameByType(this.tileType);return e+=this.selected?" selected":"",e+=this.highlight?" highlight":"",e+=this.showPointer||this.highlight?" pointer":"",e+=this.disabled?" disabled":"",e},tileStyle(){let e="",t=this.size?this.size:this.calculatedSize;return this.size&&(e+=`height: ${t}px; width: ${t}px;`),this.tileType===c.catastrophe&&(e+="background: repeating-linear-gradient(",e+="135deg,",e+="#eed202,",e+=`#eed202 ${t/4}px,`,e+=`black ${t/4}px,`,e+=`black ${t/2}px);`),e},treasureStyle(){let e="top: 32.5%; left: 32.5%;";return this.tileType===c.monumentBottomLeft&&(e="top: 40%; left: 20%;"),this.tileType===c.monumentBottomRight&&(e="top: 40%; left: 40%;"),this.tileType===c.monumentTopLeft&&(e="top: 20%; left: 20%;"),this.tileType===c.monumentTopRight&&(e="top: 20%; left: 40%;"),e}},methods:{onWindowResize(){var e=window.innerWidth;this.calculatedSize=50,e<=h.large&&(this.calculatedSize=40),e<=h.medium&&(this.calculatedSize=30),e<=h.small&&(this.calculatedSize=20)}}},K=G,q=(0,S.Z)(K,j,E,!1,null,"10199314",null),V=q.exports,Z=function(){var e=this,t=e._self._c;return t("div",{staticClass:"tile d-inline-block",class:e.tileClass,style:e.tileStyle},[t("b-icon",{staticClass:"h-100 w-100",class:e.iconClass,attrs:{icon:e.icon}}),e.showStrength?t("div",{staticClass:"strength strength-text-size"},[e._v(e._s(e.boardStrength))]):e._e()],1)},J=[],U={name:"LeaderTile",props:{tileType:Number,player:Object,mapIndex:Number,selected:Boolean,highlight:Boolean,disabled:Boolean,showPointer:Boolean,size:Number,showStrength:Boolean,showEmpty:Boolean},computed:{tileClass(){let e=this.selected?"selected":"";return e+=this.highlight?" highlight":"",e+=this.showPointer&&!this.isEmpty||this.isEmpty&&this.highlight?" pointer":"",e+=this.disabled?" disabled":"",e},tileStyle(){return this.size?`height: ${this.size}px; width: ${this.size}px;`:""},iconClass(){var e=w.getTileNameByType(this.tileType);return this.isEmpty&&(e+=" empty"),e},icon(){return w.getPlayerIconNameById(this.player.id)},isEmpty(){return!this.player.leaders.includes(this.tileType)&&this.showEmpty},boardStrength(){return this.mapIndex>=0?this.$store.getters["board/getWarBoardStrength"]({tileType:this.tileType,index:this.mapIndex}).length:null}}},X=U,Y=(0,S.Z)(X,Z,J,!1,null,"73c32123",null),Q=Y.exports,ee=function(){var e=this,t=e._self._c;return t("div",[t("b-iconstack",{staticClass:"tile-monument",class:e.monumentClass,style:e.monumentStyle},[t("b-icon",{class:e.primaryTileClass,attrs:{stacked:"",icon:"octagon-fill"}}),t("b-icon",{class:e.secondaryTileClass,attrs:{stacked:"",icon:"octagon-fill",scale:"0.4"}})],1)],1)},te=[],ie={name:"MonumentTile",props:{size:Number,selected:Boolean,disabled:Boolean,showPointer:Boolean,monumentType:{type:Number,required:!0}},data(){return{primaryTileType:c.empty,secondaryTileType:c.empty}},mounted(){switch(this.monumentType){case y.redBlue:this.primaryTileType=c.temple,this.secondaryTileType=c.farm;break;case y.blueGreen:this.primaryTileType=c.farm,this.secondaryTileType=c.market;break;case y.greenRed:this.primaryTileType=c.market,this.secondaryTileType=c.temple;break;case y.blackRed:this.primaryTileType=c.settlement,this.secondaryTileType=c.temple;break;case y.blackGreen:this.primaryTileType=c.settlement,this.secondaryTileType=c.market;break;case y.blackBlue:this.primaryTileType=c.settlement,this.secondaryTileType=c.farm;break}},computed:{primaryTileClass(){return`${w.getTileNameByType(this.primaryTileType)}-monument`},secondaryTileClass(){return`${w.getTileNameByType(this.secondaryTileType)}-monument`},monumentStyle(){let e="";return this.size&&(e+=`height: ${this.size}px; width: ${this.size}px;`),e},monumentClass(){let e="";return e+=this.selected?" selected":"",e+=this.disabled?" disabled":"",e+=this.showPointer&&!this.disabled?" pointer":"",e}}},se=ie,re=(0,S.Z)(se,ee,te,!1,null,"46e2198a",null),ae=re.exports,le={name:"MapSquare",components:{CivilizationTile:V,LeaderTile:Q,MonumentTile:ae},props:{mapSquareType:Number,index:Number,tile:Object},data(){return{isPriorityTreasureSquare:!1,isRiverTile:!1,riverPath:null}},mounted(){this.isRiverTile=this.mapSquareType===m.river,this.isPriorityTreasureSquare=this.mapSquareType===m.priorityTreasure,this.isRiverTile&&(this.riverPath=this.$store.getters["board/getRiverPath"](this.index))},computed:{...(0,l.Se)("settings",["showKingdoms","showCoordinates","showIndexes","showLeaderStrength"]),...(0,l.Se)("players",["currentPlayer"]),...(0,l.Se)("game",["debug","currentActionType","actionPlayerId","visiblePlayerId"]),...(0,l.Se)("board",["conflictTile"]),coordinates(){return w.getCoordinatesByIndex(this.index)},hasTile(){return this.tile&&this.tile.tileType!==c.empty},showRiverHorizontalLeft(){return"╗"===this.riverPath||"╝"===this.riverPath},showRiverHorizontalRight(){return"╔"===this.riverPath||"╚"===this.riverPath},showRiverVerticalBottom(){return"╔"===this.riverPath||"╗"===this.riverPath},showRiverVerticalTop(){return"╚"===this.riverPath||"╝"===this.riverPath},kingdomStyle(){var e="background-color: transparent;";if(!this.hasTile)return e;const t=this.$store.getters["board/getKingdomIndex"](this.index),i=["FF0000","FFFF00","00EAFF","AA00FF","FF7F00","BFFF00","0095FF","FF00AA","FFD400","6AFF00","0040FF","EDB9B9","B9D7ED","E7E9B9","DCB9ED","B9EDE0","8F2323","23628F","8F6A23","6B238F","4F8F23","000000","737373","CCCCCC"];return t>=0?`background-color: #${i[t]};`:e},showMonument(){return this.tile&&this.tile.monumentType&&this.tile.tileType===c.monumentBottomRight},tileTypes(){return c},showLeaderPointer(){return this.currentPlayer&&this.tile&&this.currentPlayer.id===this.tile.playerId&&this.currentActionType===p.playTile},isConflictTile(){return this.conflictTile&&this.conflictTile.index===this.index}},methods:{getMapSquareClass(){var e="";let t=this.$store.getters["board/getAvailableTileLocations"];return t&&t.includes(this.index)&&(e+=" valid-location"),this.isPriorityTreasureSquare&&this.tile&&this.tile.hasTreasure&&(e+=" priority-treasure"),e},doMapSquareClick(){this.actionPlayerId===this.visiblePlayerId&&this.$store.dispatch("board/handleBoardClick",this.tile)},getPlayer(){return this.$store.getters["players/getPlayer"](this.tile.playerId)}}},oe=le,ne=(0,S.Z)(oe,H,O,!1,null,"6445da66",null),ce=ne.exports,de=function(){var e=this,t=e._self._c;return t("div",{staticClass:"card"},[e._m(0),t("div",{staticClass:"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1"},[t("div",{staticClass:"row no-gutters align-items-center"},[t("div",{staticClass:"col-6 col-lg-12 text-right text-lg-center"},e._l(e.monumentTypes1,(function(i){return t("monument-tile",{key:i,staticClass:"d-inline-block mr-2 mb-1",attrs:{size:e.size,"monument-type":i,selected:e.isSelectedMonument(i),disabled:!e.isAvailableMonument(i),"show-pointer":e.isBuildingMonument},nativeOn:{click:function(t){return e.selectMonument(i)}}})})),1),t("div",{staticClass:"col-6 col-lg-12 text-left text-lg-center"},e._l(e.monumentTypes2,(function(i){return t("monument-tile",{key:i,staticClass:"d-inline-block mr-2 mb-1",attrs:{size:e.size,"monument-type":i,selected:e.isSelectedMonument(i),disabled:!e.isAvailableMonument(i),"show-pointer":e.isBuildingMonument},nativeOn:{click:function(t){return e.selectMonument(i)}}})})),1)])])])},me=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"card-header bg-transparent border-0 py-2"},[t("strong",[e._v("Monuments")])])}],pe={name:"MonumentCard",components:{MonumentTile:ae},data(){return{size:0}},mounted(){window.addEventListener("resize",this.onWindowResize),this.onWindowResize()},unmounted(){window.removeEventListener("resize",this.onWindowResize)},computed:{...(0,l.Se)("game",["currentActionType","remainingMonuments","selectedMonumentType"]),...(0,l.Se)("board",["availableMonumentLocations"]),monumentTypes(){return this.remainingMonuments},monumentTypes1(){var e=this.remainingMonuments.length<3?this.remainingMonuments.length:3;return this.remainingMonuments.slice(0,e)},monumentTypes2(){if(this.remainingMonuments.length<4)return[];var e=this.remainingMonuments.length<6?this.remainingMonuments.length:6;return this.remainingMonuments.slice(3,e)},isBuildingMonument(){return this.currentActionType===p.buildMonument||this.currentActionType===p.buildMonumentMultiple}},methods:{isSelectedMonument(e){return this.isBuildingMonument&&this.selectedMonumentType===e},isAvailableMonument(e){if(!this.isBuildingMonument)return!0;if(this.availableMonumentLocations&&this.availableMonumentLocations.length>0){if(y.redMonuments.some((t=>t===e))&&this.availableMonumentLocations.some((e=>e.tileType===c.temple)))return!0;if(y.blueMonuments.some((t=>t===e))&&this.availableMonumentLocations.some((e=>e.tileType===c.farm)))return!0;if(y.greenMonuments.some((t=>t===e))&&this.availableMonumentLocations.some((e=>e.tileType===c.market)))return!0;if(y.blackMonuments.some((t=>t===e))&&this.availableMonumentLocations.some((e=>e.tileType===c.settlement)))return!0}return!1},selectMonument(e){this.isBuildingMonument&&this.isAvailableMonument(e)&&(this.$store.commit("game/setSelectedMonumentType",e),1===this.availableMonumentLocations.length?this.$store.dispatch("board/buildMonument",{index:this.availableMonumentLocations[0].index,monumentType:e}):this.availableMonumentLocations.length>1&&this.availableMonumentLocations.forEach((e=>{let t=this.$store.getters["board/tile"](e.index);this.$store.commit("board/updateTile",{...t,isHighlighted:!0}),this.$store.commit("game/setActionType",p.buildMonumentMultiple)})))},onWindowResize(){var e=window.innerWidth;this.size=40,e<=h.medium&&(this.size=35),e<=h.small&&(this.size=30)}}},ue=pe,ge=(0,S.Z)(ue,de,me,!1,null,null,null),he=ge.exports,ye=function(){var e=this,t=e._self._c;return t("div",[t("b-navbar",{attrs:{toggleable:"sm",type:"dark",variant:"dark",sticky:""}},[t("b-button",{attrs:{size:"sm"},on:{click:function(t){return e.$emit("new-game")}}},[e._v("New Game")]),t("b-navbar-nav",{staticClass:"ml-auto"},[t("b-nav-item-dropdown",{attrs:{right:""},scopedSlots:e._u([{key:"button-content",fn:function(){return[t("b-icon-gear-fill")]},proxy:!0}])},[t("b-dropdown-form",{staticStyle:{width:"200px"},attrs:{"form-class":"px-3"}},[t("b-form-checkbox",{staticClass:"small",on:{change:e.saveSettings},model:{value:e.showCoordinates,callback:function(t){e.showCoordinates=t},expression:"showCoordinates"}},[e._v(" Show Coordinates ")]),e.debug?t("b-form-checkbox",{staticClass:"small",on:{change:e.saveSettings},model:{value:e.showIndexes,callback:function(t){e.showIndexes=t},expression:"showIndexes"}},[e._v(" Show Indexes ")]):e._e(),t("b-form-checkbox",{staticClass:"small",on:{change:e.saveSettings},model:{value:e.showKingdoms,callback:function(t){e.showKingdoms=t},expression:"showKingdoms"}},[e._v(" Show Kingdoms ")]),t("b-form-checkbox",{staticClass:"small",on:{change:e.saveSettings},model:{value:e.showLogTimestamps,callback:function(t){e.showLogTimestamps=t},expression:"showLogTimestamps"}},[e._v(" Show Log Timestamps ")]),t("b-form-checkbox",{staticClass:"small",on:{change:e.saveSettings},model:{value:e.showLeaderStrength,callback:function(t){e.showLeaderStrength=t},expression:"showLeaderStrength"}},[e._v(" Show Leader Strength ")])],1)],1),e.debug?t("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.debug-sidebar",modifiers:{"debug-sidebar":!0}}],staticClass:"my-2 my-sm-0 mx-2",attrs:{size:"sm"}},[e._v("Debug")]):e._e()],1)],1),t("b-sidebar",{attrs:{id:"debug-sidebar",right:"",shadow:"","no-header":"","sidebar-class":"border-left border-dark text-left mt-5"}},[t("div",{staticClass:"px-3 py-2"},[e._v(" Number of Players: "+e._s(e.numberOfPlayers)),t("br"),e._v(" Current Action Type: "+e._s(e.actionTypeName)),t("br"),e._v(" Current Turn PlayerId: "+e._s(e.turnPlayerId)),t("br"),e._v(" Current Visible PlayerId: "+e._s(e.visiblePlayerId)),t("br"),e._v(" Current Action PlayerId: "+e._s(e.actionPlayerId)),t("br"),e._v(" Bag: "+e._s(e.debugBagStats)),t("br")])])],1)},Te=[],fe={name:"NavBar",computed:{...(0,l.Se)("bag",["debugBagStats"]),...(0,l.Se)("game",["debug","isSaveValid","numberOfPlayers","turnPlayerId","visiblePlayerId","currentActionType","actionPlayerId","conflictType"]),showCoordinates:{get(){return this.$store.getters["settings/showCoordinates"]},set(e){this.$store.commit("settings/setShowCoordinates",e)}},showIndexes:{get(){return this.$store.getters["settings/showIndexes"]},set(e){this.$store.commit("settings/setShowIndexes",e)}},showKingdoms:{get(){return this.$store.getters["settings/showKingdoms"]},set(e){this.$store.commit("settings/setShowKingdoms",e)}},showLogTimestamps:{get(){return this.$store.getters["settings/showLogTimestamps"]},set(e){this.$store.commit("settings/setShowLogTimestamps",e)}},showLeaderStrength:{get(){return this.$store.getters["settings/showLeaderStrength"]},set(e){this.$store.commit("settings/setShowLeaderStrength",e)}},actionTypeName(){return w.getActionNameByType(this.currentActionType)}},methods:{onNewGameClicked(){this.$emit("new-game")},saveSettings(){this.$store.dispatch("settings/save")}}},ve=fe,be=(0,S.Z)(ve,ye,Te,!1,null,null,null),Ce=be.exports,we=function(){var e=this,t=e._self._c;return e.player?t("div",{staticClass:"card"},[e._m(0),t("div",{staticClass:"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1"},[e.visiblePlayerId!==e.player.id?t("div",{staticClass:"row no-gutters"},[t("div",{staticClass:"col"},[t("div",{staticClass:"row no-gutters justify-content-center align-items-center"},[t("div",{staticClass:"col-auto col-xl-12"},[t("b-icon",{staticClass:"mr-2",attrs:{icon:e.leaderIcon}}),e._v(e._s(e.player.name)+"'s Turn ")],1),e.player.isHuman?t("div",{staticClass:"col-auto col-xl-12 pl-2 pl-xl-0"},[t("b-button",{staticClass:"mt-0 mt-xl-2",attrs:{variant:"success",size:"sm"},on:{click:e.setPlayerVisible}},[e._v(" Continue ")])],1):e._e()])])]):t("div",{staticClass:"row no-gutters"},[t("div",{staticClass:"col-auto col-xl-12 align-self-center justify-content-center"},[t("div",{staticClass:"row no-gutters"},[t("div",{staticClass:"col-auto col-xl-12 text-right text-xl-center"},e._l(e.leaderTileTypes.slice(0,2),(function(i,s){return t("leader-tile",{key:s,class:3!==s?"mr-1 mr-md-2":"",attrs:{size:e.size,"tile-type":i,player:e.player,selected:e.isSelectedTile(s,i),highlight:e.isHighlightedLeader(i),disabled:e.isDisabled(i),"show-pointer":!e.isInConflict,"show-empty":""},nativeOn:{click:function(t){return e.selectTile(s,i)}}})})),1),t("div",{staticClass:"col-auto col-xl-12 text-left text-xl-center"},e._l(e.leaderTileTypes.slice(2,4),(function(i,s){return t("leader-tile",{key:s,class:3!==s?"mr-1 mr-md-2":"",attrs:{size:e.size,"tile-type":i,player:e.player,selected:e.isSelectedTile(s+2,i),highlight:e.isHighlightedLeader(i),disabled:e.isDisabled(i),"show-pointer":!e.isInConflict,"show-empty":""},nativeOn:{click:function(t){return e.selectTile(s+2,i)}}})})),1)])]),t("div",{staticClass:"col col-xl-12 align-self-center justify-content-center pt-xl-4"},[t("div",{staticClass:"row no-gutters"},[t("div",{staticClass:"col col-xl-12 text-right text-xl-center"},e._l(e.playerTiles1,(function(i,s){return t("civilization-tile",{key:s,staticClass:"d-inline-block mr-2",attrs:{size:e.size,"tile-type":i,selected:e.isSelectedTile(s,i),disabled:e.isDisabled(i),"show-pointer":""},nativeOn:{click:function(t){return e.selectTile(s,i)}}})})),1),t("div",{staticClass:"col col-xl-12 text-left text-xl-center"},e._l(e.playerTiles2,(function(i,s){return t("civilization-tile",{key:s,staticClass:"d-inline-block mr-2",attrs:{size:e.size,"tile-type":i,selected:e.isSelectedTile(s+3,i),disabled:e.isDisabled(i),"show-pointer":""},nativeOn:{click:function(t){return e.selectTile(s+3,i)}}})})),1)])]),t("div",{staticClass:"col-auto col-xl-12 align-self-center justify-content-center pt-xl-4"},e._l(e.player.catastropheTiles,(function(i,s){return t("civilization-tile",{key:s,staticClass:"d-inline-block mr-2",attrs:{size:e.size,"tile-type":e.tileTypes.catastrophe,selected:e.isSelectedTile(s,e.tileTypes.catastrophe),disabled:e.isDisabled(e.tileTypes.catastrophe),"show-pointer":""},nativeOn:{click:function(t){return e.selectTile(s,e.tileTypes.catastrophe)}}})})),1)])])]):e._e()},xe=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"card-header bg-transparent border-0 py-2"},[t("strong",[e._v("Hand")])])}],ke={name:"PlayerHand",components:{CivilizationTile:V,LeaderTile:Q},props:{player:Object,selectable:{type:Boolean,default:!1}},data(){return{size:0}},mounted(){window.addEventListener("resize",this.onWindowResize),this.onWindowResize()},unmounted(){window.removeEventListener("resize",this.onWindowResize)},computed:{...(0,l.Se)("game",["visiblePlayerId","remainingActions","currentActionType","conflictTileType"]),...(0,l.Se)("board",["tiles"]),leaderIcon(){return w.getPlayerIconNameById(this.player.id)},tileTypes(){return c},leaderTileTypes(){return d},playerTiles1(){var e=this.player.hand.length<3?this.player.hand.length:3;return this.player.hand.slice(0,e)},playerTiles2(){if(this.player.hand.length<4)return[];var e=this.player.hand.length<6?this.player.hand.length:6;return this.player.hand.slice(3,e)},isInConflict(){return this.currentActionType===p.conflictAttack||this.currentActionType===p.conflictDefend}},methods:{setPlayerVisible(){this.$store.commit("game/setVisiblePlayerId",this.player.id)},isSelectedTile(e,t){return this.selectable&&this.player.selectedTiles.some((i=>i.index===e&&i.tileType===t))},isHighlightedLeader(e){let t=this.$store.getters["board/selectedBoardLeader"](this.player.id);return this.currentActionType===p.playTile&&t&&t.tileType===e},isDisabled(e){return this.isInConflict&&this.conflictTileType!==e||0===this.remainingActions},selectTile(e,t){if(!this.selectable)return;let i=d.includes(t),s=!1;if(this.remainingActions>0&&this.currentActionType===p.playTile&&(!i||i&&this.player.leaders.includes(t))&&(s=!0),this.isInConflict&&!i&&this.player.hand[e]===this.conflictTileType&&(s=!0),this.currentActionType!==p.swapTiles||i||t===c.catastrophe||(s=!0),s)this.isSelectedTile(e,t)?this.$store.dispatch("players/removeTileSelection",{playerId:this.player.id,index:e,tileType:t,isLeaderTile:i}):(this.isInConflict||this.$store.commit("board/resetBoardTileHighlights"),this.$store.dispatch("players/addTileSelection",{playerId:this.player.id,index:e,tileType:t,isLeaderTile:i}));else{let e=this.$store.getters["board/selectedBoardLeader"](this.player.id);e&&e.tileType===t&&this.currentActionType===p.playTile&&(this.$store.dispatch("game/saveSnapshot"),this.$store.commit("players/addLeaderToPlayer",e),this.$store.commit("board/removeTile",{index:e.index}),this.$store.dispatch("board/setRegions"),this.$store.commit("board/resetAvailableTileLocations"),this.$store.commit("game/actionCompleted"),this.$store.commit("log/logActionMessage",{playerId:this.player.id,text:`moved ${w.getLogToken(e)}\n                            from ${w.getCoordinatesByIndex(e.index)} back to hand`}))}},onWindowResize(){var e=window.innerWidth;this.size=40,e<=h.medium&&(this.size=30),e<=h.small&&(this.size=20)}}},Se=ke,Ae=(0,S.Z)(Se,we,xe,!1,null,"c64d04c2",null),_e=Ae.exports,Ie=function(){var e=this,t=e._self._c;return t("div",{staticClass:"card h-100"},[t("div",{staticClass:"card-body p-2"},[t("div",{staticClass:"row no-gutters text-left small pb-2"},[t("div",{staticClass:"col-auto pr-1"},[e._v(e._s(e.player.name))]),e.player.isHuman?e._e():t("div",{staticClass:"col-auto"},[e._v("(Bot)")])]),t("div",{staticClass:"row no-gutters align-items-center"},[t("div",{staticClass:"col text-center text-sm-left"},e._l(e.leaderTileTypes,(function(i,s){return t("leader-tile",{key:s,staticClass:"mr-1",attrs:{size:e.size,"tile-type":i,player:e.player,"show-empty":""}})})),1),t("div",{staticClass:"col-auto"},[t("div",{staticClass:"row no-gutters align-items-center"},[t("div",{staticClass:"col-12 col-sm-auto pr-0 pr-sm-2"},[t("div",{staticClass:"row no-gutters align-items-center justify-content-center"},[t("div",{staticClass:"col-auto pr-1"},[t("civilization-tile",{attrs:{"tile-type":e.tileTypes.generic,size:e.size}})],1),t("div",{staticClass:"col-auto small"},[e._v("x"+e._s(e.player.hand.length))])])]),t("div",{staticClass:"col-12 col-sm-auto pt-1 pt-sm-0"},[t("div",{staticClass:"row no-gutters align-items-center justify-content-center"},[t("div",{staticClass:"col-auto pr-1"},[t("civilization-tile",{attrs:{"tile-type":e.tileTypes.catastrophe,size:e.size}})],1),t("div",{staticClass:"col-auto small"},[e._v("x"+e._s(e.player.catastropheTiles))])])])])])]),e.showScore||e.debug?t("div",{staticClass:"row no-gutters mt-1 justify-content-center justify-content-lg-start"},[t("div",{staticClass:"col-auto align-self-center"},[t("b-badge",{staticClass:"settlement-score mr-2",attrs:{pill:""}},[e._v(e._s(e.player.score.settlement))])],1),t("div",{staticClass:"col-auto align-self-center"},[t("b-badge",{staticClass:"temple-score mr-2",attrs:{pill:""}},[e._v(e._s(e.player.score.temple))])],1),t("div",{staticClass:"col-auto align-self-center"},[t("b-badge",{staticClass:"farm-score mr-2",attrs:{pill:""}},[e._v(e._s(e.player.score.farm))])],1),t("div",{staticClass:"col-auto align-self-center"},[t("b-badge",{staticClass:"market-score mr-2",attrs:{pill:""}},[e._v(e._s(e.player.score.market))])],1),t("div",{staticClass:"col-auto align-self-center"},[t("b-badge",{staticClass:"treasure-score mr-2",attrs:{pill:""}},[e._v(e._s(e.player.score.treasure))])],1)]):e._e(),e.debug?t("div",{staticClass:"row no-gutters mt-1 justify-content-center justify-content-lg-start"},e._l(e.player.hand,(function(i,s){return t("civilization-tile",{key:s,staticClass:"col-auto mr-1",attrs:{"tile-type":i,size:e.size}})})),1):e._e()])])},Le=[],Me={name:"PlayerHand",components:{CivilizationTile:V,LeaderTile:Q},props:{player:Object,showScore:{type:Boolean,default:!1}},data(){return{size:25}},computed:{...(0,l.Se)("game",["debug"]),tileTypes(){return c},leaderTileTypes(){return d}}},Pe=Me,Be=(0,S.Z)(Pe,Ie,Le,!1,null,"127b7e33",null),$e=Be.exports,ze=function(){var e=this,t=e._self._c;return t("div",{staticClass:"card"},[e._m(0),t("div",{staticClass:"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1"},[t("div",{staticClass:"row no-gutters"},[t("div",{staticClass:"col-12 col-sm-4 small"},[e._v("Bag")]),t("div",{staticClass:"col-12 col-sm"},[t("b-progress",{attrs:{max:"100",height:"1.5rem"}},[t("div",{staticClass:"progress-foreground progress-bar bg-success",style:`clip-path: inset(0 ${100-Math.round(e.bagSpaceRemaining/100*100)}% 0 0);`,attrs:{"aria-hidden":"true"}},[e._v(e._s(Math.round(e.bagSpaceRemaining/100*100))+"%")]),t("div",{staticClass:"progress-background",style:`clip-path: inset(0 0 0 ${Math.round(e.bagSpaceRemaining/100*100)}%);`,attrs:{"aria-hidden":"true"}},[e._v(e._s(Math.round(e.bagSpaceRemaining/100*100))+"%")])])],1)]),t("div",{staticClass:"row no-gutters mt-2"},[t("div",{staticClass:"col-12 col-sm-4 small"},[e._v("Treasures")]),t("div",{staticClass:"col-12 col-sm"},[t("b-progress",{attrs:{max:e.initialTreasures,height:"1.5rem"}},[t("div",{staticClass:"progress-foreground progress-bar bg-success",style:`clip-path: inset(0 ${(e.initialTreasures-e.remainingTreasures)/e.initialTreasures*100}% 0 0);`,attrs:{"aria-hidden":"true"}},[e._v(e._s(e.remainingTreasures)+" of "+e._s(e.initialTreasures))]),t("div",{staticClass:"progress-background",style:`clip-path: inset(0 0 0 ${e.remainingTreasures/e.initialTreasures*100}%);`,attrs:{"aria-hidden":"true"}},[e._v(e._s(e.remainingTreasures)+" of "+e._s(e.initialTreasures))])])],1)])])])},Re=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"card-header bg-transparent border-0 py-2"},[t("strong",[e._v("Progress")])])}],Ne={name:"ProgressCard",computed:{...(0,l.Se)("bag",["bagSpaceRemaining"]),...(0,l.Se)("board",["initialTreasures","remainingTreasures"])}},De=Ne,We=(0,S.Z)(De,ze,Re,!1,null,"ee469096",null),Fe=We.exports,He=function(){var e=this,t=e._self._c;return t("div",{staticClass:"card"},[t("div",{staticClass:"card-body p-0"},[t("div",{staticClass:"row no-gutters align-items-center"},[e.conflictAttackerLeader?t("div",{staticClass:"col-12 col-sm-6 text-left border-bottom border-right hide-border pb-1 pb-md-2 px-2 pr-sm-0 pl-sm-2",class:e.getResultClass(e.conflictAttackerLeader)},[e._m(0),e._m(1),t("div",{staticClass:"row no-gutters align-items-center pr-sm-1"},[t("div",{staticClass:"col-2"},[t("div",{staticClass:"row no-gutters align-items-center"},[t("div",{staticClass:"col-auto pr-1"},[t("leader-tile",{attrs:{size:e.size,"tile-type":e.conflictAttackerLeader.tileType,player:e.getPlayer(e.conflictAttackerLeader.playerId)}})],1),t("div",{staticClass:"col-auto text-left pr-1"},[e._v(" "+e._s(e.conflictAttackerBoardTiles.length+e.conflictAttackerTiles.length)+" ")])])]),t("div",{staticClass:"col-5"},[t("div",{staticClass:"row no-gutters justify-content-start"},e._l(e.conflictAttackerBoardTiles,(function(i,s){return t("civilization-tile",{key:s,staticClass:"col-auto mr-1 mb-1",attrs:{"tile-type":i.tileType,size:e.size}})})),1)]),t("div",{staticClass:"col-5"},[t("div",{staticClass:"row no-gutters justify-content-start"},e._l(e.conflictAttackerTiles,(function(i,s){return t("civilization-tile",{key:s,staticClass:"col-auto mr-1 mb-1",attrs:{"tile-type":i.tileType,size:e.size}})})),1)])])]):e._e(),e.conflictDefenderLeader?t("div",{staticClass:"col-12 col-sm-6 text-left text-sm-right pb-1 pb-md-2 px-2 pl-sm-0 pr-sm-2",class:e.getResultClass(e.conflictDefenderLeader)},[e._m(2),e._m(3),t("div",{staticClass:"row no-gutters align-items-center pl-sm-1"},[t("div",{staticClass:"col-5 order-3 order-sm-1"},[t("div",{staticClass:"row no-gutters justify-content-start justify-content-sm-end"},e._l(e.conflictDefenderTiles,(function(i,s){return t("civilization-tile",{key:s,staticClass:"col-auto mr-1 mr-sm-0 ml-0 ml-sm-1 mb-1",attrs:{"tile-type":i.tileType,size:e.size}})})),1)]),t("div",{staticClass:"col-5 order-2"},[t("div",{staticClass:"row no-gutters justify-content-start justify-content-sm-end"},e._l(e.conflictDefenderBoardTiles,(function(i,s){return t("civilization-tile",{key:s,staticClass:"col-auto mr-1 mr-sm-0 ml-0 ml-sm-1 mb-1",attrs:{"tile-type":i.tileType,size:e.size}})})),1)]),t("div",{staticClass:"col-2 order-1 order-sm-3"},[t("div",{staticClass:"row no-gutters align-items-center justify-content-start justify-content-sm-end"},[t("div",{staticClass:"col-auto text-right pr-1 pr-sm-0 pl-0 pl-sm-1 order-2 order-sm-1"},[e._v(" "+e._s(e.conflictDefenderBoardTiles.length+e.conflictDefenderTiles.length)+" ")]),t("div",{staticClass:"col-auto pr-1 pr-sm-0 pl-0 pl-sm-1 order-1 order-sm-2"},[t("leader-tile",{attrs:{size:e.size,"tile-type":e.conflictDefenderLeader.tileType,player:e.getPlayer(e.conflictDefenderLeader.playerId)}})],1)])])])]):e._e()])]),e.conflictWinnerPlayerId?t("div",{staticClass:"card-footer bg-white p-2 small"},[t("div",{staticClass:"row no-gutters align-items-center justify-content-center"},[t("div",{staticClass:"col-auto"},[t("span",{staticClass:"mr-3"},[t("strong",[e._v(e._s(e.getPlayer(e.conflictWinnerPlayerId)?.name))]),e._v(" wins the conflict!")])]),t("div",{staticClass:"col-auto"},[t("b-button",{attrs:{variant:"success",size:"sm"},on:{click:e.closeWarBoard}},[e._v(" Continue ")])],1)])]):e._e()])},Oe=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"row no-gutters text-center pt-2"},[t("div",{staticClass:"col"},[t("strong",[e._v("Attacker")])])])},function(){var e=this,t=e._self._c;return t("div",{staticClass:"row no-gutters align-items-center pb-2 pr-sm-1"},[t("div",{staticClass:"col-2"}),t("div",{staticClass:"col-5 small"},[t("strong",[e._v("Board")])]),t("div",{staticClass:"col-5 small"},[t("strong",[e._v("Committed")])])])},function(){var e=this,t=e._self._c;return t("div",{staticClass:"row no-gutters text-center pt-2"},[t("div",{staticClass:"col"},[t("strong",[e._v("Defender")])])])},function(){var e=this,t=e._self._c;return t("div",{staticClass:"row no-gutters align-items-center pb-2 pl-sm-1"},[t("div",{staticClass:"col-5 order-3 order-sm-1 small"},[t("strong",[e._v("Committed")])]),t("div",{staticClass:"col-5 order-2 small"},[t("strong",[e._v("Board")])]),t("div",{staticClass:"col-2 order-1 order-sm-3"})])}],je={name:"WarBoard",components:{CivilizationTile:V,LeaderTile:Q},data(){return{size:0}},mounted(){window.addEventListener("resize",this.onWindowResize),this.onWindowResize()},unmounted(){window.removeEventListener("resize",this.onWindowResize)},computed:{...(0,l.Se)("game",["conflictAttackerLeader","conflictDefenderLeader","conflictAttackerTiles","conflictDefenderTiles","conflictAttackerBoardTiles","conflictDefenderBoardTiles","conflictType","conflictWinnerPlayerId"]),...(0,l.Se)("game",["currentActionType"])},methods:{onWindowResize(){var e=window.innerWidth;this.size=30,e<=h.medium&&(this.size=25),e<=h.small&&(this.size=20)},getPlayer(e){return this.$store.getters["players/getPlayer"](e)},closeWarBoard(){this.$store.commit("game/resetConflictData"),this.$store.commit("game/setConflictType",f.none)},getResultClass(e){return this.conflictWinnerPlayerId?e.playerId===this.conflictWinnerPlayerId?"winner":"loser":""}}},Ee=je,Ge=(0,S.Z)(Ee,He,Oe,!1,null,"3b131b22",null),Ke=Ge.exports,qe={name:"App",components:{ActionBar:_,GameEnd:$,GameLog:F,MapSquare:ce,MonumentCard:he,NavBar:Ce,PlayerHand:_e,PlayerCard:$e,ProgressCard:Fe,WarBoard:Ke},async mounted(){this.isSaveValid?this.$store.dispatch("game/load"):await this.startNewGame(),this.$store.dispatch("settings/load")},computed:{...(0,l.Se)("board",["map","tiles"]),...(0,l.Se)("players",{allPlayers:"all"}),...(0,l.Se)("game",["isSaveValid","visiblePlayerId","currentActionType","actionPlayerId","conflictType"]),appVersion(){return"0.5.1"},showMonumentsAboveHand(){return this.currentActionType===p.buildMonument||this.currentActionType===p.buildMonumentMultiple},showWarBoard(){return this.conflictType!==f.none},showGameEnd(){return this.currentActionType===p.gameOver}},methods:{getTile(e){return this.tiles[e]},getPlayer(e){let t=this.allPlayers.filter((t=>t.id==e));return t&&t.length>0?t[0]:null},async startNewGame(){localStorage.removeItem("gameState"),this.$store.commit("log/init"),this.$store.dispatch("game/init"),this.$store.dispatch("board/init"),this.$store.dispatch("bag/init"),this.$store.commit("players/clearPlayers"),await this.$store.dispatch("players/createNewPlayer",{name:"Test Player 1",isHuman:!0}),await this.$store.dispatch("players/createNewPlayer",{name:"Test Player 2",isHuman:!0}),await this.$store.dispatch("players/createNewPlayer",{name:"Test Player 3",isHuman:!0}),await this.$store.dispatch("players/createNewPlayer",{name:"Test Player 4",isHuman:!0}),this.$store.commit("bag/setStartingBag"),this.$store.dispatch("game/save"),this.$store.commit("log/logSystemMessage","New Game Started")}}},Ve=qe,Ze=(0,S.Z)(Ve,r,a,!1,null,"2e26c528",null),Je=Ze.exports,Ue=i(6681),Xe=i(9425);i(7024);const Ye=()=>({map:[0,0,0,0,1,1,1,1,1,0,2,0,1,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,1,0,0,3,0,0,0,1,1,2,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,2,0,0,0,1,1,1,0,0,3,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0],tiles:[],regions:[],availableTileLocations:[],availableMonumentLocations:[],initialTreasures:0,remainingTreasures:0,treasuresToTake:0,conflictTile:null,leaderGroupsAtWar:[]}),Qe=[" "," "," "," ","╔","=","=","=","╝"," "," "," ","║"," "," "," "," "," "," "," ","║"," "," "," "," "," "," "," ","║"," "," "," "," "," "," ","╔","╝"," "," "," "," "," "," "," ","╚","╗"," "," ","=","=","=","╝"," "," "," "," "," "," "," "," "," ","╚","=","╗"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","╔","╝"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","║"," ","=","=","=","╗"," "," "," "," "," "," "," "," ","╔","=","╝"," "," "," "," ","╚","=","=","╗"," "," "," "," "," ","║"," "," "," "," "," "," "," "," "," ","╚","=","=","=","=","=","╝"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],et={map:e=>e.map,getRiverPath:()=>e=>!Qe&&e<Qe.length?null:Qe[e],tiles:e=>e.tiles,tile:e=>t=>e.tiles[t],regions:e=>e.regions,initialTreasures:e=>e.initialTreasures,remainingTreasures:e=>e.remainingTreasures,kingdoms:e=>e.regions.filter((e=>e.isKingdom)),getNeighbors:e=>t=>{if(e.tiles.length>0)return 0===t?{right:e.tiles[1],bottomRight:e.tiles[t+g.columns+1],bottom:e.tiles[t+g.columns]}:t<g.columns-1?{right:e.tiles[t+1],bottomRight:e.tiles[t+g.columns+1],bottom:e.tiles[t+g.columns],bottomLeft:e.tiles[t+g.columns-1],left:e.tiles[t-1]}:t===g.columns-1?{bottom:e.tiles[t+g.columns],bottomLeft:e.tiles[t+g.columns-1],left:e.tiles[t-1]}:t===g.columns*(g.rows-1)?{top:e.tiles[t-g.columns],topRight:e.tiles[t-g.columns+1],right:e.tiles[t+1]}:t>g.columns-1&&t%g.columns===0?{top:e.tiles[t-g.columns],topRight:e.tiles[t-g.columns+1],right:e.tiles[t+1],bottomRight:e.tiles[t+g.columns+1],bottom:e.tiles[t+g.columns]}:t===g.columns*g.rows-1?{top:e.tiles[t-g.columns],left:e.tiles[t-1],topLeft:e.tiles[t-g.columns-1]}:t%g.columns===g.columns-1?{top:e.tiles[t-g.columns],bottom:e.tiles[t+g.columns],bottomLeft:e.tiles[t+g.columns-1],left:e.tiles[t-1],topLeft:e.tiles[t-g.columns-1]}:t>g.columns*(g.rows-1)?{top:e.tiles[t-g.columns],topRight:e.tiles[t-g.columns+1],right:e.tiles[t+1],left:e.tiles[t-1],topLeft:e.tiles[t-g.columns-1]}:{top:e.tiles[t-g.columns],topRight:e.tiles[t-g.columns+1],right:e.tiles[t+1],bottomRight:e.tiles[t+g.columns+1],bottom:e.tiles[t+g.columns],bottomLeft:e.tiles[t+g.columns-1],left:e.tiles[t-1],topLeft:e.tiles[t-g.columns-1]}},getRegion:e=>t=>{let i=null;for(let s=0;s<e.regions.length;s++)if(e.regions[s].tileIndexes.includes(t)){i=s;break}return null!==i?e.regions[i]:null},getKingdomIndex:e=>t=>{var i=e.regions.filter((e=>e.isKingdom));return i?i.findIndex((e=>e.tileIndexes.includes(t))):null},getAvailableTileLocations:e=>e.availableTileLocations,availableMonumentLocations:e=>e.availableMonumentLocations,neighborRegions:(e,t)=>e=>{const i=t.getNeighbors(e.index),s=[];return i.left&&i.left.tileType!==c.empty&&i.left.tileType!==c.catastrophe&&s.push(t.getRegion(i.left.index)),i.top&&i.top.tileType!==c.empty&&i.top.tileType!==c.catastrophe&&s.push(t.getRegion(i.top.index)),i.right&&i.right.tileType!==c.empty&&i.right.tileType!==c.catastrophe&&s.push(t.getRegion(i.right.index)),i.bottom&&i.bottom.tileType!==c.empty&&i.bottom.tileType!==c.catastrophe&&s.push(t.getRegion(i.bottom.index)),Array.from(new Set(s))},isValidTileLocation:(e,t)=>e=>{let i=t.getAvailableTileLocations;return i&&i.some((t=>t===e))},selectedBoardLeader:(e,t)=>e=>t.tiles.filter((t=>t.isLeaderTile&&t.playerId==e&&t.isHighlighted))[0],treasuresToTake:e=>e.treasuresToTake,conflictTile:e=>e.conflictTile,getRevoltBoardStrength:(e,t)=>e=>{let i=[],s=t.getNeighbors(e.index);return s.top&&s.top.tileType===c.temple&&i.push({...s.top}),s.right&&s.right.tileType===c.temple&&i.push({...s.right}),s.bottom&&s.bottom.tileType===c.temple&&i.push({...s.bottom}),s.left&&s.left.tileType===c.temple&&i.push({...s.left}),i},getWarBoardStrength:(e,t)=>e=>{let i=[];if(!e)return i;let s=t.getRegion(e.index);if(!s||!s?.tileIndexes)return i;for(const r of s.tileIndexes){const s=t.tile(r);e.tileType===c.priest&&s.tileType===c.temple&&i.push({...s}),e.tileType===c.king&&s.tileType===c.settlement&&i.push({...s}),e.tileType===c.trader&&s.tileType===c.market&&i.push({...s}),e.tileType===c.farmer&&s.tileType===c.farm&&i.push({...s})}return i},leaderGroupsAtWar:e=>e.leaderGroupsAtWar},tt={init({state:e,commit:t,dispatch:i}){t("resetAvailableTileLocations");let s=[];for(let r=0;r<e.map.length;r++){const t=e.map[r]===m.treasure||e.map[r]===m.priorityTreasure?c.temple:c.empty;s.push({index:r,tileType:t,isLeaderTile:!1,hasTreasure:t===c.temple,playerId:0})}t("setTiles",s),i("setRegions"),t("setTreasureCounts")},handleBoardClick({commit:e,rootGetters:t,dispatch:i,getters:s},r){if(!r)return;let a=t["game/currentActionType"];if(a===p.playTile){let a=t["players/currentPlayer"],l=s.selectedBoardLeader(a.id),o=a.selectedTiles&&a.selectedTiles.length>=1;if(r.isLeaderTile&&r.playerId===a.id&&t["game/remainingActions"]>0){e("players/clearTileSelection",a.id,{root:!0}),e("updateTile",{...r,isHighlighted:!r.isHighlighted});let t=s.tile(r.index);t.isHighlighted?i("calculateAvailableTileLocations",t):e("resetAvailableTileLocations")}else if((o||l)&&s.isValidTileLocation(r.index)){i("game/saveSnapshot",null,{root:!0}),l&&e("removeTile",{index:l.index});const n=o?a.selectedTiles[0]:l,c={...r,isLeaderTile:n.isLeaderTile,tileType:n.tileType,playerId:a.id};if(e("addTile",c),i("players/removeSelectedTiles",a.id,{root:!0}),e("resetAvailableTileLocations"),e("log/logActionMessage",l?{playerId:a.id,text:`moved ${w.getLogToken(c)}\n                            from ${w.getCoordinatesByIndex(l.index)}\n                            to ${w.getCoordinatesByIndex(c.index)}`}:{playerId:a.id,text:`placed ${w.getLogToken(c)}\n                            on ${w.getCoordinatesByIndex(c.index)}`},{root:!0}),i("checkForDisplacedLeader"),i("checkForWar",{...c}),t["game/currentActionType"]!==p.playTile)return;const d=s.neighborRegions(c).filter((e=>e.isKingdom));if(i("setRegions"),d.length<=1&&o&&i("checkForTileScore",c),i("checkForRevolt",c),t["game/currentActionType"]!==p.playTile)return;if(i("checkForMonument",c),t["game/currentActionType"]!==p.playTile)return;e("game/actionCompleted",null,{root:!0}),i("checkForTreasureToTake")}}if(a===p.takeTreasure&&r.isHighlighted&&i("takeTreasure",r),a===p.buildMonumentMultiple){let e=t["game/selectedMonumentType"];i("buildMonument",{...r,monumentType:e})}if(a===p.warChooseLeader&&r.isHighlighted&&r.isLeaderTile&&s.leaderGroupsAtWar.length>0){const e=s.leaderGroupsAtWar.filter((e=>e[0].tileType===r.tileType));e&&e.length>0&&i("triggerWar",{attacker:e[0][0],defender:e[0][1]})}},calculateAvailableTileLocations({state:e,getters:t,commit:i},s){let r=[];for(let a=0;a<e.tiles.length;a++){let i=e.map[a],l=e.tiles[a];if(l)if(s.isLeaderTile){const e=t.neighborRegions(l),s=e.filter((e=>e.isKingdom)).length>1,o=t.getNeighbors(a),n=o.left&&o.left.tileType===c.temple||o.top&&o.top.tileType===c.temple||o.bottom&&o.bottom.tileType===c.temple||o.right&&o.right.tileType===c.temple;!s&&n&&l.tileType==c.empty&&i!==m.river&&r.push(a)}else s.tileType===c.catastrophe?l.hasTreasure||l.tileType===c.catastrophe||l.tileType===c.monumentBottomLeft||l.tileType===c.monumentBottomRight||l.tileType===c.monumentTopLeft||l.tileType===c.monumentTopRight||l.isLeaderTile||r.push(a):l.tileType==c.empty&&(i===m.river&&s.tileType===c.farm||i!==m.river&&s.tileType!==c.farm)&&r.push(a)}i("setAvailableTileLocations",r)},setRegions({state:e,getters:t,commit:i}){i("resetRegions");let s=[...e.tiles.filter((e=>e.tileType!==c.empty&&e.tileType!==c.catastrophe&&(!t.conflictTile||t.conflictTile.index!==e.index))).map((e=>e.index))],r=[];for(let a=0;a<s.length;a++)if(!r.some((e=>e===s[a]))){let l=[],o=[s[a]],n=!1;while(o.length>0){const i=o.shift();if(!r.some((e=>e===i))){l.push(i),r.push(i);let s=e.tiles[i]?.isLeaderTile;s&&!n&&(n=s);const a=t.getNeighbors(i);a.left&&a.left.tileType!==c.empty&&a.left.tileType!==c.catastrophe&&o.push(a.left.index),a.top&&a.top.tileType!==c.empty&&a.top.tileType!==c.catastrophe&&o.push(a.top.index),a.right&&a.right.tileType!==c.empty&&a.right.tileType!==c.catastrophe&&o.push(a.right.index),a.bottom&&a.bottom.tileType!==c.empty&&a.bottom.tileType!==c.catastrophe&&o.push(a.bottom.index)}}l.length>0&&i("addRegion",{tileIndexes:l,isKingdom:n})}},checkForTileScore({state:e,getters:t,commit:i},s){if(s&&!s.isLeaderTile){let r=t.getRegion(s.index);if(r&&r.isKingdom){let t=null,a=null;for(let i=0;i<r.tileIndexes.length;i++){let l=e.tiles[r.tileIndexes[i]];l&&l.isLeaderTile&&(l.tileType===c.priest&&s.tileType===c.temple||l.tileType===c.king&&s.tileType===c.settlement||l.tileType===c.farmer&&s.tileType===c.farm||l.tileType===c.trader&&s.tileType===c.market?t=l:l.tileType===c.king&&(a=l))}null!==t?i("players/incrementScore",{playerId:t.playerId,scoreName:w.getTileNameByType(s.tileType)},{root:!0}):null!==a&&i("players/incrementScore",{playerId:a.playerId,scoreName:w.getTileNameByType(s.tileType)},{root:!0})}}},checkForTreasureToTake({getters:e,commit:t,dispatch:i}){for(const s of e.regions){let r=[];if(s&&s.isKingdom){let a=null;for(let t=0;t<s.tileIndexes.length;t++){let i=e.tile(s.tileIndexes[t]);i&&(i.hasTreasure&&r.push(i),i.tileType===c.trader&&(a=i))}if(r.length>1&&null!==a){t("game/setActionPlayerId",a.playerId,{root:!0});const s=r.filter((t=>e.map[t.index]===m.priorityTreasure));if(1===s.length)i("takeTreasure",s[0]);else if(s.length>1){if(s.length)for(let e=0;e<s.length;e++)t("updateTile",{...s[e],isHighlighted:!0});t("game/setActionType",p.takeTreasure,{root:!0})}else{for(let e=0;e<r.length;e++)t("updateTile",{...r[e],isHighlighted:!0});t("game/setActionType",p.takeTreasure,{root:!0})}}}t("setTreasuresToTake",r.length-1)}},checkForMonument({getters:e,commit:t},i){t("resetAvailableMonumentLocations");var s=e.getNeighbors(i.index);let r=s.top?.tileType??c.empty,a=s.topRight?.tileType??c.empty,l=s.right?.tileType??c.empty,o=s.bottomRight?.tileType??c.empty,n=s.bottom?.tileType??c.empty,d=s.bottomLeft?.tileType??c.empty,m=s.left?.tileType??c.empty,u=s.topLeft?.tileType??c.empty,g=[];[u,r,m].every((e=>e===i.tileType))&&g.push({index:s.topLeft.index,tileType:s.topLeft.tileType}),[r,a,l].every((e=>e===i.tileType))&&g.push({index:s.top.index,tileType:s.top.tileType}),[l,o,n].every((e=>e===i.tileType))&&g.push({index:i.index,tileType:i.tileType}),[n,d,m].every((e=>e===i.tileType))&&g.push({index:s.left.index,tileType:s.left.tileType}),g&&g.length>0&&(t("setAvailableMonumentLocations",g),t("game/setActionType",p.buildMonument,{root:!0}))},buildMonument({getters:e,commit:t,dispatch:i,rootGetters:s},r){let a=e.tile(r.index),l=e.getNeighbors(a.index);t("updateTile",{...a,tileType:c.monumentTopLeft}),t("updateTile",{...l.right,tileType:c.monumentTopRight}),t("updateTile",{...l.bottom,tileType:c.monumentBottomLeft}),t("updateTile",{...l.bottomRight,tileType:c.monumentBottomRight,monumentType:r.monumentType}),e.availableMonumentLocations.forEach((i=>{let s=e.tile(i.index);t("updateTile",{...s,isHighlighted:!1})})),t("game/removeFromRemainingMonuments",r.monumentType,{root:!0}),t("resetAvailableMonumentLocations"),t("game/resetSelectedMonumentType",null,{root:!0}),t("log/logActionMessage",{playerId:s["game/actionPlayerId"],text:`built ${w.getMonumentNameByType(r.monumentType)} monument at ${w.getCoordinatesByIndex(r.index)}`},{root:!0}),i("checkForDisplacedLeader"),i("setRegions"),t("game/setActionType",p.playTile,{root:!0}),t("game/actionCompleted",null,{root:!0}),i("checkForTreasureToTake")},checkForMonumentScore({getters:e,rootGetters:t,commit:i}){let s=t["game/actionPlayerId"],r=e.kingdoms;r.forEach((t=>{let r=[],a=[];t.tileIndexes.forEach((t=>{let i=e.tiles[t];i.isLeaderTile&&i.playerId===s&&r.push(i.tileType),i.monumentType&&a.push(i.monumentType)})),r.length>0&&a.length>0&&a.forEach((e=>{y.redMonuments.includes(e)&&r.includes(c.priest)&&i("players/incrementScore",{playerId:s,scoreName:w.getTileNameByType(c.temple)},{root:!0}),y.blueMonuments.includes(e)&&r.includes(c.farmer)&&i("players/incrementScore",{playerId:s,scoreName:w.getTileNameByType(c.farm)},{root:!0}),y.greenMonuments.includes(e)&&r.includes(c.trader)&&i("players/incrementScore",{playerId:s,scoreName:w.getTileNameByType(c.market)},{root:!0}),y.blackMonuments.includes(e)&&r.includes(c.king)&&i("players/incrementScore",{playerId:s,scoreName:w.getTileNameByType(c.settlement)},{root:!0})}))}))},checkForDisplacedLeader({state:e,getters:t,commit:i}){for(let s=0;s<e.tiles.length;s++){let r=e.tiles[s];if(r.isLeaderTile){let e=t.getNeighbors(s),a=!1;e.bottom&&e.bottom.tileType==c.temple&&(a=!0),e.left&&e.left.tileType==c.temple&&(a=!0),e.right&&e.right.tileType==c.temple&&(a=!0),e.top&&e.top.tileType==c.temple&&(a=!0),a||(i("players/addLeaderToPlayer",r,{root:!0}),i("removeTile",{index:r.index}))}}},checkForRevolt({state:e,getters:t,commit:i},s){if(!s||!s.isLeaderTile)return;const r=t.getRegion(s.index);if(r&&r.isKingdom){let l=null;for(let t=0;t<r.tileIndexes.length;t++){var a=e.tiles[r.tileIndexes[t]];if(a&&a.isLeaderTile&&a.tileType===s.tileType&&a.playerId!==s.playerId){l={...a};break}}l&&(i("updateTile",{...s,isHighlighted:!0}),i("updateTile",{...l,isHighlighted:!0}),i("game/resetConflictData",null,{root:!0}),i("game/setActionPlayerId",s.playerId,{root:!0}),i("game/setConflictAttackerLeader",s,{root:!0}),i("game/setConflictDefenderLeader",l,{root:!0}),i("game/setConflictAttackerBoardTiles",t.getRevoltBoardStrength(s),{root:!0}),i("game/setConflictDefenderBoardTiles",t.getRevoltBoardStrength(l),{root:!0}),i("game/setConflictTileType",c.temple,{root:!0}),i("game/setActionType",p.conflictAttack,{root:!0}),i("game/setConflictType",f.revolt,{root:!0}),i("log/logActionMessage",{text:`A Revolt has begun between ${w.getLogToken(s)}\n                        and ${w.getLogToken(l)}`},{root:!0}))}},checkForWar({getters:e,commit:t,dispatch:i},s){if(!s||s.isLeaderTile||s.tileType===c.catastrophe)return;e.conflictTile||t("setConflictTile",s),t("resetLeaderGroupsAtWar");let r=[],a=[],l=[],o=[];const n=e.neighborRegions(s).filter((e=>e.isKingdom));for(const p of n)for(const t of p.tileIndexes){const i=e.tile(t);i.isLeaderTile&&(i.tileType===c.priest&&r.push({...i}),i.tileType===c.king&&a.push({...i}),i.tileType===c.trader&&l.push({...i}),i.tileType===c.farmer&&o.push({...i}))}let d=[r,a,l,o],m=[];for(const c of d)if(c.length>=2){c.sort(((e,t)=>e.playerId===s.playerId&&t.playerId!==s.playerId?-1:e.playerId!==s.playerId&&t.playerId===s.playerId?1:e.playerId-t.playerId)),m.push(c);for(const e of c)t("updateTile",{...e,isHighlighted:!0})}0==m.length?t("resetConflictTile"):m.length>1?(t("setLeaderGroupsAtWar",m),t("game/setActionType",p.warChooseLeader,{root:!0})):1===m.length&&i("triggerWar",{attacker:m[0][0],defender:m[0][1]})},triggerWar({commit:e,getters:t},i){if(!i||!i.attacker||!i.defender)return;e("game/resetConflictData",null,{root:!0}),i.attacker.tileType===c.priest&&e("game/setConflictTileType",c.temple,{root:!0}),i.attacker.tileType===c.king&&e("game/setConflictTileType",c.settlement,{root:!0}),i.attacker.tileType===c.trader&&e("game/setConflictTileType",c.market,{root:!0}),i.attacker.tileType===c.farmer&&e("game/setConflictTileType",c.farm,{root:!0});const s={...i.attacker},r={...i.defender};e("updateTile",{...s,isHighlighted:!0}),e("updateTile",{...r,isHighlighted:!0}),e("game/setActionPlayerId",s.playerId,{root:!0}),e("game/setConflictAttackerLeader",s,{root:!0}),e("game/setConflictDefenderLeader",r,{root:!0}),e("game/setConflictAttackerBoardTiles",t.getWarBoardStrength(s),{root:!0}),e("game/setConflictDefenderBoardTiles",t.getWarBoardStrength(r),{root:!0}),e("game/setActionType",p.conflictAttack,{root:!0}),e("game/setConflictType",f.war,{root:!0}),e("game/setConflictWinnerPlayerId",0,{root:!0}),e("log/logActionMessage",{text:`A War has begun between ${w.getLogToken(s)}\n                and ${w.getLogToken(r)}`},{root:!0})},takeTreasure({getters:e,rootGetters:t,commit:i,dispatch:s},r){i("removeTreasure"),i("players/incrementScore",{playerId:t["game/actionPlayerId"],scoreName:"treasure"},{root:!0}),i("updateTile",{...r,hasTreasure:!1,isHighlighted:!1}),i("resetBoardTileHighlights"),i("log/logActionMessage",{playerId:t["game/actionPlayerId"],text:`retreived a {treasure} from ${w.getCoordinatesByIndex(r.index)}`},{root:!0}),s("checkForTreasureToTake"),e.treasuresToTake<1&&(i("game/setActionPlayerId",t["game/turnPlayerId"],{root:!0}),i("game/setActionType",p.playTile,{root:!0}))}},it={setTreasureCounts(e){const t=e.map.filter((e=>e===m.treasure||e===m.priorityTreasure)).length;e.initialTreasures=t,e.remainingTreasures=t},removeTreasure(e){e.remainingTreasures--},addTile(e,t){if(t&&e.tiles.length-1>=t.index){let i={index:t.index,tileType:t.tileType,isLeaderTile:t.isLeaderTile,playerId:t?.playerId??0,monumentType:t?.monumentType};e.tiles.splice(t.index,1,i)}},removeTile(e,t){let i={index:t.index,tileType:c.empty,isLeaderTile:!1,playerId:0,monumentType:null};e.tiles.splice(t.index,1,i)},updateTile(e,t){let i=e.tiles[t.index];i&&(i={...t},e.tiles.splice(t.index,1,i))},setTiles(e,t){t&&s["default"].set(e,"tiles",[...t])},resetRegions(e){e.regions.splice(0)},addRegion(e,t){e.regions.push({regionIndex:e.regions.length,tileIndexes:[...t.tileIndexes],isKingdom:t.isKingdom})},setAvailableTileLocations(e,t){t&&s["default"].set(e,"availableTileLocations",t)},resetAvailableTileLocations(e){e.availableTileLocations.splice(0)},setAvailableMonumentLocations(e,t){t&&s["default"].set(e,"availableMonumentLocations",t)},resetAvailableMonumentLocations(e){e.availableMonumentLocations.splice(0)},resetBoardTileHighlights(e){e.tiles.forEach((e=>e.isHighlighted=!1))},setTreasuresToTake(e,t){e.treasuresToTake=t},setConflictTile(e,t){e.conflictTile={...t}},resetConflictTile(e){e.conflictTile=null},setLeaderGroupsAtWar(e,t){e.leaderGroupsAtWar=[...t]},resetLeaderGroupsAtWar(e){e.leaderGroupsAtWar=[]}};var st={namespaced:!0,state:Ye,getters:et,actions:tt,mutations:it};const rt=()=>({players:[]}),at={currentPlayer:(e,t,i,s)=>{let r=s["game/turnPlayerId"];return e.players.filter((e=>e.id===r)).length>0?e.players.filter((e=>e.id===r))[0]:null},getPlayer:e=>t=>{let i=e.players.filter((e=>e.id==t));return i&&i.length>0?i[0]:null},all:e=>e.players},lt={async createNewPlayer({commit:e,state:t,dispatch:i},s){var r=await i("bag/drawTiles",6,{root:!0}),a={id:t.players.length+1,name:s.name,hand:r,leaders:[c.king,c.priest,c.farmer,c.trader],selectedTiles:[],catastropheTiles:2,score:{temple:0,market:0,farm:0,settlement:0,treasure:0},isHuman:s.isHuman};e("addNewPlayer",a),e("game/incrementPlayerCount",null,{root:!0})},async refillPlayerHands({commit:e,state:t,dispatch:i,rootGetters:s}){for(const r of t.players)if(r.hand.length<6){let t=6-r.hand.length,a=await i("bag/drawTiles",t,{root:!0});if(s["game/currentActionType"]===p.gameOver)break;e("addTilesToPlayerHand",{playerId:r.id,tilesToAdd:a})}},async swapTiles({commit:e,dispatch:t},i){if(i){const s=[...i.selectedTiles];e("clearTileSelection",i.id),e("removeTilesFromHand",{playerId:i.id,tilesToRemove:s});let r=await t("bag/drawTiles",s.length,{root:!0});e("addTilesToPlayerHand",{playerId:i.id,tilesToAdd:r})}},addTileSelection({commit:e,rootGetters:t,dispatch:i},s){if(s){let r=t["game/currentActionType"],a=r===p.playTile;a&&e("clearTileSelection",s.playerId),e("addTileSelection",s),a&&i("board/calculateAvailableTileLocations",s,{root:!0})}},removeTileSelection({commit:e},t){e("removeTileSelection",t),e("board/resetAvailableTileLocations",null,{root:!0})},removeSelectedTiles({commit:e,getters:t},i){let s=t.getPlayer(i);s.selectedTiles.forEach((t=>{t.isLeaderTile?e("removeLeaderFromHand",{playerId:i,...t}):t.tileType==c.catastrophe?e("removeCatastropheFromHand",{playerId:i,...t}):e("removeTileFromHand",{playerId:i,...t})})),e("clearTileSelection",i),e("board/resetAvailableTileLocations",null,{root:!0})}},ot={loadPlayers(e,t){e.players=[...t]},clearPlayers(e){e.players.splice(0)},addNewPlayer(e,t){e.players.push(t)},addTileSelection(e,t){e.players.filter((e=>e.id===t.playerId))[0].selectedTiles.push({index:t.index,tileType:t.tileType,isLeaderTile:t.isLeaderTile})},removeTileSelection(e,t){let i=e.players.filter((e=>e.id===t.playerId))[0].selectedTiles,s=i.findIndex((e=>e.index===t.index&&e.isLeaderTile===t.isLeaderTile));i.splice(s,1)},clearTileSelection(e,t){let i=e.players.filter((e=>e.id===t))[0].selectedTiles;i.splice(0,i.length)},removeTileFromHand(e,t){let i=e.players.filter((e=>e.id===t.playerId))[0].hand;i&&i.length>t.index&&i.splice(t.index,1)},removeTilesFromHand(e,t){let i=e.players.filter((e=>e.id===t.playerId))[0].hand,s=t.tilesToRemove.map((e=>e.index));if(i&&i.length>=s.length){let r=i.filter(((e,t)=>!s.includes(t)));e.players.filter((e=>e.id===t.playerId))[0].hand=r}},removeLeaderFromHand(e,t){let i=e.players.filter((e=>e.id===t.playerId))[0].leaders;if(i&&i.includes(t.tileType)){var s=i.indexOf(t.tileType);i.splice(s,1)}},removeCatastropheFromHand(e,t){let i=e.players.filter((e=>e.id===t.playerId))[0];i&&i.catastropheTiles>t.index&&i.catastropheTiles--},addTilesToPlayerHand(e,t){let i=e.players.filter((e=>e.id===t.playerId))[0].hand;i=[...i,...t.tilesToAdd],e.players.filter((e=>e.id===t.playerId))[0].hand=i},addLeaderToPlayer(e,t){let i=e.players.filter((e=>e.id===t.playerId))[0].leaders;i.push(t.tileType),i=i.sort(((e,t)=>e-t))},incrementScore(e,t){let i=1;t.scoreCount&&(i=t.scoreCount),e.players.filter((e=>e.id===t.playerId))[0].score[t.scoreName]+=i}};var nt={namespaced:!0,state:rt,getters:at,actions:lt,mutations:ot};const ct=()=>({bag:[],temples:0,markets:0,settlements:0,farms:0,startingBag:[]}),dt={bag:[],temples:47,markets:30,settlements:30,farms:36},mt={all(e){return e},debugBagStats(e){return{bagCount:e.bag.length,temples:e.temples,markets:e.markets,settlements:e.settlements,farms:e.farms}},bagSpaceRemaining(e){return Math.round(e.bag.length/e.startingBag.length*100)}},pt={init({commit:e}){e("setState",dt),e("fillBag"),e("shuffleBag")},drawTiles({state:e,commit:t,dispatch:i},s){if(s){t("shuffleBag"),s>e.bag.length&&(t("log/logActionMessage",{text:"Game has ended due to running out of tiles"},{root:!0}),i("game/save",null,{root:!0}),t("game/setActionType",p.gameOver,{root:!0}));let r=e.bag.slice(0,s);return t("removeTiles",{numberOfTiles:s,drawnTiles:r}),r}}},ut={fillBag(e){let t=[];e.bag.splice(0),t=[...t,...Array(e.temples).fill(c.temple,0)],t=[...t,...Array(e.markets).fill(c.market,0)],t=[...t,...Array(e.settlements).fill(c.settlement,0)],t=[...t,...Array(e.farms).fill(c.farm,0)],e.bag=[...t]},shuffleBag(e){let t=[...e.bag],i=t.map((e=>({value:e,sort:Math.random()}))).sort(((e,t)=>e.sort-t.sort)).map((({value:e})=>e));e.bag=[...i]},removeTiles(e,t){e.bag.splice(0,t.numberOfTiles),t.drawnTiles.forEach((t=>{t===c.temple&&e.temples--,t===c.market&&e.markets--,t===c.settlement&&e.settlements--,t===c.farm&&e.farms--}))},setStartingBag(e){e.startingBag=[...e.bag]},setState(e,t){Object.assign(e,t)}};var gt={namespaced:!0,state:ct,getters:mt,actions:pt,mutations:ut};const ht=!1,yt=()=>({turnPlayerId:0,actionPlayerId:0,visiblePlayerId:0,numberOfPlayers:0,remainingActions:0,currentActionType:p.loading,conflictType:f.none,conflictAttackerLeader:null,conflictDefenderLeader:null,conflictAttackerTiles:[],conflictDefenderTiles:[],conflictAttackerBoardTiles:[],conflictDefenderBoardTiles:[],conflictTileType:c.empty,conflictWinnerPlayerId:0,remainingMonuments:[],selectedMonumentType:0,snapshot:null}),Tt={turnPlayerId:1,actionPlayerId:1,visiblePlayerId:0,numberOfPlayers:0,remainingActions:2,currentActionType:p.playTile,conflictType:f.none,conflictAttackerLeader:null,conflictDefenderLeader:null,conflictAttackerTiles:[],conflictDefenderTiles:[],conflictAttackerBoardTiles:[],conflictDefenderBoardTiles:[],conflictTileType:c.empty,conflictWinnerPlayerId:0,remainingMonuments:[y.redBlue,y.blueGreen,y.greenRed,y.blackRed,y.blackGreen,y.blackBlue],selectedMonumentType:0,snapshot:null},ft={debug(){return ht},isSaveValid(){if(localStorage.gameState){let e=JSON.parse(localStorage.gameState);return"0.5.1"===e.version}return!1},currentActionType(e){return e.currentActionType},turnPlayerId(e){return e.turnPlayerId},actionPlayerId:e=>e.actionPlayerId,visiblePlayerId:e=>e.visiblePlayerId,remainingActions(e){return e.remainingActions},numberOfPlayers(e){return e.numberOfPlayers},conflictAttackerLeader:e=>e.conflictAttackerLeader,conflictDefenderLeader:e=>e.conflictDefenderLeader,conflictAttackerTiles:e=>e.conflictAttackerTiles,conflictDefenderTiles:e=>e.conflictDefenderTiles,conflictAttackerBoardTiles:e=>e.conflictAttackerBoardTiles,conflictDefenderBoardTiles:e=>e.conflictDefenderBoardTiles,conflictTileType:e=>e.conflictTileType,remainingMonuments:e=>e.remainingMonuments,selectedMonumentType:e=>e.selectedMonumentType,hasSnapshot:e=>!!e.snapshot,conflictType:e=>e.conflictType,conflictWinnerPlayerId:e=>e.conflictWinnerPlayerId},vt={init({commit:e}){e("setState",Tt)},save({state:e,rootGetters:t}){let i={version:"0.5.1"};i.players=t["players/all"],i.tiles=t["board/tiles"],i.bag=t["bag/all"];let s=t["log/messages"];i.log=s.filter((e=>e.messageType!=T.system)),i.game=e,localStorage.gameState=JSON.stringify(i)},load({commit:e,dispatch:t}){if(e("setActionType",p.loading),localStorage.gameState){let i=JSON.parse(localStorage.gameState);e("players/loadPlayers",i.players,{root:!0}),e("board/setTiles",i.tiles,{root:!0}),e("board/setTreasureCounts",i.tiles,{root:!0}),t("board/setRegions",null,{root:!0}),e("bag/setState",i.bag,{root:!0}),e("log/setMessages",i.log,{root:!0}),e("setState",i.game),e("log/logSystemMessage","Game load successful.",{root:!0})}},saveSnapshot({state:e,rootGetters:t,commit:i}){let s={},r=t["players/all"];s.players=[],r.forEach((e=>{s.players.push(JSON.parse(JSON.stringify({...e,selectedTiles:[]})))})),s.log=JSON.parse(JSON.stringify(t["log/messages"])),s.tiles=[...t["board/tiles"]],s.bag=t["bag/all"],s.game={},s.game.turnPlayerId=e.turnPlayerId,s.game.actionPlayerId=e.actionPlayerId,s.game.visiblePlayerId=e.visiblePlayerId,s.game.remainingActions=e.remainingActions,s.game.currentActionType=e.currentActionType,s.game.conflictAttackerLeader={...e.conflictAttackerLeader},s.game.conflictDefenderLeader={...e.conflictDefenderLeader},s.game.conflictAttackerTiles=[...e.conflictAttackerTiles],s.game.conflictDefenderTiles=[...e.conflictDefenderTiles],s.game.remainingMonuments=[...e.remainingMonuments],s.game.selectedMonumentType=0,i("setSnapshot",{...s})},restoreSnapshot({state:e,getters:t,commit:i,dispatch:s}){t.hasSnapshot&&(i("players/loadPlayers",e.snapshot.players,{root:!0}),i("board/setTiles",e.snapshot.tiles,{root:!0}),i("board/setTreasureCounts",e.snapshot.tiles,{root:!0}),s("board/setRegions",null,{root:!0}),i("bag/setState",e.snapshot.bag,{root:!0}),i("log/setMessages",[...e.snapshot.log],{root:!0}),i("setState",{...e,...e.snapshot.game}))},resolveConflict({getters:e,commit:t,dispatch:i}){let s=null,r=null,a=0,l=0,o=[];const n=e.conflictAttackerBoardTiles.length+e.conflictAttackerTiles.length,d=e.conflictDefenderBoardTiles.length+e.conflictDefenderTiles.length;if(n>d?(a=n,l=d,s={...e.conflictAttackerLeader},r={...e.conflictDefenderLeader},o=[...e.conflictDefenderBoardTiles]):(a=d,l=n,s={...e.conflictDefenderLeader},r={...e.conflictAttackerLeader},o=[...e.conflictAttackerBoardTiles]),e.conflictType===f.revolt)t("players/incrementScore",{playerId:s.playerId,scoreName:w.getTileNameByType(c.temple)},{root:!0});else{let i=0;for(const s of o)s.hasTreasure||s.tileType===e.conflictTileType&&(i++,t("board/removeTile",{index:s.index},{root:!0}));t("players/incrementScore",{playerId:s.playerId,scoreName:w.getTileNameByType(e.conflictTileType),scoreCount:i},{root:!0})}t("players/addLeaderToPlayer",r,{root:!0}),t("board/removeTile",{index:r.index},{root:!0}),t("board/resetBoardTileHighlights",null,{root:!0}),i("board/checkForDisplacedLeader",null,{root:!0}),i("board/setRegions",null,{root:!0}),t("setConflictWinnerPlayerId",s.playerId),t("log/logActionMessage",{text:`${w.getLogToken(s)} (${a})\n                wins the ${e.conflictType===f.revolt?"Revolt":"War"}\n                against ${w.getLogToken(r)} (${l})`},{root:!0})}},bt={nextActivePlayer(e){let t=e.turnPlayerId>=e.numberOfPlayers?1:e.turnPlayerId+1;e.turnPlayerId=t,e.actionPlayerId=t,e.remainingActions=2,e.currentActionType=p.playTile},incrementPlayerCount(e){e.numberOfPlayers++},actionCompleted(e){e.remainingActions--},setActionType(e,t){e.currentActionType=t},setState(e,t){Object.assign(e,t)},setActionPlayerId(e,t){e.visiblePlayerId!==t&&(e.visiblePlayerId=0),e.actionPlayerId=t},setVisiblePlayerId(e,t){e.visiblePlayerId=t},setConflictAttackerLeader(e,t){e.conflictAttackerLeader={...t}},setConflictDefenderLeader(e,t){e.conflictDefenderLeader={...t}},setConflictAttackerTiles(e,t){e.conflictAttackerTiles=[...t]},setConflictDefenderTiles(e,t){e.conflictDefenderTiles=[...t]},setConflictAttackerBoardTiles(e,t){e.conflictAttackerBoardTiles=[...t]},setConflictDefenderBoardTiles(e,t){e.conflictDefenderBoardTiles=[...t]},setConflictTileType(e,t){e.conflictTileType=t},resetConflictData(e){e.conflictAttackerLeader=null,e.conflictDefenderLeader=null,e.conflictAttackerTiles=[],e.conflictDefenderTiles=[],e.conflictAttackerBoardTiles=[],e.conflictDefenderBoardTiles=[],e.conflictTileType=c.empty,e.conflictWinnerPlayerId=0,e.conflictType=f.none},removeFromRemainingMonuments(e,t){let i=e.remainingMonuments.findIndex((e=>e===t));e.remainingMonuments.splice(i,1)},resetSelectedMonumentType(e){e.selectedMonumentType=0},setSelectedMonumentType(e,t){e.selectedMonumentType=t},setSnapshot(e,t){e.snapshot={...t}},clearSnapshot(e){e.snapshot=null},setConflictType(e,t){e.conflictType=t},setConflictWinnerPlayerId(e,t){e.conflictWinnerPlayerId=t}};var Ct={namespaced:!0,state:yt,getters:ft,actions:vt,mutations:bt};i(541);const wt=()=>({messages:[]}),xt={messages(e){return e.messages}},kt={init(e){s["default"].set(e,"messages",[])},logActionMessage(e,t){e.messages.unshift({timestamp:(new Date).toLocaleString("en-US"),messageType:T.action,text:t.text,playerId:t.playerId})},logSystemMessage(e,t){e.messages.unshift({timestamp:(new Date).toLocaleString("en-US"),messageType:T.system,text:t})},setMessages(e,t){s["default"].set(e,"messages",t)}};var St={namespaced:!0,state:wt,getters:xt,mutations:kt};const At=()=>({showCoordinates:!0,showIndexes:!1,showKingdoms:!0,showLogTimestamps:!0,showLeaderStrength:!0}),_t={all(e){return e},showCoordinates(e){return e.showCoordinates},showIndexes(e){return e.showIndexes},showKingdoms(e){return e.showKingdoms},showLogTimestamps(e){return e.showLogTimestamps},showLeaderStrength(e){return e.showLeaderStrength}},It={save({state:e}){localStorage.gameSettings=JSON.stringify(e)},load({commit:e}){if(localStorage.gameSettings){let t=JSON.parse(localStorage.gameSettings);e("setState",t)}}},Lt={setState(e,t){Object.assign(e,t)},setShowCoordinates(e,t){e.showCoordinates=t},setShowIndexes(e,t){e.showIndexes=t},setShowKingdoms(e,t){e.showKingdoms=t},setShowLogTimestamps(e,t){e.showLogTimestamps=t},setShowLeaderStrength(e,t){e.showLeaderStrength=t}};var Mt={namespaced:!0,state:At,getters:_t,actions:It,mutations:Lt};s["default"].use(l.ZP);const Pt=!1;var Bt=new l.ZP.Store({modules:{board:st,players:nt,bag:gt,game:Ct,settings:Mt,log:St},strict:Pt});s["default"].use(Ue.XG7),s["default"].use(Xe.A7),s["default"].config.productionTip=!1,new s["default"]({store:Bt,render:e=>e(Je)}).$mount("#app")}},t={};function i(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,i),a.exports}i.m=e,function(){var e=[];i.O=function(t,s,r,a){if(!s){var l=1/0;for(d=0;d<e.length;d++){s=e[d][0],r=e[d][1],a=e[d][2];for(var o=!0,n=0;n<s.length;n++)(!1&a||l>=a)&&Object.keys(i.O).every((function(e){return i.O[e](s[n])}))?s.splice(n--,1):(o=!1,a<l&&(l=a));if(o){e.splice(d--,1);var c=r();void 0!==c&&(t=c)}}return t}a=a||0;for(var d=e.length;d>0&&e[d-1][2]>a;d--)e[d]=e[d-1];e[d]=[s,r,a]}}(),function(){i.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return i.d(t,{a:t}),t}}(),function(){i.d=function(e,t){for(var s in t)i.o(t,s)&&!i.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})}}(),function(){i.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){i.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={143:0};i.O.j=function(t){return 0===e[t]};var t=function(t,s){var r,a,l=s[0],o=s[1],n=s[2],c=0;if(l.some((function(t){return 0!==e[t]}))){for(r in o)i.o(o,r)&&(i.m[r]=o[r]);if(n)var d=n(i)}for(t&&t(s);c<l.length;c++)a=l[c],i.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return i.O(d)},s=self["webpackChunkriver_game"]=self["webpackChunkriver_game"]||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))}();var s=i.O(void 0,[998],(function(){return i(1439)}));s=i.O(s)})();
//# sourceMappingURL=app.c06f0d08.js.map