{"version":3,"file":"js/app.c06f0d08.js","mappings":"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AC,YAAYC,GACR,OAAOA,EAAQ,IAAGA,EAAKC,YAAYD,EAAKxB,YAAc,IAC1D,GAGJ,SAASC,EAAcgB,GACnB,OAAOA,EACFS,MAAM,aACNpI,KAAIqI,GAAQA,EAAKC,gBACjBC,KAAK,IACd,CACA,SAASR,EAAeJ,GACpB,OAAOA,EACFS,MAAM,aACNG,KAAK,IACd,CAEA,QCiEA,GACAC,KAAAA,YACAC,SAAAA,KACA,gBACA,mBACA,eACA,iBACA,kBACA,oBACA,cACA,yBACA,yBACA,mBACA,qBAEA,iBACA,6BACA,kBACA,eACA,uBAEAvH,aACA,mDACA,EACAR,SACA,oEACA,EACAU,aACA,wBACA,EACAC,0BACA,qFACA,EACAU,qBACA,+BACA,EACAR,kBACA,8BACA,iEACA,oCACA,EACAK,cACA,iDACA,EACAE,0BACA,iDACA,EACAX,2BAAA,4CACAG,0BAAA,gDACAE,2BAAA,iDACAC,mCAAA,yDACAC,uBAAA,6CACAgB,0BAAA,gFACAgG,0BAAA,gFACAC,uBAAA,6EACAC,uBAAA,6EACA/G,6BAAA,wDACAF,iBACA,qCACA,8BACA,2BACA,yBACA,GAEAkH,QAAAA,CACA,kBACA,yCACA,qDACA,wDACA,oDACA,6BACA,2CACAC,KAAAA,yBAAAA,KAAAA,mBAAAA,sDACA,CAAAC,MAAAA,IACA,oDACA,yCAEA,kDACA,sCACA,4CACA,kCAEA,EACA,+BACA,wDACA,qDACA,4BACA,WAAApI,MAAAA,CAAAA,gBAAA,sEACA,+BACAqI,KAAAA,KACAC,WAAAA,KACAC,UAAAA,SACAC,QAAAA,YACAC,cAAAA,UACAC,YAAAA,iBAEAC,MAAAA,UACA,IACA,2CACAnB,SAAAA,KAAAA,OAAAA,GACAW,KAAAA,4BAEA,iBACA,GAEA,EACAzG,uBACA,iCACA,6CACA,iDACA,4CAAAkH,eAAAA,GAAA,IAEA,oDACA,2CACA,kDACA,EACAvH,iBACA,wDACA,qDACA,gEACA,oDACA,EACAM,gBACA,gEACA,yCACA,mDACA,EACA,0BACA,2DACA,qCACA,oDACA,4CAEA,iCAEA,EACAJ,iBA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ACAzD,KAAAA,OACA0D,SAAAA,QACAE,SAAAA,QACAC,YAAAA,QACA/E,aAAAA,CACA+F,KAAAA,OACAC,UAAAA,IAGA7D,OACA,OACA8D,gBAAAA,EAAAA,MACAC,kBAAAA,EAAAA,MAEA,EACA9D,UACA,0BACA,eACA,8BACA,8BACA,MACA,iBACA,4BACA,gCACA,MACA,gBACA,8BACA,gCACA,MACA,gBACA,kCACA,gCACA,MACA,kBACA,kCACA,gCACA,MACA,iBACA,kCACA,8BACA,MAEA,EACAzB,SAAAA,CACAkF,mBACA,6DACA,EACAC,qBACA,+DACA,EACAF,gBACA,SAEA,OADA,iEACA,CACA,EACAD,gBACA,SAIA,OAHAA,GAAAA,KAAAA,SAAAA,YAAAA,GACAA,GAAAA,KAAAA,SAAAA,YAAAA,GACAA,GAAAA,KAAAA,cAAAA,KAAAA,SAAAA,WAAAA,GACA,CACA,IC7E4P,MCQxP,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,WACA,MAIF,GAAe,GAAiB,QC0BhC,IACAjF,KAAAA,YACAyF,WAAAA,CACAC,iBAAAA,EACAC,WAAAA,EACAC,aAAAA,IAEA3B,MAAAA,CACA4B,cAAAA,OACAnO,MAAAA,OACAgI,KAAAA,QAEA+B,OACA,OACAqE,0BAAAA,EACA7C,aAAAA,EACAC,UAAAA,KAEA,EACAxB,UACA,8CACA,sEACA,mBACA,qEAEA,EACAzB,SAAAA,KACA,oBACA,eACA,kBACA,cACA,2BAEA,mBACA,sBAEA,gBACA,QACA,oBACA,iBACA,wBAEA,iBACA,iBAEA0D,cACA,0CACA,EACAjB,UACA,8CACA,EACAS,0BACA,gDACA,EACAC,2BACA,gDACA,EACAC,0BACA,gDACA,EACAC,uBACA,gDACA,EACAG,eACA,uCACA,0BACA,iEACA,GACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEA,2CACA,EACAT,eACA,kBACA,wBACA,0CACA,EACA5I,YACA,QACA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","sources":["webpack://river-game/./src/App.vue","webpack://river-game/./src/components/ActionBar.vue","webpack://river-game/./src/common/constants.js","webpack://river-game/./src/common/helpers.js","webpack://river-game/src/components/ActionBar.vue","webpack://river-game/./src/components/ActionBar.vue?6932","webpack://river-game/./src/components/ActionBar.vue?0dd9","webpack://river-game/./src/components/GameEnd.vue","webpack://river-game/src/components/GameEnd.vue","webpack://river-game/./src/components/GameEnd.vue?6cff","webpack://river-game/./src/components/GameEnd.vue?d300","webpack://river-game/./src/components/GameLog.vue","webpack://river-game/src/components/GameLog.vue","webpack://river-game/./src/components/GameLog.vue?5eb4","webpack://river-game/./src/components/GameLog.vue?22b6","webpack://river-game/./src/components/MapSquare.vue","webpack://river-game/./src/components/CivilizationTile.vue","webpack://river-game/src/components/CivilizationTile.vue","webpack://river-game/./src/components/CivilizationTile.vue?d398","webpack://river-game/./src/components/CivilizationTile.vue?fe40","webpack://river-game/./src/components/LeaderTile.vue","webpack://river-game/src/components/LeaderTile.vue","webpack://river-game/./src/components/LeaderTile.vue?7f61","webpack://river-game/./src/components/LeaderTile.vue?4f22","webpack://river-game/./src/components/MonumentTile.vue","webpack://river-game/src/components/MonumentTile.vue","webpack://river-game/./src/components/MonumentTile.vue?3a24","webpack://river-game/./src/components/MonumentTile.vue?bf3a","webpack://river-game/src/components/MapSquare.vue","webpack://river-game/./src/components/MapSquare.vue?2420","webpack://river-game/./src/components/MapSquare.vue?4da4","webpack://river-game/./src/components/MonumentCard.vue","webpack://river-game/src/components/MonumentCard.vue","webpack://river-game/./src/components/MonumentCard.vue?f915","webpack://river-game/./src/components/MonumentCard.vue?0fbb","webpack://river-game/./src/components/NavBar.vue","webpack://river-game/src/components/NavBar.vue","webpack://river-game/./src/components/NavBar.vue?dd1b","webpack://river-game/./src/components/NavBar.vue?3457","webpack://river-game/./src/components/PlayerHand.vue","webpack://river-game/src/components/PlayerHand.vue","webpack://river-game/./src/components/PlayerHand.vue?d054","webpack://river-game/./src/components/PlayerHand.vue?ba5e","webpack://river-game/./src/components/PlayerCard.vue","webpack://river-game/src/components/PlayerCard.vue","webpack://river-game/./src/components/PlayerCard.vue?6029","webpack://river-game/./src/components/PlayerCard.vue?8d01","webpack://river-game/./src/components/ProgressCard.vue","webpack://river-game/src/components/ProgressCard.vue","webpack://river-game/./src/components/ProgressCard.vue?3969","webpack://river-game/./src/components/ProgressCard.vue?22e3","webpack://river-game/./src/components/WarBoard.vue","webpack://river-game/src/components/WarBoard.vue","webpack://river-game/./src/components/WarBoard.vue?fb72","webpack://river-game/./src/components/WarBoard.vue?80f4","webpack://river-game/src/App.vue","webpack://river-game/./src/App.vue?51dd","webpack://river-game/./src/App.vue?0e40","webpack://river-game/./src/store/modules/board.js","webpack://river-game/./src/store/modules/players.js","webpack://river-game/./src/store/modules/bag.js","webpack://river-game/./src/store/modules/game.js","webpack://river-game/./src/store/modules/log.js","webpack://river-game/./src/store/modules/settings.js","webpack://river-game/./src/store/index.js","webpack://river-game/./src/main.js","webpack://river-game/webpack/bootstrap","webpack://river-game/webpack/runtime/chunk loaded","webpack://river-game/webpack/runtime/compat get default export","webpack://river-game/webpack/runtime/define property getters","webpack://river-game/webpack/runtime/global","webpack://river-game/webpack/runtime/hasOwnProperty shorthand","webpack://river-game/webpack/runtime/make namespace object","webpack://river-game/webpack/runtime/jsonp chunk loading","webpack://river-game/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('nav-bar',{on:{\"new-game\":_vm.startNewGame}}),_c('div',{staticClass:\"main-app container-fluid text-center mb-5 p-0\"},[(!_vm.showGameEnd)?_c('action-bar'):_vm._e(),(_vm.showGameEnd)?_c('div',{staticClass:\"row no-gutters mt-1\"},[_c('div',{staticClass:\"col-12 col-xl-10 offset-xl-1\"},[_c('game-end',{staticClass:\"m-1\"})],1)]):_vm._e(),(_vm.showWarBoard)?_c('div',{staticClass:\"row no-gutters mt-2\"},[_c('div',{staticClass:\"col-12 col-xl-10 offset-xl-1\"},[_c('war-board',{staticClass:\"m-1\"})],1)]):_vm._e(),_c('div',{staticClass:\"row no-gutters mt-2\"},[_c('div',{staticClass:\"col-12 col-lg-9 col-xl-7 order-2 order-xl-1\"},[_c('div',{staticClass:\"map-container\"},[_c('div',{staticClass:\"grid\"},_vm._l((_vm.map),function(mapSquare,index){return _c('map-square',{key:index,staticClass:\"cell\",attrs:{\"map-square-type\":mapSquare,\"index\":index,\"tile\":_vm.getTile(index)}})}),1)])]),_c('div',{staticClass:\"col-12 col-xl-2 order-1 order-xl-2 mb-2 m-xl-0\"},[_c('div',{staticClass:\"row no-gutters justify-content-center align-items-center\"},[(_vm.showMonumentsAboveHand)?_c('div',{staticClass:\"col-12 col-md-6 mb-2 px-1 d-block d-lg-none\"},[_c('monument-card')],1):_vm._e(),_c('div',{staticClass:\"col-12 col-md-10 col-lg-8 col-xl-12 px-1 px-xl-0 pr-xl-3\"},[_c('player-hand',{attrs:{\"player\":_vm.getPlayer(_vm.actionPlayerId),\"selectable\":\"\"}})],1),_c('div',{staticClass:\"col-12 mt-3 pr-3 d-none d-xl-block\"},[_c('monument-card')],1)])]),_c('div',{staticClass:\"col-12 col-lg-3 order-3\"},[_c('div',{staticClass:\"row no-gutters\"},[_vm._l((_vm.allPlayers),function(player,index){return _c('div',{key:index,staticClass:\"col-6 col-lg-12 px-1\",class:index != 0 ? 'mt-2' : 'mt-2 mt-lg-0'},[_c('player-card',{class:{'border-danger': player?.id === _vm.actionPlayerId},attrs:{\"player\":_vm.getPlayer(player?.id),\"show-score\":player?.id === _vm.visiblePlayerId && player?.id === _vm.actionPlayerId}})],1)}),_c('div',{staticClass:\"col-6 col-lg-12 px-1 mt-2 d-block d-xl-none\"},[_c('monument-card',{staticClass:\"h-100\"})],1),_c('div',{staticClass:\"col-6 col-lg-12 px-1 mt-2\"},[_c('progress-card')],1),_c('div',{staticClass:\"col-12 px-1 mt-2\"},[_c('game-log')],1)],2)])])],1),_c('b-navbar',{staticClass:\"border-top py-0\",attrs:{\"type\":\"light\",\"variant\":\"light\",\"fixed\":\"bottom\"}},[_c('b-navbar-nav',{staticClass:\"mx-auto\",attrs:{\"small\":\"\"}},[_c('b-nav-text',[_vm._v(\"Version: \"+_vm._s(_vm.appVersion))])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row no-gutters justify-content-center align-items-center bg-light w-100 py-2 border-bottom action-bar\"},[_c('div',{staticClass:\"col-12 col-sm-auto m-0 mr-sm-2\"},[_c('b-icon',{staticClass:\"mr-2\",attrs:{\"icon\":_vm.leaderIcon}}),(_vm.showCurrentPlayerMessage)?_c('div',{staticClass:\"d-inline-block\"},[_vm._v(\" \"+_vm._s(_vm.playerName)+\"'s Turn: \"+_vm._s(_vm.remainingActionsMessage)+\" \")]):_vm._e(),(_vm.showTakeTreasureMessage)?_c('div',{staticClass:\"d-inline-block\"},[_vm._v(\" \"+_vm._s(_vm.playerName)+\" \"+_vm._s(_vm.treasureMessage)+\" \")]):_vm._e(),(_vm.showBuildMonumentMessage)?_c('div',{staticClass:\"d-inline-block\"},[_vm._v(\" \"+_vm._s(_vm.playerName)+\": Select a monument to build. \")]):_vm._e(),(_vm.showBuildMonumentMultipleMessage)?_c('div',{staticClass:\"d-inline-block\"},[_vm._v(\" \"+_vm._s(_vm.playerName)+\": Select the top-left location for the monument. \")]):_vm._e(),(_vm.showSwapTilesMessage)?_c('div',{staticClass:\"d-inline-block\"},[_vm._v(\" \"+_vm._s(_vm.playerName)+\": Select tiles to discard and redraw. \")]):_vm._e(),(_vm.showWarMessage)?_c('div',{staticClass:\"d-inline-block\"},[_vm._v(\" \"+_vm._s(_vm.playerName)+\": Select\"),_c('b-icon',{staticClass:\"mx-2\",class:_vm.warTileType,attrs:{\"icon\":\"square-fill\"}}),_vm._v(\"to commit for support. \")],1):_vm._e(),(_vm.showWarChooseLeaderMessage)?_c('div',{staticClass:\"d-inline-block\"},[_vm._v(\" \"+_vm._s(_vm.playerName)+\": Select which leaders must battle first. \")]):_vm._e()],1),(_vm.showPlayerActionButtons)?_c('div',{staticClass:\"col-12 col-sm-auto pt-1 pt-sm-0\"},[(_vm.showCurrentPlayerMessage)?_c('div',[_c('b-button',{staticClass:\"mr-2\",attrs:{\"variant\":\"primary\",\"size\":\"sm\",\"disabled\":_vm.areActionsDepleted},on:{\"click\":_vm.beginSwapTiles}},[_vm._v(\" Swap Tiles \")]),_c('b-button',{staticClass:\"mr-2\",attrs:{\"variant\":\"warning\",\"size\":\"sm\",\"disabled\":!_vm.hasSnapshot},on:{\"click\":_vm.undoLastAction}},[_vm._v(\" Undo \")]),_c('b-button',{staticClass:\"mr-2\",attrs:{\"variant\":\"danger\",\"size\":\"sm\",\"hidden\":_vm.areActionsDepleted},on:{\"click\":_vm.showPassTurnMessageBox}},[_vm._v(\" Pass \")]),_c('b-button',{attrs:{\"variant\":\"success\",\"size\":\"sm\",\"hidden\":!_vm.areActionsDepleted},on:{\"click\":_vm.doEndTurn}},[_vm._v(\" End Turn \")])],1):_vm._e(),(_vm.showBuildMonumentMessage || _vm.showBuildMonumentMultipleMessage)?_c('div',[_c('b-button',{attrs:{\"variant\":\"warning\",\"size\":\"sm\"},on:{\"click\":_vm.passMonumentBuilding}},[_vm._v(\" Pass \")])],1):_vm._e(),(_vm.showSwapTilesMessage)?_c('div',[_c('b-button',{staticClass:\"mr-2\",attrs:{\"variant\":\"warning\",\"size\":\"sm\"},on:{\"click\":_vm.stopSwapTiles}},[_vm._v(\" Cancel \")]),_c('b-button',{attrs:{\"variant\":\"danger\",\"size\":\"sm\"},on:{\"click\":_vm.doSwapTiles}},[_vm._v(\" Discard \"+_vm._s(_vm.player.selectedTiles.length)+\" Tile\"+_vm._s(_vm.player.selectedTiles.length === 1 ? '' : 's')+\" \")])],1):_vm._e(),(_vm.showWarMessage)?_c('div',[(_vm.showRevoltAttackMessage)?_c('b-button',{staticClass:\"mr-2\",attrs:{\"variant\":\"warning\",\"size\":\"sm\",\"disabled\":!_vm.hasSnapshot},on:{\"click\":_vm.undoLastAction}},[_vm._v(\" Undo \")]):_vm._e(),_c('b-button',{attrs:{\"variant\":\"success\",\"size\":\"sm\"},on:{\"click\":_vm.commitTilesToConflict}},[_vm._v(\" Commit \"+_vm._s(_vm.player.selectedTiles.length)+\" Tiles \")])],1):_vm._e()]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const tileTypes = {\n    empty: 0,\n    temple: 1,\n    market: 2,\n    settlement: 3,\n    farm: 4,\n    catastrophe: 5,\n    king: 6,\n    priest: 7,\n    farmer: 8,\n    trader: 9,\n    generic: 10,\n    monumentTopLeft: 11,\n    monumentTopRight: 12,\n    monumentBottomLeft: 13,\n    monumentBottomRight: 14\n}\n\nexport const leaderTileTypes = [\n    tileTypes.king,\n    tileTypes.priest,\n    tileTypes.farmer,\n    tileTypes.trader\n]\n\nexport const mapTypes = {\n    ground: 0,\n    river: 1,\n    treasure: 2,\n    priorityTreasure: 3\n}\n\nexport const actionTypes = {\n    loading: 0,\n    playTile: 1,\n    swapTiles: 2,\n    takeTreasure: 3,\n    buildMonument: 4,\n    buildMonumentMultiple: 5,\n    conflictAttack: 6,\n    conflictDefend: 7,\n    conflictChooseLeader: 8,\n    gameOver: 9\n}\n\nexport const playerIcons = [\n    'suit-diamond-fill',\n    'star-fill',\n    'suit-heart-fill',\n    'egg-fill'\n]\n\nexport const boardStats = {\n    columns: 16,\n    rows: 11\n}\n\nexport const breakpoints = {\n    small: 576,\n    medium: 768,\n    large: 992,\n    extraLarge: 1200\n}\n\nexport const monumentTypes = {\n    redBlue: 1,\n    blueGreen: 2,\n    greenRed: 3,\n    blackRed: 4,\n    blackGreen: 5,\n    blackBlue: 6,\n    redMonuments: [1,3,4],\n    blueMonuments: [1,2,6],\n    greenMonuments: [2,3,5],\n    blackMonuments: [4,5,6]\n}\n\nexport const messageTypes = {\n    system: 0,\n    action: 1\n}\n\nexport const conflictTypes = {\n    none: 0,\n    revolt: 1,\n    war: 2\n}\n","import { actionTypes, tileTypes, playerIcons, boardStats, messageTypes, monumentTypes } from './constants'\n\nconst helpers = {\n    getTileNameByType(tileType) {\n        return pascalToKebab(Object.keys(tileTypes).find(key => tileTypes[key] === tileType));\n    },\n    getCoordinatesByIndex(index) {\n        var row = Math.floor(index / boardStats.columns) + 10\n        return `${row.toString(36).toUpperCase()}-${(index % boardStats.columns + 1)}`;\n    },\n    getPlayerIconNameById(id) {\n        return playerIcons[id - 1]\n    },\n    getActionNameByType(actionTypeId) {\n        return Object.keys(actionTypes).find(key => actionTypes[key] === actionTypeId);\n    },\n    getMessageNameByType(messageType) {\n        return pascalToKebab(Object.keys(messageTypes).find(key => messageTypes[key] === messageType));\n    },\n    capitalizeFirstLetter(string) {\n        return string && string[0].toUpperCase() + string.slice(1);\n    },\n    getMonumentNameByType(monumentType) {\n        return this.capitalizeFirstLetter(\n            pascalToProper(Object.keys(monumentTypes).find(key => monumentTypes[key] === monumentType))\n        ).replace(' ', ' & ');\n    },\n    getLogToken(tile) {\n        return tile ? `{${tile.playerId}|${tile.tileType}}` : null\n    }\n}\n\nfunction pascalToKebab(string) {\n    return string\n        .split(/(?=[A-Z])/)\n        .map(word => word.toLowerCase())\n        .join('-')\n}\nfunction pascalToProper(string) {\n    return string\n        .split(/(?=[A-Z])/)\n        .join(' ')\n}\n\nexport default helpers;","<template>\n    <div class=\"row no-gutters justify-content-center align-items-center bg-light w-100 py-2 border-bottom action-bar\">\n        <div class=\"col-12 col-sm-auto m-0 mr-sm-2\">\n            <b-icon :icon=\"leaderIcon\" class=\"mr-2\" />\n            <div v-if=\"showCurrentPlayerMessage\" class=\"d-inline-block\">\n                {{playerName}}'s Turn: {{ remainingActionsMessage }}\n            </div>\n            <div v-if=\"showTakeTreasureMessage\" class=\"d-inline-block\">\n                {{playerName}} {{treasureMessage}}\n            </div>\n            <div v-if=\"showBuildMonumentMessage\" class=\"d-inline-block\">\n                {{playerName}}: Select a monument to build.\n            </div>\n            <div v-if=\"showBuildMonumentMultipleMessage\" class=\"d-inline-block\">\n                {{playerName}}: Select the top-left location for the monument.\n            </div>\n            <div v-if=\"showSwapTilesMessage\" class=\"d-inline-block\">\n                {{playerName}}: Select tiles to discard and redraw.\n            </div>\n            <div v-if=\"showWarMessage\" class=\"d-inline-block\">\n                {{playerName}}: Select<b-icon icon=\"square-fill\" :class=\"warTileType\" class=\"mx-2\" />to commit for support.\n            </div>\n            <div v-if=\"showWarChooseLeaderMessage\" class=\"d-inline-block\">\n                {{playerName}}: Select which leaders must battle first.\n            </div>\n        </div>\n        <div v-if=\"showPlayerActionButtons\" class=\"col-12 col-sm-auto pt-1 pt-sm-0\">\n            <div v-if=\"showCurrentPlayerMessage\">\n                <b-button\n                    variant=\"primary\"\n                    size=\"sm\"\n                    @click=\"beginSwapTiles\"\n                    :disabled=\"areActionsDepleted\"\n                    class=\"mr-2\">\n                    Swap Tiles\n                </b-button>\n                <b-button\n                    variant=\"warning\"\n                    size=\"sm\"\n                    @click=\"undoLastAction\"\n                    :disabled=\"!hasSnapshot\"\n                    class=\"mr-2\">\n                    Undo\n                </b-button>\n                <b-button\n                    variant=\"danger\"\n                    size=\"sm\"\n                    :hidden=\"areActionsDepleted\"\n                    @click=\"showPassTurnMessageBox\"\n                    class=\"mr-2\">\n                    Pass\n                </b-button>\n                <b-button\n                    variant=\"success\"\n                    size=\"sm\"\n                    :hidden=\"!areActionsDepleted\"\n                    @click=\"doEndTurn\">\n                    End Turn\n                </b-button>\n            </div>\n            <div v-if=\"showBuildMonumentMessage || showBuildMonumentMultipleMessage\">\n                <b-button\n                    variant=\"warning\"\n                    size=\"sm\"\n                    @click=\"passMonumentBuilding\">\n                    Pass\n                </b-button>\n            </div>\n            <div v-if=\"showSwapTilesMessage\">\n                <b-button\n                    variant=\"warning\"\n                    size=\"sm\"\n                    @click=\"stopSwapTiles\"\n                    class=\"mr-2\">\n                    Cancel\n                </b-button>\n                <b-button\n                    variant=\"danger\"\n                    size=\"sm\"\n                    @click=\"doSwapTiles\">\n                    Discard {{ player.selectedTiles.length }} Tile{{ player.selectedTiles.length === 1 ? '' : 's' }}\n                </b-button>\n            </div>\n            <div v-if=\"showWarMessage\">\n                <b-button\n                    v-if=\"showRevoltAttackMessage\"\n                    variant=\"warning\"\n                    size=\"sm\"\n                    @click=\"undoLastAction\"\n                    :disabled=\"!hasSnapshot\"\n                    class=\"mr-2\">\n                    Undo\n                </b-button>\n                <b-button\n                    variant=\"success\"\n                    size=\"sm\"\n                    @click=\"commitTilesToConflict\">\n                    Commit {{ player.selectedTiles.length}} Tiles\n                </b-button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport helpers from '../common/helpers'\nimport { actionTypes, conflictTypes } from '../common/constants'\n\nexport default {\n    name: 'ActionBar',\n    computed: {\n        ...mapGetters('game', [\n            'remainingActions',\n            'turnPlayerId',\n            'actionPlayerId',\n            'visiblePlayerId',\n            'currentActionType',\n            'hasSnapshot',\n            'conflictAttackerLeader',\n            'conflictDefenderLeader',\n            'conflictTileType',\n            'conflictType'\n        ]),\n        ...mapGetters('board', [\n            'availableMonumentLocations',\n            'treasuresToTake',\n            'conflictTile',\n            'remainingTreasures'\n        ]),\n        leaderIcon() {\n            return helpers.getPlayerIconNameById(this.actionPlayerId)\n        },\n        player() {\n            return this.$store.getters['players/getPlayer'](this.actionPlayerId)\n        },\n        playerName() {\n            return this.player?.name\n        },\n        remainingActionsMessage() {\n            return `${this.remainingActions} Action${(this.remainingActions == 1 ? '' : 's')} Remaining. `\n        },\n        areActionsDepleted() {\n            return this.remainingActions == 0\n        },\n        treasureMessage() {\n            return this.treasuresToTake > 1\n                ? `must select 1 of ${this.treasuresToTake} Treasures to acquire.`\n                : 'must select a Treasure to acquire.'\n        },\n        warTileType() {\n            return helpers.getTileNameByType(this.conflictTileType)\n        },\n        showPlayerActionButtons() {\n            return this.visiblePlayerId === this.actionPlayerId\n        },\n        showCurrentPlayerMessage() { return this.currentActionType === actionTypes.playTile },\n        showTakeTreasureMessage() { return this.currentActionType === actionTypes.takeTreasure },\n        showBuildMonumentMessage() { return this.currentActionType === actionTypes.buildMonument },\n        showBuildMonumentMultipleMessage() { return this.currentActionType === actionTypes.buildMonumentMultiple },\n        showSwapTilesMessage() { return this.currentActionType === actionTypes.swapTiles },\n        showRevoltAttackMessage() { return this.conflictType === conflictTypes.revolt && this.currentActionType === actionTypes.conflictAttack },\n        showRevoltDefendMessage() { return this.conflictType === conflictTypes.revolt && this.currentActionType === actionTypes.conflictDefend },\n        showWarAttackMessage() { return this.conflictType === conflictTypes.war && this.currentActionType === actionTypes.conflictAttack },\n        showWarDefendMessage() { return this.conflictType === conflictTypes.war && this.currentActionType === actionTypes.conflictDefend },\n        showWarChooseLeaderMessage() { return this.currentActionType === actionTypes.conflictChooseLeader },\n        showWarMessage() {\n            return this.showRevoltAttackMessage ||\n                this.showRevoltDefendMessage ||\n                this.showWarAttackMessage ||\n                this.showWarDefendMessage\n        }\n    },\n    methods: {\n        async doEndTurn() {\n            this.$store.commit('game/clearSnapshot')\n            this.$store.commit('board/resetBoardTileHighlights')\n            this.$store.commit('board/resetAvailableTileLocations')\n            this.$store.dispatch('board/checkForMonumentScore')\n            if (this.remainingTreasures <= 2) {\n                this.$store.commit('log/logActionMessage', {\n                    text: `Game has ended due to ${this.remainingTreasures.remainingTreasures} treasure remaining on the board`\n                }, { root: true })\n                this.$store.commit('game/setActionType', actionTypes.gameOver)\n                this.$store.dispatch('game/save')\n            }\n            await this.$store.dispatch('players/refillPlayerHands')\n            if (this.currentActionType !== actionTypes.gameOver) {\n                this.$store.commit('game/nextActivePlayer')\n                this.$store.dispatch('game/save')\n            }\n        },\n        async showPassTurnMessageBox() {\n            this.$store.commit('board/resetAvailableTileLocations')\n            this.$store.commit('board/resetBoardTileHighlights')\n            const h = this.$createElement\n            const message = h('div', { class: ['text-center'] }, [ 'Are you sure?', h('br'), `You have ${this.remainingActionsMessage}` ])\n            this.$bvModal.msgBoxConfirm(message, {\n                size: 'sm',\n                buttonSize: 'sm',\n                okVariant: 'danger',\n                okTitle: 'Pass Turn',\n                cancelVariant: 'primary',\n                footerClass: 'border-top-0'\n            })\n            .then(async result => {\n                if (result) {\n                    this.$store.commit('log/logActionMessage', {\n                        playerId: this.player.id,\n                        text: `passed their turn`\n                    })\n                    await this.doEndTurn()\n                }\n            })\n        },\n        passMonumentBuilding() {\n            this.showBuildMonumentMessage = false\n            this.availableMonumentLocations.forEach(location => {\n                let tile = this.$store.getters['board/tile'](location.index)\n                this.$store.commit('board/updateTile', { ...tile, isHighlighted: false })\n            })\n            this.$store.commit('game/setActionType', actionTypes.playTile)\n            this.$store.commit('game/actionCompleted')\n            this.$store.commit('board/checkForTreasureToTake')\n        },\n        beginSwapTiles() {\n            this.$store.commit('board/resetAvailableTileLocations')\n            this.$store.commit('board/resetBoardTileHighlights')\n            this.$store.commit('players/clearTileSelection', this.player.id)\n            this.$store.commit('game/setActionType', actionTypes.swapTiles)\n        },\n        stopSwapTiles() {\n            this.$store.commit('players/clearTileSelection', this.player.id)\n            this.$store.commit('game/clearSnapshot')\n            this.$store.commit('game/setActionType', actionTypes.playTile)\n        },\n        async doSwapTiles() {\n            await this.$store.dispatch('players/swapTiles', {...this.player})\n            if (this.currentActionType !== actionTypes.gameOver) {\n                this.$store.commit('game/setActionType', actionTypes.playTile)\n                this.$store.commit('game/actionCompleted')\n            } else {\n                this.$store.dispatch('game/save')\n            }\n        },\n        undoLastAction() {\n            this.$store.dispatch('game/restoreSnapshot')\n            this.$store.commit('game/clearSnapshot')\n            this.$store.commit('board/resetBoardTileHighlights')\n        },\n        commitTilesToConflict() {\n            if (this.currentActionType === actionTypes.conflictAttack) {\n                this.$store.commit('game/clearSnapshot')\n                this.$store.commit('game/setConflictAttackerTiles', this.player.selectedTiles)\n                this.$store.commit('players/removeTilesFromHand', { playerId: this.player.id, tilesToRemove: [...this.player.selectedTiles] })\n                this.$store.commit('players/clearTileSelection', this.player.id)\n                this.$store.commit('game/setActionPlayerId', this.conflictDefenderLeader.playerId)\n                this.$store.commit('game/setActionType', actionTypes.conflictDefend)\n            } else if (this.currentActionType === actionTypes.conflictDefend) {\n                this.$store.commit('game/setConflictDefenderTiles', this.player.selectedTiles)\n                this.$store.commit('players/removeTilesFromHand', { playerId: this.player.id, tilesToRemove: [...this.player.selectedTiles] })\n                this.$store.commit('players/clearTileSelection', this.player.id)\n                this.$store.dispatch('game/resolveConflict')\n                this.$store.dispatch('board/checkForWar', this.conflictTile)\n                if (this.currentActionType !== actionTypes.conflictAttack && this.currentActionType !== actionTypes.conflictChooseLeader) {\n                    this.$store.commit('game/setActionPlayerId', this.turnPlayerId)\n                    this.$store.commit('game/setActionType', actionTypes.playTile)\n                    this.$store.commit('game/actionCompleted')\n                    this.$store.dispatch('board/checkForTreasureToTake')\n                }\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .action-bar {\n        min-height: 50px;\n    }\n\n    .temple {\n        color: $color-temple;\n    }\n\n    .market {\n        color: $color-market;\n    }\n\n    .settlement {\n        color: $color-settlement;\n    }\n\n    .farm {\n        color: $color-farm;\n    }\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ActionBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ActionBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ActionBar.vue?vue&type=template&id=00ff8bad&scoped=true&\"\nimport script from \"./ActionBar.vue?vue&type=script&lang=js&\"\nexport * from \"./ActionBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ActionBar.vue?vue&type=style&index=0&id=00ff8bad&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"00ff8bad\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card overflow-hidden\"},[_vm._l((_vm.confettiInstances),function(index){return _c('div',{key:index,class:'confetti-' + index})}),_vm._m(0),_c('div',{staticClass:\"card-body pt-0 pb-2 px-2\"},[_c('div',{staticClass:\"row no-gutters align-items-center pb-2\"},[_c('div',{staticClass:\"col\"},[_vm._v(\" \"+_vm._s(_vm.getWinnerName(_vm.winningPlayerId))+\" is the Winner! \")])]),_vm._l((_vm.playerScores),function(playerScore,index){return _c('div',{key:index,staticClass:\"row no-gutters align-items-center justify-content-center small\"},[_c('div',{staticClass:\"col-auto\"},[_vm._v(\" #\"+_vm._s(index + 1)+\": \"+_vm._s(playerScore.player.name)+\" (\"+_vm._s(playerScore.score[0])+\" points) \")])])})],2)],2)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card-header bg-transparent border-0 py-2\"},[_c('strong',[_vm._v(\"Game Over\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"card overflow-hidden\">\n        <div v-for=\"index in confettiInstances\" :key=\"index\" :class=\"'confetti-' + index\"></div>\n        <div class=\"card-header bg-transparent border-0 py-2\"><strong>Game Over</strong></div>\n        <div class=\"card-body pt-0 pb-2 px-2\">\n            <div class=\"row no-gutters align-items-center pb-2\">\n                <div class=\"col\">\n                    {{ getWinnerName(winningPlayerId) }} is the Winner!\n                </div>\n            </div>\n            <div v-for=\"(playerScore, index) in playerScores\"\n                :key=\"index\"\n                class=\"row no-gutters align-items-center justify-content-center small\">\n                <div class=\"col-auto\">\n                    #{{ index + 1 }}: {{ playerScore.player.name }} ({{ playerScore.score[0] }} points)\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n    name: 'GameEnd',\n    data() {\n        return {\n            confettiInstances: [],\n            playerScores: [],\n            winningPlayerId: 0\n        }\n    },\n    mounted() {\n        this.confettiInstances = [...Array(150).keys()],\n        this.playerScores =  this.getScores()\n        this.winningPlayerId = this.playerScores[0].player.id\n        this.$store.commit('log/logActionMessage', {\n            playerId: this.winningPlayerId,\n            text: `wins the game with 0 points`\n        })\n    },\n    computed: {\n        ...mapGetters('game', [\n            'currentActionType'\n        ]),\n        ...mapGetters('players', {\n            allPlayers: 'all'\n        }),\n    },\n    methods: {\n        getWinnerName(playerId) {\n            const player = this.$store.getters['players/getPlayer'](playerId)\n            return player ? player.name : ''\n        },\n        getScores() {\n            let playerScores = []\n            for (const player of this.allPlayers) {\n                let treasureScore = player.score.treasure\n                let scored = [\n                    player.score.temple,\n                    player.score.farm,\n                    player.score.settlement,\n                    player.score.market\n                ]\n                for (let i = 0; i < treasureScore; i++) {\n                    let minimumScore = Math.min(...scored)\n                    let index = scored.indexOf(minimumScore)\n                    scored.splice(index, 1)\n                    scored.push(++minimumScore)\n                }\n                scored.sort((a,b) => a - b)\n                playerScores.push({\n                    player: { ...player },\n                    score:[...scored]\n                })\n            }\n            // sort taking into account tie breaker\n            playerScores.sort((a, b) => {\n                let firstScore = b.score[0] - a.score[0]\n                if (firstScore) return firstScore\n                let secondScore = b.score[1] - a.score[1]\n                if (secondScore) return secondScore\n                let thirdScore = b.score[2] - a.score[2]\n                if (thirdScore) return thirdScore\n                let fourthScore = b.score[3] - a.score[3]\n                if (fourthScore) return fourthScore\n            })\n            return playerScores\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n[class|=\"confetti\"] {\n    position: absolute;\n}\n\n$colors: (tomato, orange, yellow, dodgerblue, green, purple);\n\n@for $i from 0 through 150 {\n    $w: random(8);\n    $l: random(100);\n    .confetti-#{$i} {\n        width: #{$w}px;\n        height: #{$w*0.4}px;\n        background-color: nth($colors, random(6));\n        top: -50%;\n        left: unquote($l+\"%\");\n        opacity: random() + 0.5;\n        transform: rotate(#{random()*360}deg);\n        animation: drop-#{$i} unquote(4+random()+\"s\") unquote(-20+random()+\"s\") infinite;\n    }\n\n    @keyframes drop-#{$i} {\n        100% {\n            top: 150%;\n            left: unquote($l+random(5)+\"%\");\n        }\n    }\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GameEnd.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GameEnd.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GameEnd.vue?vue&type=template&id=349b2501&scoped=true&\"\nimport script from \"./GameEnd.vue?vue&type=script&lang=js&\"\nexport * from \"./GameEnd.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GameEnd.vue?vue&type=style&index=0&id=349b2501&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"349b2501\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card\"},[_vm._m(0),_c('div',{staticClass:\"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1\"},[_c('div',{staticClass:\"scroll border text-left p-2 small\"},_vm._l((_vm.messages),function(message,index){return _c('div',{key:index,staticClass:\"log\",class:_vm.getClass(message)},[(_vm.showLogTimestamps)?_c('span',[_vm._v(_vm._s(message.timestamp)+\": \")]):_vm._e(),(message.playerId >= 0)?_c('b-icon',{staticClass:\"mr-1\",attrs:{\"icon\":_vm.getLeaderIcon(message)}}):_vm._e(),_vm._l((message.text.split(' ')),function(word,index){return _c('span',{key:index},[(word[0] === '{')?_c('span',[_c('b-icon',_vm._b({},'b-icon',_vm.getMessageIcon(word),false)),_vm._v(\" \")],1):(word)?_c('span',[_vm._v(_vm._s(word)+\" \")]):_vm._e()])})],2)}),0)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card-header bg-transparent border-0 py-2\"},[_c('strong',[_vm._v(\"Log\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"card\">\n        <div class=\"card-header bg-transparent border-0 py-2\"><strong>Log</strong></div>\n        <div class=\"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1\">\n            <div class=\"scroll border text-left p-2 small\">\n                <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"log\" :class=\"getClass(message)\">\n                    <span v-if=\"showLogTimestamps\">{{ message.timestamp }}: </span><b-icon v-if=\"message.playerId >= 0\" :icon=\"getLeaderIcon(message)\" class=\"mr-1\" />\n                    <span v-for=\"(word, index) in message.text.split(' ')\" :key=\"index\">\n                        <span v-if=\"word[0] === '{'\"><b-icon v-bind=\"getMessageIcon(word)\" />&nbsp;</span>\n                        <span v-else-if=\"word\">{{ word }} </span>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport helpers from '../common/helpers'\nimport { leaderTileTypes } from '@/common/constants';\n\nexport default {\n    name: 'GameLog',\n    computed: {\n        ...mapGetters('log', [\n            'messages'\n        ]),\n        ...mapGetters('settings', [\n            'showLogTimestamps'\n        ]),\n    },\n    methods: {\n        getTimestamp(message) {\n            return message.timestamp.toLocaleString(\"en-US\")\n        },\n        getLeaderIcon(message) {\n            return helpers.getPlayerIconNameById(message.playerId)\n        },\n        getMessageIcon(word) {\n            const properties = { icon: '', class: '' };\n            word = word.replace(/\\r?\\n|\\r/g, '')\n            const wordParts = word.substring(1, word.length - 1).split('|')\n            if (wordParts[0] === 'treasure') {\n                properties.icon = 'circle-fill'\n                properties.class = 'treasure'\n            } else {\n                properties.icon = helpers.getPlayerIconNameById(wordParts[0] * 1)\n            }\n            if (wordParts.length === 2) {\n                const isLeader = leaderTileTypes.includes(wordParts[1] * 1)\n                if (!isLeader) properties.icon = 'square-fill'\n                properties.class = helpers.getTileNameByType(wordParts[1] * 1)\n            }\n            return properties\n        },\n        getClass(message) {\n            return helpers.getMessageNameByType(message.messageType)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .scroll {\n        overflow: auto;\n        max-height: 200px;\n    }\n\n    .log {\n        font-size: 0.8em;\n        color: black;\n\n        &.system {\n            color: gray;\n        }\n    }\n\n    .temple, .priest {\n        color: $color-temple;\n    }\n\n    .market, .trader {\n        color: $color-market;\n    }\n\n    .settlement, .king {\n        color: $color-settlement;\n    }\n\n    .farm, .farmer {\n        color: $color-farm;\n    }\n\n    .treasure {\n        color: $color-treasure\n    }\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GameLog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GameLog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GameLog.vue?vue&type=template&id=0b4f5a10&scoped=true&\"\nimport script from \"./GameLog.vue?vue&type=script&lang=js&\"\nexport * from \"./GameLog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GameLog.vue?vue&type=style&index=0&id=0b4f5a10&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0b4f5a10\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"map-square ground\",class:_vm.getMapSquareClass(),on:{\"click\":_vm.doMapSquareClick}},[(_vm.hasTile && !_vm.tile.isLeaderTile)?_c('civilization-tile',{attrs:{\"tile-type\":_vm.tile.tileType,\"highlight\":_vm.tile.isHighlighted,\"has-treasure\":_vm.tile.hasTreasure,\"is-conflict-tile\":_vm.isConflictTile}}):_vm._e(),(_vm.hasTile && _vm.tile.isLeaderTile)?_c('leader-tile',{attrs:{\"tile-type\":_vm.tile.tileType,\"map-index\":_vm.index,\"highlight\":_vm.tile.isHighlighted,\"player\":_vm.getPlayer(),\"show-pointer\":_vm.showLeaderPointer,\"show-strength\":_vm.showLeaderStrength}}):_vm._e(),(_vm.showMonument)?_c('monument-tile',{staticClass:\"monument\",attrs:{\"monumentType\":_vm.tile.monumentType}}):_vm._e(),(_vm.isRiverTile && _vm.riverPath === '=')?_c('div',{staticClass:\"river river-horizontal\"}):_vm._e(),(_vm.isRiverTile && _vm.riverPath === '║')?_c('div',{staticClass:\"river river-vertical\"}):_vm._e(),(_vm.isRiverTile && _vm.showRiverHorizontalLeft)?_c('div',{staticClass:\"river river-horizontal-left\"}):_vm._e(),(_vm.isRiverTile && _vm.showRiverHorizontalRight)?_c('div',{staticClass:\"river river-horizontal-right\"}):_vm._e(),(_vm.isRiverTile && _vm.showRiverVerticalBottom)?_c('div',{staticClass:\"river river-vertical-bottom\"}):_vm._e(),(_vm.isRiverTile && _vm.showRiverVerticalTop)?_c('div',{staticClass:\"river river-vertical-top\"}):_vm._e(),(_vm.showKingdoms)?_c('div',{staticClass:\"kingdom\",style:(_vm.kingdomStyle)}):_vm._e(),(_vm.showCoordinates)?_c('div',{staticClass:\"coordinates coordinates-text-size\",class:{'text-white': _vm.hasTile, 'pointer': ((_vm.tile && _vm.tile.isHighlighted || _vm.showLeaderPointer))}},[_vm._v(\" \"+_vm._s(_vm.coordinates)+\" \")]):_vm._e(),(_vm.showIndexes && _vm.debug)?_c('div',{staticClass:\"coordinates coordinates-text-size d-flex justify-content-center\",class:{'text-white': _vm.hasTile, 'pointer': ((_vm.tile && _vm.tile.isHighlighted || _vm.showLeaderPointer))}},[_c('span',{staticClass:\"align-self-end\"},[_vm._v(_vm._s(_vm.index))])]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tile\",class:_vm.tileClass,style:(_vm.tileStyle)},[(_vm.hasTreasure)?_c('div',{staticClass:\"treasure-icon\",style:(_vm.treasureStyle)}):_vm._e(),(_vm.isConflictTile)?_c('div',{staticClass:\"conflict-tile text-dark bg-warning\"},[_c('b-icon',{staticClass:\"w-100 h-100 light\",attrs:{\"icon\":\"x-square\"}})],1):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"tile\" :class=\"tileClass\" :style=\"tileStyle\">\n        <div v-if=\"hasTreasure\" class=\"treasure-icon\" :style=\"treasureStyle\"></div>\n        <div v-if=\"isConflictTile\" class=\"conflict-tile text-dark bg-warning\"><b-icon icon=\"x-square\" class=\"w-100 h-100 light\" /></div>\n    </div>\n</template>\n\n<script>\nimport { tileTypes, breakpoints } from '../common/constants'\nimport helpers from '../common/helpers'\n\nexport default {\n    name: 'CivilizationTile',\n    props: {\n        tileType: Number,\n        selected: Boolean,\n        highlight: Boolean,\n        disabled: Boolean,\n        hasTreasure: Boolean,\n        showPointer: Boolean,\n        isConflictTile: Boolean,\n        size: Number\n    },\n    data() {\n        return {\n            calculatedSize: 0\n        }\n    },\n    mounted() {\n        window.addEventListener(\"resize\", this.onWindowResize);\n        this.onWindowResize()\n    },\n    unmounted() {\n        window.removeEventListener(\"resize\", this.onWindowResize);\n    },\n    computed: {\n        tileClass() {\n            let cssClass = helpers.getTileNameByType(this.tileType)\n            cssClass += this.selected ? ' selected' : ''\n            cssClass += this.highlight ? ' highlight' : ''\n            cssClass += this.showPointer || this.highlight ? ' pointer' : ''\n            cssClass += this.disabled ? ' disabled' : ''\n            return cssClass\n        },\n        tileStyle() {\n            let style = ''\n            let size = this.size ? this.size : this.calculatedSize\n            if (this.size) style += `height: ${size}px; width: ${size}px;`\n            if (this.tileType === tileTypes.catastrophe) {\n                style += `background: repeating-linear-gradient(`\n                style += `135deg,`\n                style += `#eed202,`\n                style += `#eed202 ${size/4}px,`\n                style += `black ${size/4}px,`\n                style += `black ${size/2}px);`\n            }\n            return style\n        },\n        treasureStyle() {\n            let style = 'top: 32.5%; left: 32.5%;'\n            if (this.tileType === tileTypes.monumentBottomLeft)\n                style = 'top: 40%; left: 20%;'\n            if (this.tileType === tileTypes.monumentBottomRight)\n                style = 'top: 40%; left: 40%;'\n            if (this.tileType === tileTypes.monumentTopLeft)\n                style = 'top: 20%; left: 20%;'\n            if (this.tileType === tileTypes.monumentTopRight)\n                style = 'top: 20%; left: 40%;'\n\n            return style;\n        }\n    },\n    methods: {\n        onWindowResize() {\n            var windowWidth = window.innerWidth;\n            this.calculatedSize = 50\n            if (windowWidth <= breakpoints.large) this.calculatedSize = 40\n            if (windowWidth <= breakpoints.medium) this.calculatedSize = 30\n            if (windowWidth <= breakpoints.small) this.calculatedSize = 20\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .tile {\n        height: 90%;\n        width: 90%;\n        border-radius: 4px;\n        z-index: 3;\n    }\n\n    .selected {\n        box-shadow: 0px 0px 0 4px red;\n    }\n\n    .highlight {\n        box-shadow: 0 0 4px 4px yellow;\n    }\n\n    .temple {\n        background: $color-temple;\n    }\n\n    .market {\n        background: $color-market;\n    }\n\n    .settlement {\n        background: $color-settlement;\n    }\n\n    .farm {\n        background: $color-farm;\n    }\n\n    .generic {\n        background: $color-generic;\n    }\n\n    .treasure-icon {\n        height: 35%;\n        width: 35%;\n        background-color: gold;\n        border-radius: 50%;\n        position: absolute;\n    }\n\n    .conflict-tile {\n        height: 90%;\n        width: 90%;\n        border-radius: 4px;\n        position: absolute;\n    }\n\n    .monument-top-left {\n        background-color: $color-generic;\n    }\n\n    .monument-top-right {\n        background-color: $color-generic;\n    }\n\n    .monument-bottom-left {\n        background-color: $color-generic;\n    }\n\n    .monument-bottom-right {\n        background-color: $color-generic;\n    }\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CivilizationTile.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CivilizationTile.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CivilizationTile.vue?vue&type=template&id=10199314&scoped=true&\"\nimport script from \"./CivilizationTile.vue?vue&type=script&lang=js&\"\nexport * from \"./CivilizationTile.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CivilizationTile.vue?vue&type=style&index=0&id=10199314&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"10199314\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tile d-inline-block\",class:_vm.tileClass,style:(_vm.tileStyle)},[_c('b-icon',{staticClass:\"h-100 w-100\",class:_vm.iconClass,attrs:{\"icon\":_vm.icon}}),(_vm.showStrength)?_c('div',{staticClass:\"strength strength-text-size\"},[_vm._v(_vm._s(_vm.boardStrength))]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"tile d-inline-block\" :class=\"tileClass\" :style=\"tileStyle\">\n        <b-icon class=\"h-100 w-100\" :icon=\"icon\" :class=\"iconClass\" />\n        <div v-if=\"showStrength\" class=\"strength strength-text-size\">{{ boardStrength }}</div>\n    </div>\n</template>\n\n<script>\nimport helpers from '../common/helpers'\n\nexport default {\n    name: 'LeaderTile',\n    props: {\n        tileType: Number,\n        player: Object,\n        mapIndex: Number,\n        selected: Boolean,\n        highlight: Boolean,\n        disabled: Boolean,\n        showPointer: Boolean,\n        size: Number,\n        showStrength: Boolean,\n        showEmpty: Boolean,\n    },\n    computed: {\n        tileClass() {\n            let cssClass = this.selected ? 'selected' : ''\n            cssClass += this.highlight ? ' highlight' : ''\n            cssClass += this.showPointer && !this.isEmpty || (this.isEmpty && this.highlight) ? ' pointer' : ''\n            cssClass += this.disabled ? ' disabled' : ''\n            return cssClass\n        },\n        tileStyle() {\n            return this.size ? `height: ${this.size}px; width: ${this.size}px;` : ''\n        },\n        iconClass() {\n            var leaderClass = helpers.getTileNameByType(this.tileType)\n            if (this.isEmpty) leaderClass += ' empty'\n            return leaderClass\n        },\n        icon() {\n            return helpers.getPlayerIconNameById(this.player.id)\n        },\n        isEmpty() {\n            return !this.player.leaders.includes(this.tileType) && this.showEmpty\n        },\n        boardStrength() {\n            if (this.mapIndex >= 0) {\n                return this.$store.getters['board/getWarBoardStrength']({ tileType: this.tileType, index: this.mapIndex }).length\n            }\n            return null\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .tile {\n        height: 90%;\n        width: 90%;\n        border-radius: 4px;\n        z-index: 3;\n    }\n    .selected {\n        box-shadow: 0 0 0 1px white, 0 0 0 4px red;\n    }\n    .highlight {\n        box-shadow: 0 0 4px 4px yellow;\n    }\n    .king {\n        color: $color-settlement;\n        stroke: $color-settlement;\n        stroke-width: 0;\n    }\n    .priest {\n        color: $color-temple;\n        stroke: $color-temple;\n        stroke-width: 0;\n    }\n    .farmer {\n        color: $color-farm;\n        stroke: $color-farm;\n        stroke-width: 0;\n    }\n    .trader {\n        color: $color-market;\n        stroke: $color-market;\n        stroke-width: 0;\n    }\n    .empty {\n        color: GhostWhite;\n        stroke-width: 1px;\n        stroke-dasharray: 1, 2;\n        stroke-linecap: round;\n    }\n    .strength {\n        position: absolute;\n        top: 0%;\n        left: 0%;\n        align-content: center;\n        color: white;\n        height: 100%;\n        width: 100%;\n    }\n\n    .strength-text-size {\n        font-size: 0.75em;\n    }\n\n    @media (max-width: 577px) {\n        .strength-text-size {\n            font-size: 0.55em;\n        }\n    }\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LeaderTile.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LeaderTile.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LeaderTile.vue?vue&type=template&id=73c32123&scoped=true&\"\nimport script from \"./LeaderTile.vue?vue&type=script&lang=js&\"\nexport * from \"./LeaderTile.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LeaderTile.vue?vue&type=style&index=0&id=73c32123&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"73c32123\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('b-iconstack',{staticClass:\"tile-monument\",class:_vm.monumentClass,style:(_vm.monumentStyle)},[_c('b-icon',{class:_vm.primaryTileClass,attrs:{\"stacked\":\"\",\"icon\":\"octagon-fill\"}}),_c('b-icon',{class:_vm.secondaryTileClass,attrs:{\"stacked\":\"\",\"icon\":\"octagon-fill\",\"scale\":\"0.4\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <b-iconstack class=\"tile-monument\" :style=\"monumentStyle\" :class=\"monumentClass\">\n            <b-icon stacked icon=\"octagon-fill\" :class=\"primaryTileClass\"></b-icon>\n            <b-icon stacked icon=\"octagon-fill\" scale=\"0.4\" :class=\"secondaryTileClass\"></b-icon>\n        </b-iconstack>\n    </div>\n</template>\n\n<script>\nimport helpers from '../common/helpers'\nimport { tileTypes, monumentTypes } from '../common/constants'\n\nexport default {\n    name: 'MonumentTile',\n    props: {\n        size: Number,\n        selected: Boolean,\n        disabled: Boolean,\n        showPointer: Boolean,\n        monumentType: {\n            type: Number,\n            required: true\n        }\n    },\n    data() {\n        return {\n            primaryTileType: tileTypes.empty,\n            secondaryTileType: tileTypes.empty\n        }\n    },\n    mounted() {\n        switch (this.monumentType) {\n            case monumentTypes.redBlue:\n                this.primaryTileType = tileTypes.temple\n                this.secondaryTileType = tileTypes.farm\n                break;\n            case monumentTypes.blueGreen:\n                this.primaryTileType = tileTypes.farm\n                this.secondaryTileType = tileTypes.market\n                break;\n            case monumentTypes.greenRed:\n                this.primaryTileType = tileTypes.market\n                this.secondaryTileType = tileTypes.temple\n                break;\n            case monumentTypes.blackRed:\n                this.primaryTileType = tileTypes.settlement\n                this.secondaryTileType = tileTypes.temple\n                break;\n            case monumentTypes.blackGreen:\n                this.primaryTileType = tileTypes.settlement\n                this.secondaryTileType = tileTypes.market\n                break;\n            case monumentTypes.blackBlue:\n                this.primaryTileType = tileTypes.settlement\n                this.secondaryTileType = tileTypes.farm\n                break;\n        }\n    },\n    computed: {\n        primaryTileClass() {\n            return `${helpers.getTileNameByType(this.primaryTileType)}-monument`\n        },\n        secondaryTileClass() {\n            return `${helpers.getTileNameByType(this.secondaryTileType)}-monument`\n        },\n        monumentStyle() {\n            let style = ''\n            if (this.size) style += `height: ${this.size}px; width: ${this.size}px;`\n            return style\n        },\n        monumentClass() {\n            let monumentClass = ''\n            monumentClass += this.selected ? ' selected' : ''\n            monumentClass += this.disabled ? ' disabled' : ''\n            monumentClass += this.showPointer && !this.disabled ? ' pointer' : ''\n            return monumentClass\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .selected {\n        border-radius: 4px;\n        box-shadow: 0 0 0 2px white, 0 0 0 5px red;\n    }\n    .tile-monument {\n        height: 100%;\n        width: 100%;\n    }\n    .temple-monument {\n        color: $color-temple;\n    }\n    .market-monument {\n        color: $color-market;\n    }\n    .settlement-monument {\n        color: $color-settlement;\n    }\n    .farm-monument {\n        color: $color-farm;\n    }\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MonumentTile.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MonumentTile.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MonumentTile.vue?vue&type=template&id=46e2198a&scoped=true&\"\nimport script from \"./MonumentTile.vue?vue&type=script&lang=js&\"\nexport * from \"./MonumentTile.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MonumentTile.vue?vue&type=style&index=0&id=46e2198a&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"46e2198a\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class=\"map-square ground\"\n        :class=\"getMapSquareClass()\"\n        @click=\"doMapSquareClick\">\n        <civilization-tile v-if=\"hasTile && !tile.isLeaderTile\"\n            :tile-type=\"tile.tileType\"\n            :highlight=\"tile.isHighlighted\"\n            :has-treasure=\"tile.hasTreasure\"\n            :is-conflict-tile=\"isConflictTile\" />\n        <leader-tile v-if=\"hasTile && tile.isLeaderTile\"\n            :tile-type=\"tile.tileType\"\n            :map-index=\"index\"\n            :highlight=\"tile.isHighlighted\"\n            :player=\"getPlayer()\"\n            :show-pointer=\"showLeaderPointer\"\n            :show-strength=\"showLeaderStrength\" />\n        <monument-tile v-if=\"showMonument\" :monumentType=\"tile.monumentType\" class=\"monument\"/>\n        <div v-if=\"isRiverTile && riverPath === '='\" class=\"river river-horizontal\"></div>\n        <div v-if=\"isRiverTile && riverPath === '║'\" class=\"river river-vertical\"></div>\n        <div v-if=\"isRiverTile && showRiverHorizontalLeft\" class=\"river river-horizontal-left\"></div>\n        <div v-if=\"isRiverTile && showRiverHorizontalRight\" class=\"river river-horizontal-right\"></div>\n        <div v-if=\"isRiverTile && showRiverVerticalBottom\" class=\"river river-vertical-bottom\"></div>\n        <div v-if=\"isRiverTile && showRiverVerticalTop\" class=\"river river-vertical-top\"></div>\n        <div v-if=\"showKingdoms\" class=\"kingdom\" :style=\"kingdomStyle\"></div>\n        <div v-if=\"showCoordinates\"\n            class=\"coordinates coordinates-text-size\"\n            :class=\"{'text-white': hasTile, 'pointer': ((tile && tile.isHighlighted || showLeaderPointer))}\" >\n            {{coordinates}}\n        </div>\n        <div v-if=\"showIndexes && debug\"\n            class=\"coordinates coordinates-text-size d-flex justify-content-center\"\n            :class=\"{'text-white': hasTile, 'pointer': ((tile && tile.isHighlighted || showLeaderPointer))}\">\n            <span class=\"align-self-end\">{{index}}</span>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport CivilizationTile from './CivilizationTile.vue'\nimport LeaderTile from './LeaderTile.vue'\nimport MonumentTile from './MonumentTile.vue'\nimport helpers from '../common/helpers'\nimport { mapTypes, tileTypes, actionTypes } from '../common/constants'\n\nexport default {\n    name: 'MapSquare',\n    components: {\n        CivilizationTile,\n        LeaderTile,\n        MonumentTile\n    },\n    props: {\n        mapSquareType: Number,\n        index: Number,\n        tile: Object\n    },\n    data() {\n        return {\n            isPriorityTreasureSquare: false,\n            isRiverTile: false,\n            riverPath: null\n        }\n    },\n    mounted() {\n        this.isRiverTile = this.mapSquareType === mapTypes.river\n        this.isPriorityTreasureSquare = this.mapSquareType === mapTypes.priorityTreasure\n        if (this.isRiverTile) {\n            this.riverPath = this.$store.getters['board/getRiverPath'](this.index)\n        }\n    },\n    computed: {\n        ...mapGetters('settings', [\n            'showKingdoms',\n            'showCoordinates',\n            'showIndexes',\n            'showLeaderStrength'\n        ]),\n        ...mapGetters('players', [\n            'currentPlayer'\n        ]),\n        ...mapGetters('game', [\n            'debug',\n            'currentActionType',\n            'actionPlayerId',\n            'visiblePlayerId'\n        ]),\n        ...mapGetters('board', [\n            'conflictTile'\n        ]),\n        coordinates() {\n            return helpers.getCoordinatesByIndex(this.index)\n        },\n        hasTile() {\n            return this.tile && this.tile.tileType !== tileTypes.empty\n        },\n        showRiverHorizontalLeft() {\n            return this.riverPath === '╗' || this.riverPath  === '╝'\n        },\n        showRiverHorizontalRight() {\n            return this.riverPath === '╔' || this.riverPath  === '╚'\n        },\n        showRiverVerticalBottom() {\n            return this.riverPath === '╔' || this.riverPath  === '╗'\n        },\n        showRiverVerticalTop() {\n            return this.riverPath === '╚' || this.riverPath  === '╝'\n        },\n        kingdomStyle() {\n            var blankCss = 'background-color: transparent;'\n            if (!this.hasTile) return blankCss\n            const kingdomIndex = this.$store.getters['board/getKingdomIndex'](this.index)\n            const colors = [\n                'FF0000',\n                'FFFF00',\n                '00EAFF',\n                'AA00FF',\n                'FF7F00',\n                'BFFF00',\n                '0095FF',\n                'FF00AA',\n                'FFD400',\n                '6AFF00',\n                '0040FF',\n                'EDB9B9',\n                'B9D7ED',\n                'E7E9B9',\n                'DCB9ED',\n                'B9EDE0',\n                '8F2323',\n                '23628F',\n                '8F6A23',\n                '6B238F',\n                '4F8F23',\n                '000000',\n                '737373',\n                'CCCCCC'\n            ]\n            return kingdomIndex >= 0 ? `background-color: #${colors[kingdomIndex]};` : blankCss\n        },\n        showMonument() {\n            return this.tile &&\n                this.tile.monumentType &&\n                this.tile.tileType === tileTypes.monumentBottomRight\n        },\n        tileTypes() {\n            return tileTypes\n        },\n        showLeaderPointer() {\n            return this.currentPlayer && this.tile &&\n                this.currentPlayer.id === this.tile.playerId &&\n                this.currentActionType === actionTypes.playTile\n        },\n        isConflictTile() {\n            return this.conflictTile && this.conflictTile.index === this.index\n        }\n    }, \n    methods: {\n        getMapSquareClass() {\n            var mapClass = ''\n            let availableTileLocations = this.$store.getters['board/getAvailableTileLocations']\n            if (availableTileLocations && availableTileLocations.includes(this.index))\n                mapClass += ' valid-location'\n            if (this.isPriorityTreasureSquare && this.tile && this.tile.hasTreasure)\n                mapClass += ' priority-treasure'\n            return mapClass;\n        },\n        doMapSquareClick() {\n            if (this.actionPlayerId === this.visiblePlayerId)\n                this.$store.dispatch('board/handleBoardClick', this.tile)\n        },\n        getPlayer() {\n            return this.$store.getters['players/getPlayer'](this.tile.playerId)\n        },\n    }\n}\n</script>\n\n<style scoped>\n    .ground {\n        background: BurlyWood;\n    }\n\n    .water {\n        background: PaleTurquoise;\n    }\n\n    .valid-location {\n        box-shadow: inset -1px -1px 100px 100px rgb(0 255 255 / 35%);\n    }\n\n    .priority-treasure {\n        box-shadow: inset 0px 0px 0px 10px white\n    }\n\n    .map-square {\n        position: relative;\n    }\n\n    .coordinates {\n        cursor: default;\n        height: 95%;\n        width: 100%;\n        position: absolute;\n        z-index: 5;\n        -webkit-user-select: none; /* Safari */\n        -ms-user-select: none; /* IE 10 and IE 11 */\n        user-select: none; /* Standard syntax */\n    }\n\n    .coordinates-text-size {\n        font-size: 0.65em;\n    }\n\n    @media (max-width: 577px) {\n        .coordinates-text-size {\n            font-size: 0.45em;\n        }\n    }\n\n    .river {\n        background: PaleTurquoise;\n        position: absolute;\n        z-index: 2;\n    }\n\n    .river-horizontal {\n        top: 25%;\n        height: 50%;\n        width: 100%;\n    }\n\n    .river-vertical {\n        left: 25%;\n        height: 100%;\n        width: 50%;\n    }\n\n    .river-horizontal-right {\n        height: 50%;\n        width: 75%;\n        right: 0;\n    }\n\n    .river-horizontal-left {\n        height: 50%;\n        width: 75%;\n        left: 0;\n    }\n\n    .river-vertical-top {\n        height: 75%;\n        width: 50%;\n        top: 0;\n    }\n\n    .river-vertical-bottom {\n        height: 75%;\n        width: 50%;\n        bottom: 0;\n    }\n\n    .kingdom {\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        opacity: 30%;\n        z-index: 1;\n    }\n\n    .monument {\n        height: calc(140% + 2px);\n        width: calc(140% + 2px);\n        bottom: 30%;\n        right: 30%;\n        position: absolute;\n        padding: 2px;\n        z-index: 4;\n    }\n\n    @media (max-width: 767.98px) {\n        .monument {\n            height: calc(140%);\n            width: calc(140%);\n            bottom: 30%;\n            right: 30%;\n            position: absolute;\n            padding: 2px;\n            z-index: 4;\n        }\n    }\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapSquare.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapSquare.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapSquare.vue?vue&type=template&id=6445da66&scoped=true&\"\nimport script from \"./MapSquare.vue?vue&type=script&lang=js&\"\nexport * from \"./MapSquare.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MapSquare.vue?vue&type=style&index=0&id=6445da66&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6445da66\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card\"},[_vm._m(0),_c('div',{staticClass:\"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1\"},[_c('div',{staticClass:\"row no-gutters align-items-center\"},[_c('div',{staticClass:\"col-6 col-lg-12 text-right text-lg-center\"},_vm._l((_vm.monumentTypes1),function(monumentType){return _c('monument-tile',{key:monumentType,staticClass:\"d-inline-block mr-2 mb-1\",attrs:{\"size\":_vm.size,\"monument-type\":monumentType,\"selected\":_vm.isSelectedMonument(monumentType),\"disabled\":!_vm.isAvailableMonument(monumentType),\"show-pointer\":_vm.isBuildingMonument},nativeOn:{\"click\":function($event){return _vm.selectMonument(monumentType)}}})}),1),_c('div',{staticClass:\"col-6 col-lg-12 text-left text-lg-center\"},_vm._l((_vm.monumentTypes2),function(monumentType){return _c('monument-tile',{key:monumentType,staticClass:\"d-inline-block mr-2 mb-1\",attrs:{\"size\":_vm.size,\"monument-type\":monumentType,\"selected\":_vm.isSelectedMonument(monumentType),\"disabled\":!_vm.isAvailableMonument(monumentType),\"show-pointer\":_vm.isBuildingMonument},nativeOn:{\"click\":function($event){return _vm.selectMonument(monumentType)}}})}),1)])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card-header bg-transparent border-0 py-2\"},[_c('strong',[_vm._v(\"Monuments\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"card\">\n        <div class=\"card-header bg-transparent border-0 py-2\"><strong>Monuments</strong></div>\n        <div class=\"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1\">\n            <div class=\"row no-gutters align-items-center\">\n                <div class=\"col-6 col-lg-12 text-right text-lg-center\">\n                    <monument-tile\n                        v-for=\"monumentType in monumentTypes1\"\n                        :key=\"monumentType\"\n                        :size=\"size\"\n                        :monument-type=\"monumentType\"\n                        :selected=\"isSelectedMonument(monumentType)\"\n                        :disabled=\"!isAvailableMonument(monumentType)\"\n                        class=\"d-inline-block mr-2 mb-1\"\n                        :show-pointer=\"isBuildingMonument\"\n                        @click.native=\"selectMonument(monumentType)\" />\n                </div>\n                <div class=\"col-6 col-lg-12 text-left text-lg-center\">\n                    <monument-tile\n                        v-for=\"monumentType in monumentTypes2\"\n                        :key=\"monumentType\"\n                        :size=\"size\"\n                        :monument-type=\"monumentType\"\n                        :selected=\"isSelectedMonument(monumentType)\"\n                        :disabled=\"!isAvailableMonument(monumentType)\"\n                        class=\"d-inline-block mr-2 mb-1\"\n                        :show-pointer=\"isBuildingMonument\"\n                        @click.native=\"selectMonument(monumentType)\" />\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport MonumentTile from './MonumentTile.vue'\nimport { actionTypes, breakpoints, tileTypes, monumentTypes } from '../common/constants'\n\nexport default {\n    name: 'MonumentCard',\n    components: {\n        MonumentTile\n    },\n    data() {\n        return {\n            size: 0\n        }\n    },\n    mounted() {\n        window.addEventListener(\"resize\", this.onWindowResize);\n        this.onWindowResize()\n    },\n    unmounted() {\n        window.removeEventListener(\"resize\", this.onWindowResize);\n    },\n    computed: {\n        ...mapGetters('game', [\n            'currentActionType',\n            'remainingMonuments',\n            'selectedMonumentType'\n        ]),\n        ...mapGetters('board', [\n            'availableMonumentLocations'\n        ]),\n        monumentTypes() {\n            return this.remainingMonuments\n        },\n        monumentTypes1() {\n            var max = this.remainingMonuments.length < 3 ? this.remainingMonuments.length : 3\n            return this.remainingMonuments.slice(0, max)\n        },\n        monumentTypes2() {\n            if (this.remainingMonuments.length < 4) return []\n            var max = this.remainingMonuments.length < 6 ? this.remainingMonuments.length : 6\n            return this.remainingMonuments.slice(3, max)\n        },\n        isBuildingMonument() {\n            return this.currentActionType === actionTypes.buildMonument ||\n                this.currentActionType === actionTypes.buildMonumentMultiple\n        }\n    },\n    methods:{\n        isSelectedMonument(monumentType) {\n            return this.isBuildingMonument && this.selectedMonumentType === monumentType\n        },\n        isAvailableMonument(monumentType) {\n            if (!this.isBuildingMonument) return true\n            if (this.availableMonumentLocations && this.availableMonumentLocations.length > 0) {\n                if (monumentTypes.redMonuments.some(x => x === monumentType) &&\n                    this.availableMonumentLocations.some(x => x.tileType === tileTypes.temple))\n                    return true\n                if (monumentTypes.blueMonuments.some(x => x === monumentType) &&\n                    this.availableMonumentLocations.some(x => x.tileType === tileTypes.farm))\n                    return true\n                if (monumentTypes.greenMonuments.some(x => x === monumentType) &&\n                    this.availableMonumentLocations.some(x => x.tileType === tileTypes.market))\n                    return true\n                if (monumentTypes.blackMonuments.some(x => x === monumentType) &&\n                    this.availableMonumentLocations.some(x => x.tileType === tileTypes.settlement))\n                    return true\n            }\n            return false\n        },\n        selectMonument(monumentType) {\n            if (this.isBuildingMonument &&\n                this.isAvailableMonument(monumentType)) {\n                this.$store.commit('game/setSelectedMonumentType', monumentType)\n                if (this.availableMonumentLocations.length === 1) {\n                    this.$store.dispatch('board/buildMonument', {\n                        index: this.availableMonumentLocations[0].index,\n                        monumentType: monumentType\n                    })\n                } else if (this.availableMonumentLocations.length > 1) {\n                    this.availableMonumentLocations.forEach(location => {\n                        let tile = this.$store.getters['board/tile'](location.index)\n                        this.$store.commit('board/updateTile', { ...tile, isHighlighted: true })\n                        this.$store.commit('game/setActionType', actionTypes.buildMonumentMultiple)\n                    })\n                }\n            }\n        },\n        onWindowResize() {\n            var windowWidth = window.innerWidth;\n            this.size = 40\n            if (windowWidth <= breakpoints.medium) this.size = 35\n            if (windowWidth <= breakpoints.small) this.size = 30\n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MonumentCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MonumentCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MonumentCard.vue?vue&type=template&id=58dc39f1&\"\nimport script from \"./MonumentCard.vue?vue&type=script&lang=js&\"\nexport * from \"./MonumentCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('b-navbar',{attrs:{\"toggleable\":\"sm\",\"type\":\"dark\",\"variant\":\"dark\",\"sticky\":\"\"}},[_c('b-button',{attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.$emit('new-game')}}},[_vm._v(\"New Game\")]),_c('b-navbar-nav',{staticClass:\"ml-auto\"},[_c('b-nav-item-dropdown',{attrs:{\"right\":\"\"},scopedSlots:_vm._u([{key:\"button-content\",fn:function(){return [_c('b-icon-gear-fill')]},proxy:true}])},[_c('b-dropdown-form',{staticStyle:{\"width\":\"200px\"},attrs:{\"form-class\":\"px-3\"}},[_c('b-form-checkbox',{staticClass:\"small\",on:{\"change\":_vm.saveSettings},model:{value:(_vm.showCoordinates),callback:function ($$v) {_vm.showCoordinates=$$v},expression:\"showCoordinates\"}},[_vm._v(\" Show Coordinates \")]),(_vm.debug)?_c('b-form-checkbox',{staticClass:\"small\",on:{\"change\":_vm.saveSettings},model:{value:(_vm.showIndexes),callback:function ($$v) {_vm.showIndexes=$$v},expression:\"showIndexes\"}},[_vm._v(\" Show Indexes \")]):_vm._e(),_c('b-form-checkbox',{staticClass:\"small\",on:{\"change\":_vm.saveSettings},model:{value:(_vm.showKingdoms),callback:function ($$v) {_vm.showKingdoms=$$v},expression:\"showKingdoms\"}},[_vm._v(\" Show Kingdoms \")]),_c('b-form-checkbox',{staticClass:\"small\",on:{\"change\":_vm.saveSettings},model:{value:(_vm.showLogTimestamps),callback:function ($$v) {_vm.showLogTimestamps=$$v},expression:\"showLogTimestamps\"}},[_vm._v(\" Show Log Timestamps \")]),_c('b-form-checkbox',{staticClass:\"small\",on:{\"change\":_vm.saveSettings},model:{value:(_vm.showLeaderStrength),callback:function ($$v) {_vm.showLeaderStrength=$$v},expression:\"showLeaderStrength\"}},[_vm._v(\" Show Leader Strength \")])],1)],1),(_vm.debug)?_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.debug-sidebar\",modifiers:{\"debug-sidebar\":true}}],staticClass:\"my-2 my-sm-0 mx-2\",attrs:{\"size\":\"sm\"}},[_vm._v(\"Debug\")]):_vm._e()],1)],1),_c('b-sidebar',{attrs:{\"id\":\"debug-sidebar\",\"right\":\"\",\"shadow\":\"\",\"no-header\":\"\",\"sidebar-class\":\"border-left border-dark text-left mt-5\"}},[_c('div',{staticClass:\"px-3 py-2\"},[_vm._v(\" Number of Players: \"+_vm._s(_vm.numberOfPlayers)),_c('br'),_vm._v(\" Current Action Type: \"+_vm._s(_vm.actionTypeName)),_c('br'),_vm._v(\" Current Turn PlayerId: \"+_vm._s(_vm.turnPlayerId)),_c('br'),_vm._v(\" Current Visible PlayerId: \"+_vm._s(_vm.visiblePlayerId)),_c('br'),_vm._v(\" Current Action PlayerId: \"+_vm._s(_vm.actionPlayerId)),_c('br'),_vm._v(\" Bag: \"+_vm._s(_vm.debugBagStats)),_c('br')])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <b-navbar toggleable=\"sm\" type=\"dark\" variant=\"dark\" sticky>\n            <b-button size=\"sm\" @click=\"$emit('new-game')\">New Game</b-button>\n            <b-navbar-nav class=\"ml-auto\">\n                <b-nav-item-dropdown right>\n                    <template #button-content>\n                        <b-icon-gear-fill />\n                    </template>\n                    <b-dropdown-form form-class=\"px-3\" style=\"width: 200px\">\n                        <b-form-checkbox v-model=\"showCoordinates\" class=\"small\" @change=\"saveSettings\">\n                            Show Coordinates\n                        </b-form-checkbox>\n                        <b-form-checkbox v-if=\"debug\" v-model=\"showIndexes\" class=\"small\" @change=\"saveSettings\">\n                            Show Indexes\n                        </b-form-checkbox>\n                        <b-form-checkbox v-model=\"showKingdoms\" class=\"small\" @change=\"saveSettings\">\n                            Show Kingdoms\n                        </b-form-checkbox>\n                        <b-form-checkbox v-model=\"showLogTimestamps\" class=\"small\" @change=\"saveSettings\">\n                            Show Log Timestamps\n                        </b-form-checkbox>\n                        <b-form-checkbox v-model=\"showLeaderStrength\" class=\"small\" @change=\"saveSettings\">\n                            Show Leader Strength\n                        </b-form-checkbox>\n                    </b-dropdown-form>\n                </b-nav-item-dropdown>\n                <b-button v-if=\"debug\" size=\"sm\" class=\"my-2 my-sm-0 mx-2\" v-b-toggle.debug-sidebar>Debug</b-button>\n            </b-navbar-nav>\n        </b-navbar>\n        <b-sidebar\n            id=\"debug-sidebar\"\n            right shadow no-header\n            sidebar-class=\"border-left border-dark text-left mt-5\">\n            <div class=\"px-3 py-2\">\n                Number of Players: {{ numberOfPlayers }}<br />\n                Current Action Type: {{ actionTypeName }}<br />\n                Current Turn PlayerId: {{ turnPlayerId }}<br />\n                Current Visible PlayerId: {{ visiblePlayerId }}<br />\n                Current Action PlayerId: {{ actionPlayerId }}<br />\n                Bag: {{ debugBagStats }}<br />\n            </div>\n        </b-sidebar>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport helpers from '../common/helpers'\n\nexport default {\n    name: 'NavBar',\n    computed: {\n        ...mapGetters('bag', [\n            'debugBagStats'\n        ]),\n        ...mapGetters('game', [\n            'debug',\n            'isSaveValid',\n            'numberOfPlayers',\n            'turnPlayerId',\n            'visiblePlayerId',\n            'currentActionType',\n            'actionPlayerId',\n            'conflictType'\n        ]),\n        showCoordinates: {\n            get () {\n                return this.$store.getters['settings/showCoordinates']\n            },\n            set (value) {\n                this.$store.commit('settings/setShowCoordinates', value)\n            }\n        },\n        showIndexes: {\n            get () {\n                return this.$store.getters['settings/showIndexes']\n            },\n            set (value) {\n                this.$store.commit('settings/setShowIndexes', value)\n            }\n        },\n        showKingdoms: {\n            get () {\n                return this.$store.getters['settings/showKingdoms']\n            },\n            set (value) {\n                this.$store.commit('settings/setShowKingdoms', value)\n            }\n        },\n        showLogTimestamps: {\n            get () {\n                return this.$store.getters['settings/showLogTimestamps']\n            },\n            set (value) {\n                this.$store.commit('settings/setShowLogTimestamps', value)\n            }\n        },\n        showLeaderStrength: {\n            get () {\n                return this.$store.getters['settings/showLeaderStrength']\n            },\n            set (value) {\n                this.$store.commit('settings/setShowLeaderStrength', value)\n            }\n        },\n        actionTypeName() {\n            return helpers.getActionNameByType(this.currentActionType)\n        },\n    },\n    methods: {\n        onNewGameClicked() {\n            this.$emit('new-game')\n        },\n        saveSettings() {\n            this.$store.dispatch('settings/save')\n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NavBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NavBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NavBar.vue?vue&type=template&id=c39eea0e&\"\nimport script from \"./NavBar.vue?vue&type=script&lang=js&\"\nexport * from \"./NavBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.player)?_c('div',{staticClass:\"card\"},[_vm._m(0),_c('div',{staticClass:\"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1\"},[(_vm.visiblePlayerId !== _vm.player.id)?_c('div',{staticClass:\"row no-gutters\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"row no-gutters justify-content-center align-items-center\"},[_c('div',{staticClass:\"col-auto col-xl-12\"},[_c('b-icon',{staticClass:\"mr-2\",attrs:{\"icon\":_vm.leaderIcon}}),_vm._v(_vm._s(_vm.player.name)+\"'s Turn \")],1),(_vm.player.isHuman)?_c('div',{staticClass:\"col-auto col-xl-12 pl-2 pl-xl-0\"},[_c('b-button',{staticClass:\"mt-0 mt-xl-2\",attrs:{\"variant\":\"success\",\"size\":\"sm\"},on:{\"click\":_vm.setPlayerVisible}},[_vm._v(\" Continue \")])],1):_vm._e()])])]):_c('div',{staticClass:\"row no-gutters\"},[_c('div',{staticClass:\"col-auto col-xl-12 align-self-center justify-content-center\"},[_c('div',{staticClass:\"row no-gutters\"},[_c('div',{staticClass:\"col-auto col-xl-12 text-right text-xl-center\"},_vm._l((_vm.leaderTileTypes.slice(0, 2)),function(tileType,index){return _c('leader-tile',{key:index,class:(index !== 3 ? 'mr-1 mr-md-2' : ''),attrs:{\"size\":_vm.size,\"tile-type\":tileType,\"player\":_vm.player,\"selected\":_vm.isSelectedTile(index, tileType),\"highlight\":_vm.isHighlightedLeader(tileType),\"disabled\":_vm.isDisabled(tileType),\"show-pointer\":!_vm.isInConflict,\"show-empty\":\"\"},nativeOn:{\"click\":function($event){return _vm.selectTile(index, tileType)}}})}),1),_c('div',{staticClass:\"col-auto col-xl-12 text-left text-xl-center\"},_vm._l((_vm.leaderTileTypes.slice(2, 4)),function(tileType,index){return _c('leader-tile',{key:index,class:(index !== 3 ? 'mr-1 mr-md-2' : ''),attrs:{\"size\":_vm.size,\"tile-type\":tileType,\"player\":_vm.player,\"selected\":_vm.isSelectedTile(index + 2, tileType),\"highlight\":_vm.isHighlightedLeader(tileType),\"disabled\":_vm.isDisabled(tileType),\"show-pointer\":!_vm.isInConflict,\"show-empty\":\"\"},nativeOn:{\"click\":function($event){return _vm.selectTile(index + 2, tileType)}}})}),1)])]),_c('div',{staticClass:\"col col-xl-12 align-self-center justify-content-center pt-xl-4\"},[_c('div',{staticClass:\"row no-gutters\"},[_c('div',{staticClass:\"col col-xl-12 text-right text-xl-center\"},_vm._l((_vm.playerTiles1),function(tileType,index){return _c('civilization-tile',{key:index,staticClass:\"d-inline-block mr-2\",attrs:{\"size\":_vm.size,\"tile-type\":tileType,\"selected\":_vm.isSelectedTile(index, tileType),\"disabled\":_vm.isDisabled(tileType),\"show-pointer\":\"\"},nativeOn:{\"click\":function($event){return _vm.selectTile(index, tileType)}}})}),1),_c('div',{staticClass:\"col col-xl-12 text-left text-xl-center\"},_vm._l((_vm.playerTiles2),function(tileType,index){return _c('civilization-tile',{key:index,staticClass:\"d-inline-block mr-2\",attrs:{\"size\":_vm.size,\"tile-type\":tileType,\"selected\":_vm.isSelectedTile(index + 3, tileType),\"disabled\":_vm.isDisabled(tileType),\"show-pointer\":\"\"},nativeOn:{\"click\":function($event){return _vm.selectTile(index + 3, tileType)}}})}),1)])]),_c('div',{staticClass:\"col-auto col-xl-12 align-self-center justify-content-center pt-xl-4\"},_vm._l((_vm.player.catastropheTiles),function(n,index){return _c('civilization-tile',{key:index,staticClass:\"d-inline-block mr-2\",attrs:{\"size\":_vm.size,\"tile-type\":_vm.tileTypes.catastrophe,\"selected\":_vm.isSelectedTile(index, _vm.tileTypes.catastrophe),\"disabled\":_vm.isDisabled(_vm.tileTypes.catastrophe),\"show-pointer\":\"\"},nativeOn:{\"click\":function($event){return _vm.selectTile(index, _vm.tileTypes.catastrophe)}}})}),1)])])]):_vm._e()\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card-header bg-transparent border-0 py-2\"},[_c('strong',[_vm._v(\"Hand\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div v-if=\"player\" class=\"card\">\n        <div class=\"card-header bg-transparent border-0 py-2\"><strong>Hand</strong></div>\n        <div class=\"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1\">\n            <div v-if=\"visiblePlayerId !== player.id\" class=\"row no-gutters\">\n                <div class=\"col\">\n                    <div class=\"row no-gutters justify-content-center align-items-center\">\n                        <div class=\"col-auto col-xl-12\">\n                            <b-icon :icon=\"leaderIcon\" class=\"mr-2\" />{{ player.name  }}'s Turn\n                        </div>\n                        <div v-if=\"player.isHuman\" class=\"col-auto col-xl-12 pl-2 pl-xl-0\">\n                            <b-button\n                                variant=\"success\"\n                                size=\"sm\"\n                                @click=\"setPlayerVisible\"\n                                class=\"mt-0 mt-xl-2\">\n                                Continue\n                            </b-button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div v-else class=\"row no-gutters\">\n                <div class=\"col-auto col-xl-12 align-self-center justify-content-center\">\n                    <div class=\"row no-gutters\">\n                        <div class=\"col-auto col-xl-12 text-right text-xl-center\">\n                            <leader-tile\n                                v-for=\"(tileType, index) in leaderTileTypes.slice(0, 2)\"\n                                :key=\"index\"\n                                :size=\"size\"\n                                :tile-type=\"tileType\"\n                                :player=\"player\"\n                                :class=\"(index !== 3 ? 'mr-1 mr-md-2' : '')\"\n                                :selected=\"isSelectedTile(index, tileType)\"\n                                :highlight=\"isHighlightedLeader(tileType)\"\n                                :disabled=\"isDisabled(tileType)\"\n                                @click.native=\"selectTile(index, tileType)\"\n                                :show-pointer=\"!isInConflict\"\n                                show-empty />\n                        </div>\n                        <div class=\"col-auto col-xl-12 text-left text-xl-center\">\n                            <leader-tile\n                                v-for=\"(tileType, index) in leaderTileTypes.slice(2, 4)\"\n                                :key=\"index\"\n                                :size=\"size\"\n                                :tile-type=\"tileType\"\n                                :player=\"player\"\n                                :class=\"(index !== 3 ? 'mr-1 mr-md-2' : '')\"\n                                :selected=\"isSelectedTile(index + 2, tileType)\"\n                                :highlight=\"isHighlightedLeader(tileType)\"\n                                :disabled=\"isDisabled(tileType)\"\n                                @click.native=\"selectTile(index + 2, tileType)\"\n                                :show-pointer=\"!isInConflict\"\n                                show-empty />\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col col-xl-12 align-self-center justify-content-center pt-xl-4\">\n                    <div class=\"row no-gutters\">\n                        <div class=\"col col-xl-12 text-right text-xl-center\">\n                            <civilization-tile\n                                v-for=\"(tileType, index) in playerTiles1\"\n                                :key=\"index\"\n                                :size=\"size\"\n                                :tile-type=\"tileType\"\n                                :selected=\"isSelectedTile(index, tileType)\"\n                                :disabled=\"isDisabled(tileType)\"\n                                @click.native=\"selectTile(index, tileType)\"\n                                class=\"d-inline-block mr-2\"\n                                show-pointer />\n                        </div>\n                        <div class=\"col col-xl-12 text-left text-xl-center\">\n                            <civilization-tile\n                                v-for=\"(tileType, index) in playerTiles2\"\n                                :key=\"index\"\n                                :size=\"size\"\n                                :tile-type=\"tileType\"\n                                :selected=\"isSelectedTile(index + 3, tileType)\"\n                                :disabled=\"isDisabled(tileType)\"\n                                @click.native=\"selectTile(index + 3, tileType)\"\n                                class=\"d-inline-block mr-2\"\n                                show-pointer />\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-auto col-xl-12 align-self-center justify-content-center pt-xl-4\">\n                    <civilization-tile\n                        v-for=\"(n, index) in player.catastropheTiles\"\n                        :key=\"index\"\n                        :size=\"size\"\n                        :tile-type=\"tileTypes.catastrophe\"\n                        :selected=\"isSelectedTile(index, tileTypes.catastrophe)\"\n                        :disabled=\"isDisabled(tileTypes.catastrophe)\"\n                        @click.native=\"selectTile(index, tileTypes.catastrophe)\"\n                        class=\"d-inline-block mr-2\"\n                        show-pointer />\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport CivilizationTile from './CivilizationTile.vue'\nimport LeaderTile from './LeaderTile.vue'\nimport { tileTypes, leaderTileTypes, actionTypes, breakpoints } from '../common/constants'\nimport helpers from '../common/helpers'\n\nexport default {\n    name: 'PlayerHand',\n    components: {\n        CivilizationTile,\n        LeaderTile\n    },\n    props: {\n        player: Object,\n        selectable: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            size: 0\n        }\n    },\n    mounted() {\n        window.addEventListener(\"resize\", this.onWindowResize);\n        this.onWindowResize()\n    },\n    unmounted() {\n        window.removeEventListener(\"resize\", this.onWindowResize);\n    },\n    computed: {\n        ...mapGetters('game', [\n            'visiblePlayerId',\n            'remainingActions',\n            'currentActionType',\n            'conflictTileType'\n        ]),\n        ...mapGetters('board', [\n            'tiles',\n        ]),\n        leaderIcon() {\n            return helpers.getPlayerIconNameById(this.player.id)\n        },\n        tileTypes() {\n            return tileTypes\n        },\n        leaderTileTypes() {\n            return leaderTileTypes\n        },\n        playerTiles1() {\n            var max = this.player.hand.length < 3 ? this.player.hand.length : 3\n            return this.player.hand.slice(0, max)\n        },\n        playerTiles2() {\n            if (this.player.hand.length < 4) return []\n            var max = this.player.hand.length < 6 ? this.player.hand.length : 6\n            return this.player.hand.slice(3, max)\n        },\n        isInConflict() {\n            return this.currentActionType === actionTypes.conflictAttack ||\n                this.currentActionType === actionTypes.conflictDefend\n        }\n    },\n    methods:{\n        setPlayerVisible() {\n            this.$store.commit('game/setVisiblePlayerId', this.player.id)\n        },\n        isSelectedTile(index, tileType) {\n            return this.selectable && this.player.selectedTiles.some(x => x.index === index && x.tileType === tileType)\n        },\n        isHighlightedLeader(tileType) {\n            let selectedBoardLeader = this.$store.getters['board/selectedBoardLeader'](this.player.id)\n            return this.currentActionType === actionTypes.playTile &&\n                selectedBoardLeader &&\n                selectedBoardLeader.tileType === tileType\n        },\n        isDisabled(tileType) {\n            return (this.isInConflict && this.conflictTileType !== tileType) ||\n                this.remainingActions === 0\n        },\n        selectTile(index, tileType) {\n            if (!this.selectable) return\n\n            let isLeaderTile = leaderTileTypes.includes(tileType)\n            let allowTileSelection = false\n            if (this.remainingActions > 0 &&\n                this.currentActionType === actionTypes.playTile &&\n                (!isLeaderTile || (isLeaderTile && this.player.leaders.includes(tileType)))) allowTileSelection = true\n            if (this.isInConflict && !isLeaderTile && this.player.hand[index] === this.conflictTileType) allowTileSelection = true\n            if (this.currentActionType === actionTypes.swapTiles && !isLeaderTile && tileType !== tileTypes.catastrophe) allowTileSelection = true\n\n            // Selecting a tile in hand\n            if (allowTileSelection) {\n                if (this.isSelectedTile(index, tileType)) {\n                    this.$store.dispatch('players/removeTileSelection', { playerId: this.player.id, index: index, tileType: tileType, isLeaderTile: isLeaderTile })\n                } else {\n                    if (!this.isInConflict) this.$store.commit('board/resetBoardTileHighlights')\n                    this.$store.dispatch('players/addTileSelection', { playerId: this.player.id, index: index, tileType: tileType, isLeaderTile: isLeaderTile })\n                }\n            // Moving a leader from board to hand\n            } else {\n                let selectedBoardLeader = this.$store.getters['board/selectedBoardLeader'](this.player.id)\n                if (selectedBoardLeader &&\n                    selectedBoardLeader.tileType === tileType &&\n                    this.currentActionType === actionTypes.playTile\n                ) {\n                    this.$store.dispatch('game/saveSnapshot')\n                    this.$store.commit('players/addLeaderToPlayer', selectedBoardLeader)\n                    this.$store.commit('board/removeTile', { index: selectedBoardLeader.index })\n                    this.$store.dispatch('board/setRegions')\n                    this.$store.commit('board/resetAvailableTileLocations')\n                    this.$store.commit('game/actionCompleted')\n                    this.$store.commit('log/logActionMessage', {\n                        playerId: this.player.id,\n                        text: `moved ${helpers.getLogToken(selectedBoardLeader)}\n                            from ${helpers.getCoordinatesByIndex(selectedBoardLeader.index)} back to hand`\n                    })\n                }\n            }\n        },\n        onWindowResize() {\n            var windowWidth = window.innerWidth;\n            this.size = 40\n            if (windowWidth <= breakpoints.medium) this.size = 30\n            if (windowWidth <= breakpoints.small) this.size = 20\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n\n@media (min-width: 1200px) {\n    .card {\n        height: 335px;\n    }\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PlayerHand.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PlayerHand.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PlayerHand.vue?vue&type=template&id=c64d04c2&scoped=true&\"\nimport script from \"./PlayerHand.vue?vue&type=script&lang=js&\"\nexport * from \"./PlayerHand.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PlayerHand.vue?vue&type=style&index=0&id=c64d04c2&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c64d04c2\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card h-100\"},[_c('div',{staticClass:\"card-body p-2\"},[_c('div',{staticClass:\"row no-gutters text-left small pb-2\"},[_c('div',{staticClass:\"col-auto pr-1\"},[_vm._v(_vm._s(_vm.player.name))]),(!_vm.player.isHuman)?_c('div',{staticClass:\"col-auto\"},[_vm._v(\"(Bot)\")]):_vm._e()]),_c('div',{staticClass:\"row no-gutters align-items-center\"},[_c('div',{staticClass:\"col text-center text-sm-left\"},_vm._l((_vm.leaderTileTypes),function(leaderTileType,index){return _c('leader-tile',{key:index,staticClass:\"mr-1\",attrs:{\"size\":_vm.size,\"tile-type\":leaderTileType,\"player\":_vm.player,\"show-empty\":\"\"}})}),1),_c('div',{staticClass:\"col-auto\"},[_c('div',{staticClass:\"row no-gutters align-items-center\"},[_c('div',{staticClass:\"col-12 col-sm-auto pr-0 pr-sm-2\"},[_c('div',{staticClass:\"row no-gutters align-items-center justify-content-center\"},[_c('div',{staticClass:\"col-auto pr-1\"},[_c('civilization-tile',{attrs:{\"tile-type\":_vm.tileTypes.generic,\"size\":_vm.size}})],1),_c('div',{staticClass:\"col-auto small\"},[_vm._v(\"x\"+_vm._s(_vm.player.hand.length))])])]),_c('div',{staticClass:\"col-12 col-sm-auto pt-1 pt-sm-0\"},[_c('div',{staticClass:\"row no-gutters align-items-center justify-content-center\"},[_c('div',{staticClass:\"col-auto pr-1\"},[_c('civilization-tile',{attrs:{\"tile-type\":_vm.tileTypes.catastrophe,\"size\":_vm.size}})],1),_c('div',{staticClass:\"col-auto small\"},[_vm._v(\"x\"+_vm._s(_vm.player.catastropheTiles))])])])])])]),(_vm.showScore || _vm.debug)?_c('div',{staticClass:\"row no-gutters mt-1 justify-content-center justify-content-lg-start\"},[_c('div',{staticClass:\"col-auto align-self-center\"},[_c('b-badge',{staticClass:\"settlement-score mr-2\",attrs:{\"pill\":\"\"}},[_vm._v(_vm._s(_vm.player.score.settlement))])],1),_c('div',{staticClass:\"col-auto align-self-center\"},[_c('b-badge',{staticClass:\"temple-score mr-2\",attrs:{\"pill\":\"\"}},[_vm._v(_vm._s(_vm.player.score.temple))])],1),_c('div',{staticClass:\"col-auto align-self-center\"},[_c('b-badge',{staticClass:\"farm-score mr-2\",attrs:{\"pill\":\"\"}},[_vm._v(_vm._s(_vm.player.score.farm))])],1),_c('div',{staticClass:\"col-auto align-self-center\"},[_c('b-badge',{staticClass:\"market-score mr-2\",attrs:{\"pill\":\"\"}},[_vm._v(_vm._s(_vm.player.score.market))])],1),_c('div',{staticClass:\"col-auto align-self-center\"},[_c('b-badge',{staticClass:\"treasure-score mr-2\",attrs:{\"pill\":\"\"}},[_vm._v(_vm._s(_vm.player.score.treasure))])],1)]):_vm._e(),(_vm.debug)?_c('div',{staticClass:\"row no-gutters mt-1 justify-content-center justify-content-lg-start\"},_vm._l((_vm.player.hand),function(tileType,index){return _c('civilization-tile',{key:index,staticClass:\"col-auto mr-1\",attrs:{\"tile-type\":tileType,\"size\":_vm.size}})}),1):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"card h-100\">\n        <div class=\"card-body p-2\">\n            <div class=\"row no-gutters text-left small pb-2\">\n                <div class=\"col-auto pr-1\">{{player.name}}</div>\n                <div v-if=\"!player.isHuman\" class=\"col-auto\">(Bot)</div>\n            </div>\n            <div class=\"row no-gutters align-items-center\">\n                <div class=\"col text-center text-sm-left\">\n                    <leader-tile\n                        v-for=\"(leaderTileType, index) in leaderTileTypes\"\n                        :key=\"index\"\n                        :size=\"size\"\n                        :tile-type=\"leaderTileType\"\n                        :player=\"player\"\n                        class=\"mr-1\"\n                        show-empty />\n                </div>\n                <div class=\"col-auto\">\n                    <div class=\"row no-gutters align-items-center\">\n                        <div class=\"col-12 col-sm-auto pr-0 pr-sm-2\">\n                            <div class=\"row no-gutters align-items-center justify-content-center\">\n                                <div class=\"col-auto pr-1\"><civilization-tile :tile-type=\"tileTypes.generic\" :size=\"size\" /></div>\n                                <div class=\"col-auto small\">x{{player.hand.length}}</div>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-auto pt-1 pt-sm-0\">\n                            <div class=\"row no-gutters align-items-center justify-content-center\">\n                                <div class=\"col-auto pr-1\"><civilization-tile :tile-type=\"tileTypes.catastrophe\" :size=\"size\" /></div>\n                                <div class=\"col-auto small\">x{{player.catastropheTiles}}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div v-if=\"showScore || debug\" class=\"row no-gutters mt-1 justify-content-center justify-content-lg-start\">\n                <div class=\"col-auto align-self-center\">\n                    <b-badge pill class=\"settlement-score mr-2\">{{player.score.settlement}}</b-badge>\n                </div>\n                <div class=\"col-auto align-self-center\">\n                    <b-badge pill class=\"temple-score mr-2\">{{player.score.temple}}</b-badge>\n                </div>\n                <div class=\"col-auto align-self-center\">\n                    <b-badge pill class=\"farm-score mr-2\">{{player.score.farm}}</b-badge>\n                </div>\n                <div class=\"col-auto align-self-center\">\n                    <b-badge pill class=\"market-score mr-2\">{{player.score.market}}</b-badge>\n                </div>\n                <div class=\"col-auto align-self-center\">\n                    <b-badge pill class=\"treasure-score mr-2\">{{player.score.treasure}}</b-badge>\n                </div>\n            </div>\n            <div v-if=\"debug\" class=\"row no-gutters mt-1 justify-content-center justify-content-lg-start\">\n                <civilization-tile\n                    v-for=\"(tileType, index) in player.hand\"\n                    :key=\"index\"\n                    :tile-type=\"tileType\" :size=\"size\"\n                    class=\"col-auto mr-1\" />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport CivilizationTile from './CivilizationTile.vue'\nimport LeaderTile from './LeaderTile.vue'\nimport { tileTypes, leaderTileTypes } from '../common/constants'\n\nexport default {\n    name: 'PlayerHand',\n    components: {\n        CivilizationTile,\n        LeaderTile\n    },\n    props: {\n        player: Object,\n        showScore: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            size: 25\n        }\n    },\n    computed: {\n        ...mapGetters('game', [\n            'debug'\n        ]),\n        tileTypes() {\n            return tileTypes\n        },\n        leaderTileTypes() {\n            return leaderTileTypes\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .temple-score {\n        background-color: $color-temple;\n    }\n    .market-score  {\n        background-color: $color-market;\n    }\n    .settlement-score  {\n        background-color: $color-settlement;\n    }\n    .farm-score  {\n        background-color: $color-farm;\n    }\n    .treasure-score  {\n        background-color: $color-treasure;\n    }\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PlayerCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PlayerCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PlayerCard.vue?vue&type=template&id=127b7e33&scoped=true&\"\nimport script from \"./PlayerCard.vue?vue&type=script&lang=js&\"\nexport * from \"./PlayerCard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PlayerCard.vue?vue&type=style&index=0&id=127b7e33&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"127b7e33\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card\"},[_vm._m(0),_c('div',{staticClass:\"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1\"},[_c('div',{staticClass:\"row no-gutters\"},[_c('div',{staticClass:\"col-12 col-sm-4 small\"},[_vm._v(\"Bag\")]),_c('div',{staticClass:\"col-12 col-sm\"},[_c('b-progress',{attrs:{\"max\":\"100\",\"height\":\"1.5rem\"}},[_c('div',{staticClass:\"progress-foreground progress-bar bg-success\",style:(`clip-path: inset(0 ${100-Math.round((_vm.bagSpaceRemaining / 100) * 100)}% 0 0);`),attrs:{\"aria-hidden\":\"true\"}},[_vm._v(_vm._s(Math.round((_vm.bagSpaceRemaining / 100) * 100))+\"%\")]),_c('div',{staticClass:\"progress-background\",style:(`clip-path: inset(0 0 0 ${Math.round((_vm.bagSpaceRemaining / 100) * 100)}%);`),attrs:{\"aria-hidden\":\"true\"}},[_vm._v(_vm._s(Math.round((_vm.bagSpaceRemaining / 100) * 100))+\"%\")])])],1)]),_c('div',{staticClass:\"row no-gutters mt-2\"},[_c('div',{staticClass:\"col-12 col-sm-4 small\"},[_vm._v(\"Treasures\")]),_c('div',{staticClass:\"col-12 col-sm\"},[_c('b-progress',{attrs:{\"max\":_vm.initialTreasures,\"height\":\"1.5rem\"}},[_c('div',{staticClass:\"progress-foreground progress-bar bg-success\",style:(`clip-path: inset(0 ${((_vm.initialTreasures-_vm.remainingTreasures)/_vm.initialTreasures*100)}% 0 0);`),attrs:{\"aria-hidden\":\"true\"}},[_vm._v(_vm._s(_vm.remainingTreasures)+\" of \"+_vm._s(_vm.initialTreasures))]),_c('div',{staticClass:\"progress-background\",style:(`clip-path: inset(0 0 0 ${(_vm.remainingTreasures/_vm.initialTreasures*100)}%);`),attrs:{\"aria-hidden\":\"true\"}},[_vm._v(_vm._s(_vm.remainingTreasures)+\" of \"+_vm._s(_vm.initialTreasures))])])],1)])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card-header bg-transparent border-0 py-2\"},[_c('strong',[_vm._v(\"Progress\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"card\">\n        <div class=\"card-header bg-transparent border-0 py-2\"><strong>Progress</strong></div>\n        <div class=\"card-body px-2 pb-1 pb-md-2 pt-0 pt-md-1\">\n            <div class=\"row no-gutters\">\n                <div class=\"col-12 col-sm-4 small\">Bag</div>\n                <div class=\"col-12 col-sm\">\n                    <b-progress max=\"100\" height=\"1.5rem\">\n                        <div class=\"progress-foreground progress-bar bg-success\"\n                            :style=\"`clip-path: inset(0 ${100-Math.round((bagSpaceRemaining / 100) * 100)}% 0 0);`\"\n                            aria-hidden=\"true\">{{Math.round((bagSpaceRemaining / 100) * 100)}}%</div>\n                        <div class=\"progress-background\"\n                            :style=\"`clip-path: inset(0 0 0 ${Math.round((bagSpaceRemaining / 100) * 100)}%);`\"\n                            aria-hidden=\"true\">{{Math.round((bagSpaceRemaining / 100) * 100)}}%</div>\n                    </b-progress>\n                </div>\n            </div>\n            <div class=\"row no-gutters mt-2\">\n                <div class=\"col-12 col-sm-4 small\">Treasures</div>\n                <div class=\"col-12 col-sm\">\n                    <b-progress :max=\"initialTreasures\" height=\"1.5rem\">\n                        <div class=\"progress-foreground progress-bar bg-success\"\n                            :style=\"`clip-path: inset(0 ${((initialTreasures-remainingTreasures)/initialTreasures*100)}% 0 0);`\"\n                            aria-hidden=\"true\">{{remainingTreasures}} of {{initialTreasures}}</div>\n                        <div class=\"progress-background\"\n                            :style=\"`clip-path: inset(0 0 0 ${(remainingTreasures/initialTreasures*100)}%);`\"\n                            aria-hidden=\"true\">{{remainingTreasures}} of {{initialTreasures}}</div>\n                    </b-progress>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n    name: 'ProgressCard',\n    computed: {\n        ...mapGetters('bag', [\n            'bagSpaceRemaining'\n        ]),\n        ...mapGetters('board', [\n            'initialTreasures',\n            'remainingTreasures'\n        ])\n    }\n}\n</script>\n\n<style scoped>\n    .progress-foreground {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        color: white;\n    }\n\n    .progress-background {\n        position: absolute;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        color: black;\n    }\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ProgressCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ProgressCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProgressCard.vue?vue&type=template&id=ee469096&scoped=true&\"\nimport script from \"./ProgressCard.vue?vue&type=script&lang=js&\"\nexport * from \"./ProgressCard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ProgressCard.vue?vue&type=style&index=0&id=ee469096&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ee469096\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body p-0\"},[_c('div',{staticClass:\"row no-gutters align-items-center\"},[(_vm.conflictAttackerLeader)?_c('div',{staticClass:\"col-12 col-sm-6 text-left border-bottom border-right hide-border pb-1 pb-md-2 px-2 pr-sm-0 pl-sm-2\",class:_vm.getResultClass(_vm.conflictAttackerLeader)},[_vm._m(0),_vm._m(1),_c('div',{staticClass:\"row no-gutters align-items-center pr-sm-1\"},[_c('div',{staticClass:\"col-2\"},[_c('div',{staticClass:\"row no-gutters align-items-center\"},[_c('div',{staticClass:\"col-auto pr-1\"},[_c('leader-tile',{attrs:{\"size\":_vm.size,\"tile-type\":_vm.conflictAttackerLeader.tileType,\"player\":_vm.getPlayer(_vm.conflictAttackerLeader.playerId)}})],1),_c('div',{staticClass:\"col-auto text-left pr-1\"},[_vm._v(\" \"+_vm._s(_vm.conflictAttackerBoardTiles.length + _vm.conflictAttackerTiles.length)+\" \")])])]),_c('div',{staticClass:\"col-5\"},[_c('div',{staticClass:\"row no-gutters justify-content-start\"},_vm._l((_vm.conflictAttackerBoardTiles),function(tile,index){return _c('civilization-tile',{key:index,staticClass:\"col-auto mr-1 mb-1\",attrs:{\"tile-type\":tile.tileType,\"size\":_vm.size}})}),1)]),_c('div',{staticClass:\"col-5\"},[_c('div',{staticClass:\"row no-gutters justify-content-start\"},_vm._l((_vm.conflictAttackerTiles),function(tile,index){return _c('civilization-tile',{key:index,staticClass:\"col-auto mr-1 mb-1\",attrs:{\"tile-type\":tile.tileType,\"size\":_vm.size}})}),1)])])]):_vm._e(),(_vm.conflictDefenderLeader)?_c('div',{staticClass:\"col-12 col-sm-6 text-left text-sm-right pb-1 pb-md-2 px-2 pl-sm-0 pr-sm-2\",class:_vm.getResultClass(_vm.conflictDefenderLeader)},[_vm._m(2),_vm._m(3),_c('div',{staticClass:\"row no-gutters align-items-center pl-sm-1\"},[_c('div',{staticClass:\"col-5 order-3 order-sm-1\"},[_c('div',{staticClass:\"row no-gutters justify-content-start justify-content-sm-end\"},_vm._l((_vm.conflictDefenderTiles),function(tile,index){return _c('civilization-tile',{key:index,staticClass:\"col-auto mr-1 mr-sm-0 ml-0 ml-sm-1 mb-1\",attrs:{\"tile-type\":tile.tileType,\"size\":_vm.size}})}),1)]),_c('div',{staticClass:\"col-5 order-2\"},[_c('div',{staticClass:\"row no-gutters justify-content-start justify-content-sm-end\"},_vm._l((_vm.conflictDefenderBoardTiles),function(tile,index){return _c('civilization-tile',{key:index,staticClass:\"col-auto mr-1 mr-sm-0 ml-0 ml-sm-1 mb-1\",attrs:{\"tile-type\":tile.tileType,\"size\":_vm.size}})}),1)]),_c('div',{staticClass:\"col-2 order-1 order-sm-3\"},[_c('div',{staticClass:\"row no-gutters align-items-center justify-content-start justify-content-sm-end\"},[_c('div',{staticClass:\"col-auto text-right pr-1 pr-sm-0 pl-0 pl-sm-1 order-2 order-sm-1\"},[_vm._v(\" \"+_vm._s(_vm.conflictDefenderBoardTiles.length + _vm.conflictDefenderTiles.length)+\" \")]),_c('div',{staticClass:\"col-auto pr-1 pr-sm-0 pl-0 pl-sm-1 order-1 order-sm-2\"},[_c('leader-tile',{attrs:{\"size\":_vm.size,\"tile-type\":_vm.conflictDefenderLeader.tileType,\"player\":_vm.getPlayer(_vm.conflictDefenderLeader.playerId)}})],1)])])])]):_vm._e()])]),(_vm.conflictWinnerPlayerId)?_c('div',{staticClass:\"card-footer bg-white p-2 small\"},[_c('div',{staticClass:\"row no-gutters align-items-center justify-content-center\"},[_c('div',{staticClass:\"col-auto\"},[_c('span',{staticClass:\"mr-3\"},[_c('strong',[_vm._v(_vm._s(_vm.getPlayer(_vm.conflictWinnerPlayerId)?.name))]),_vm._v(\" wins the conflict!\")])]),_c('div',{staticClass:\"col-auto\"},[_c('b-button',{attrs:{\"variant\":\"success\",\"size\":\"sm\"},on:{\"click\":_vm.closeWarBoard}},[_vm._v(\" Continue \")])],1)])]):_vm._e()])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row no-gutters text-center pt-2\"},[_c('div',{staticClass:\"col\"},[_c('strong',[_vm._v(\"Attacker\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row no-gutters align-items-center pb-2 pr-sm-1\"},[_c('div',{staticClass:\"col-2\"}),_c('div',{staticClass:\"col-5 small\"},[_c('strong',[_vm._v(\"Board\")])]),_c('div',{staticClass:\"col-5 small\"},[_c('strong',[_vm._v(\"Committed\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row no-gutters text-center pt-2\"},[_c('div',{staticClass:\"col\"},[_c('strong',[_vm._v(\"Defender\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row no-gutters align-items-center pb-2 pl-sm-1\"},[_c('div',{staticClass:\"col-5 order-3 order-sm-1 small\"},[_c('strong',[_vm._v(\"Committed\")])]),_c('div',{staticClass:\"col-5 order-2 small\"},[_c('strong',[_vm._v(\"Board\")])]),_c('div',{staticClass:\"col-2 order-1 order-sm-3\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"card\">\n        <div class=\"card-body p-0\">\n            <div class=\"row no-gutters align-items-center\">\n                <div v-if=\"conflictAttackerLeader\"\n                    class=\"col-12 col-sm-6 text-left border-bottom border-right hide-border pb-1 pb-md-2 px-2 pr-sm-0 pl-sm-2\"\n                    :class=\"getResultClass(conflictAttackerLeader)\">\n                    <div class=\"row no-gutters text-center pt-2\">\n                        <div class=\"col\">\n                            <strong>Attacker</strong>\n                        </div>\n                    </div>\n                    <div class=\"row no-gutters align-items-center pb-2 pr-sm-1\">\n                        <div class=\"col-2\"></div>\n                        <div class=\"col-5 small\">\n                            <strong>Board</strong>\n                        </div>\n                        <div class=\"col-5 small\">\n                            <strong>Committed</strong>\n                        </div>\n                    </div>\n                    <div class=\"row no-gutters align-items-center pr-sm-1\">\n                        <div class=\"col-2\">\n                            <div class=\"row no-gutters align-items-center\">\n                                <div class=\"col-auto pr-1\">\n                                    <leader-tile\n                                        :size=\"size\"\n                                        :tile-type=\"conflictAttackerLeader.tileType\"\n                                        :player=\"getPlayer(conflictAttackerLeader.playerId)\"/>\n                                </div>\n                                <div class=\"col-auto text-left pr-1\">\n                                    {{ conflictAttackerBoardTiles.length + conflictAttackerTiles.length }}\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-5\">\n                            <div class=\"row no-gutters justify-content-start\">\n                                <civilization-tile\n                                    v-for=\"(tile, index) in conflictAttackerBoardTiles\"\n                                    :key=\"index\"\n                                    :tile-type=\"tile.tileType\" :size=\"size\"\n                                    class=\"col-auto mr-1 mb-1\" />\n                            </div>\n                        </div>\n                        <div class=\"col-5\">\n                            <div class=\"row no-gutters justify-content-start\">\n                                <civilization-tile\n                                    v-for=\"(tile, index) in conflictAttackerTiles\"\n                                    :key=\"index\"\n                                    :tile-type=\"tile.tileType\" :size=\"size\"\n                                    class=\"col-auto mr-1 mb-1\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div v-if=\"conflictDefenderLeader\"\n                    class=\"col-12 col-sm-6 text-left text-sm-right pb-1 pb-md-2 px-2 pl-sm-0 pr-sm-2\"\n                    :class=\"getResultClass(conflictDefenderLeader)\">\n                    <div class=\"row no-gutters text-center pt-2\">\n                        <div class=\"col\">\n                            <strong>Defender</strong>\n                        </div>\n                    </div>\n                    <div class=\"row no-gutters align-items-center pb-2 pl-sm-1\">\n                        <div class=\"col-5 order-3 order-sm-1 small\">\n                            <strong>Committed</strong>\n                        </div>\n                        <div class=\"col-5 order-2 small\">\n                            <strong>Board</strong>\n                        </div>\n                        <div class=\"col-2 order-1 order-sm-3\"></div>\n                    </div>\n                    <div class=\"row no-gutters align-items-center pl-sm-1\">\n                        <div class=\"col-5 order-3 order-sm-1\">\n                            <div class=\"row no-gutters justify-content-start justify-content-sm-end\">\n                                <civilization-tile\n                                    v-for=\"(tile, index) in conflictDefenderTiles\"\n                                    :key=\"index\"\n                                    :tile-type=\"tile.tileType\" :size=\"size\"\n                                    class=\"col-auto mr-1 mr-sm-0 ml-0 ml-sm-1 mb-1\" />\n                            </div>\n                        </div>\n                        <div class=\"col-5 order-2\">\n                            <div class=\"row no-gutters justify-content-start justify-content-sm-end\">\n                                <civilization-tile\n                                    v-for=\"(tile, index) in conflictDefenderBoardTiles\"\n                                    :key=\"index\"\n                                    :tile-type=\"tile.tileType\" :size=\"size\"\n                                    class=\"col-auto mr-1 mr-sm-0 ml-0 ml-sm-1 mb-1\" />\n                            </div>\n                        </div>\n                        <div class=\"col-2 order-1 order-sm-3\">\n                            <div class=\"row no-gutters align-items-center justify-content-start justify-content-sm-end\">\n                                <div class=\"col-auto text-right pr-1 pr-sm-0 pl-0 pl-sm-1 order-2 order-sm-1\">\n                                    {{ conflictDefenderBoardTiles.length + conflictDefenderTiles.length }}\n                                </div>\n                                <div class=\"col-auto pr-1 pr-sm-0 pl-0 pl-sm-1 order-1 order-sm-2\">\n                                    <leader-tile\n                                        :size=\"size\"\n                                        :tile-type=\"conflictDefenderLeader.tileType\"\n                                        :player=\"getPlayer(conflictDefenderLeader.playerId)\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div v-if=\"conflictWinnerPlayerId\" class=\"card-footer bg-white p-2 small\">\n            <div class=\"row no-gutters align-items-center justify-content-center\">\n                <div class=\"col-auto\">\n                    <span class=\"mr-3\"><strong>{{ getPlayer(conflictWinnerPlayerId)?.name }}</strong> wins the conflict!</span>\n                </div>\n                <div class=\"col-auto\">\n                    <b-button\n                        variant=\"success\"\n                        size=\"sm\"\n                        @click=\"closeWarBoard\">\n                        Continue\n                    </b-button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { breakpoints, conflictTypes } from '../common/constants'\nimport CivilizationTile from './CivilizationTile.vue'\nimport LeaderTile from './LeaderTile.vue'\n\nexport default {\n    name: 'WarBoard',\n    components: {\n        CivilizationTile,\n        LeaderTile\n    },\n    data() {\n        return {\n            size: 0\n        }\n    },\n    mounted() {\n        window.addEventListener(\"resize\", this.onWindowResize);\n        this.onWindowResize()\n    },\n    unmounted() {\n        window.removeEventListener(\"resize\", this.onWindowResize);\n    },\n    computed: {\n        ...mapGetters('game', [\n            'conflictAttackerLeader',\n            'conflictDefenderLeader',\n            'conflictAttackerTiles',\n            'conflictDefenderTiles',\n            'conflictAttackerBoardTiles',\n            'conflictDefenderBoardTiles',\n            'conflictType',\n            'conflictWinnerPlayerId'\n        ]),\n        ...mapGetters('game', [\n            'currentActionType',\n        ])\n    },\n    methods:{\n        onWindowResize() {\n            var windowWidth = window.innerWidth;\n            this.size = 30\n            if (windowWidth <= breakpoints.medium) this.size = 25\n            if (windowWidth <= breakpoints.small) this.size = 20\n        },\n        getPlayer(playerId) {\n            return this.$store.getters['players/getPlayer'](playerId)\n        },\n        closeWarBoard() {\n            this.$store.commit('game/resetConflictData')\n            this.$store.commit('game/setConflictType', conflictTypes.none)\n        },\n        getResultClass(leader) {\n            if (!this.conflictWinnerPlayerId) return ''\n            if (leader.playerId === this.conflictWinnerPlayerId) return 'winner'\n            return 'loser'\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .winner {\n        background-color: #c9e9d1;\n    }\n\n    .loser {\n        background-color: #f6ccd1\n    }\n\n    @media (max-width: 576px) {\n        .hide-border {\n            border-right: none !important;\n        }\n    }\n\n    @media (min-width: 576px) {\n        .hide-border {\n            border-bottom: none !important;\n        }\n    }\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WarBoard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WarBoard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WarBoard.vue?vue&type=template&id=3b131b22&scoped=true&\"\nimport script from \"./WarBoard.vue?vue&type=script&lang=js&\"\nexport * from \"./WarBoard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./WarBoard.vue?vue&type=style&index=0&id=3b131b22&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3b131b22\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div>\n        <nav-bar @new-game=\"startNewGame\" />\n        <!-- main page -->\n        <div class=\"main-app container-fluid text-center mb-5 p-0\">\n            <action-bar v-if=\"!showGameEnd\" />\n            <div v-if=\"showGameEnd\" class=\"row no-gutters mt-1\">\n                <div class=\"col-12 col-xl-10 offset-xl-1\">\n                    <game-end class=\"m-1\" />\n                </div>\n            </div>\n            <div v-if=\"showWarBoard\" class=\"row no-gutters mt-2\">\n                <div class=\"col-12 col-xl-10 offset-xl-1\">\n                    <war-board class=\"m-1\" />\n                </div>\n            </div>\n            <div class=\"row no-gutters mt-2\">\n                <!-- board column -->\n                <div class=\"col-12 col-lg-9 col-xl-7 order-2 order-xl-1\">\n                    <div class=\"map-container\">\n                        <div class=\"grid\">\n                            <map-square class=\"cell\"\n                                v-for=\"(mapSquare, index) in map\"\n                                :key=\"index\"\n                                :map-square-type=\"mapSquare\"\n                                :index=\"index\"\n                                :tile=\"getTile(index)\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                <!-- player hand column -->\n                <div class=\"col-12 col-xl-2 order-1 order-xl-2 mb-2 m-xl-0\">\n                    <div class=\"row no-gutters justify-content-center align-items-center\">\n                        <div v-if=\"showMonumentsAboveHand\" class=\"col-12 col-md-6 mb-2 px-1 d-block d-lg-none\">\n                            <monument-card />\n                        </div>\n                        <div class=\"col-12 col-md-10 col-lg-8 col-xl-12 px-1 px-xl-0 pr-xl-3\">\n                            <player-hand :player=\"getPlayer(actionPlayerId)\" selectable/>\n                        </div>\n                        <div class=\"col-12 mt-3 pr-3 d-none d-xl-block\">\n                            <monument-card />\n                        </div>\n                    </div>\n                </div>\n                <!-- player card column -->\n                <div class=\"col-12 col-lg-3 order-3 \">\n                    <div class=\"row no-gutters\">\n                        <div v-for=\"(player, index) in allPlayers\"\n                            :key=\"index\"\n                            :class=\"index != 0 ? 'mt-2' : 'mt-2 mt-lg-0'\"\n                            class=\"col-6 col-lg-12 px-1\">\n                            <player-card\n                                :player=\"getPlayer(player?.id)\"\n                                :show-score=\"player?.id === visiblePlayerId && player?.id === actionPlayerId\"\n                                :class=\"{'border-danger': player?.id === actionPlayerId}\" />\n                        </div>\n                        <div class=\"col-6 col-lg-12 px-1 mt-2 d-block d-xl-none\">\n                            <monument-card class=\"h-100\" />\n                        </div>\n                        <div class=\"col-6 col-lg-12 px-1 mt-2\">\n                            <progress-card />\n                        </div>\n                        <div class=\"col-12 px-1 mt-2\">\n                            <game-log />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- footer -->\n        <b-navbar type=\"light\" variant=\"light\" fixed=\"bottom\" class=\"border-top py-0\">\n            <b-navbar-nav class=\"mx-auto\" small>\n                <b-nav-text>Version: {{appVersion}}</b-nav-text>\n            </b-navbar-nav>\n        </b-navbar>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport ActionBar from './components/ActionBar.vue'\nimport GameEnd from './components/GameEnd.vue'\nimport GameLog from './components/GameLog.vue'\nimport MapSquare from './components/MapSquare.vue'\nimport MonumentCard from './components/MonumentCard.vue'\nimport NavBar from './components/NavBar.vue'\nimport PlayerHand from './components/PlayerHand.vue'\nimport PlayerCard from './components/PlayerCard.vue'\nimport ProgressCard from './components/ProgressCard.vue'\nimport WarBoard from './components/WarBoard.vue'\nimport { actionTypes, conflictTypes } from './common/constants'\n\nexport default {\n    name: 'App',\n    components: {\n        ActionBar,\n        GameEnd,\n        GameLog,\n        MapSquare,\n        MonumentCard,\n        NavBar,\n        PlayerHand,\n        PlayerCard,\n        ProgressCard,\n        WarBoard\n    },\n    async mounted() {\n        if (this.isSaveValid) {\n            this.$store.dispatch('game/load')\n        } else {\n            await this.startNewGame()\n        }\n        this.$store.dispatch('settings/load')\n    },\n    computed: {\n        ...mapGetters('board', [\n            'map',\n            'tiles'\n        ]),\n        ...mapGetters('players', {\n            allPlayers: 'all'\n        }),\n        ...mapGetters('game', [\n            'isSaveValid',\n            'visiblePlayerId',\n            'currentActionType',\n            'actionPlayerId',\n            'conflictType'\n        ]),\n        appVersion() {\n            return process.env.VUE_APP_VERSION\n        },\n        showMonumentsAboveHand() {\n            return this.currentActionType === actionTypes.buildMonument ||\n                this.currentActionType === actionTypes.buildMonumentMultiple\n        },\n        showWarBoard() {\n            return this.conflictType !== conflictTypes.none\n        },\n        showGameEnd() {\n            return this.currentActionType === actionTypes.gameOver\n        }\n    },\n    methods: {\n        getTile(index) {\n            return this.tiles[index];\n        },\n        getPlayer(id) {\n            let matchingPlayers = this.allPlayers.filter(x => x.id == id)\n            if (matchingPlayers && matchingPlayers.length > 0) {\n                return matchingPlayers[0]\n            }\n            return null\n        },\n        async startNewGame() {\n            localStorage.removeItem('gameState')\n            this.$store.commit('log/init')\n            this.$store.dispatch('game/init')\n            this.$store.dispatch('board/init')\n            this.$store.dispatch('bag/init')\n            this.$store.commit('players/clearPlayers')\n            await this.$store.dispatch('players/createNewPlayer', { name: 'Test Player 1', isHuman: true })\n            await this.$store.dispatch('players/createNewPlayer', { name: 'Test Player 2', isHuman: true })\n            await this.$store.dispatch('players/createNewPlayer', { name: 'Test Player 3', isHuman: true })\n            await this.$store.dispatch('players/createNewPlayer', { name: 'Test Player 4', isHuman: true })\n            this.$store.commit('bag/setStartingBag')\n            this.$store.dispatch('game/save')\n            this.$store.commit('log/logSystemMessage', 'New Game Started')\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .main-app {\n        font-family: Avenir, Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    .map-container {\n        background: black;\n        display: inline-block;\n        border: 5px solid black;\n    }\n\n    .grid {\n        display: grid;\n        grid-template-columns: repeat(16, calc(50vw / 16));\n        grid-template-rows: repeat(11, calc(50vw / 16));\n        grid-gap: 2px;\n    }\n\n    @media (max-width: 1199.98px) {\n        .grid {\n            display: grid;\n            grid-template-columns: repeat(16, calc(70vw / 16));\n            grid-template-rows: repeat(11, calc(70vw / 16));\n            grid-gap: 2px;\n        }\n    }\n\n    @media (max-width: 767.98px) {\n        .grid {\n            display: grid;\n            grid-template-columns: repeat(16, calc(90vw / 16));\n            grid-template-rows: repeat(11, calc(90vw / 16));\n            grid-gap: 1px;\n        }\n    }\n\n    .cell {\n        justify-content: center;\n        align-items: center;\n        display: flex;\n    }\n</style>\n\n<style>\n    .pointer {\n        cursor: pointer !important;\n    }\n    .disabled {\n        opacity: 0.5;\n        pointer-events: none;\n    }\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=2e26c528&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=2e26c528&prod&scoped=true&lang=css&\"\nimport style1 from \"./App.vue?vue&type=style&index=1&id=2e26c528&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2e26c528\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport { mapTypes, tileTypes, boardStats, actionTypes, monumentTypes, conflictTypes } from '../../common/constants'\nimport helpers from '../../common/helpers'\n\nconst state = () => ({\n    map: [\n        0,0,0,0,1,1,1,1,1,0,2,0,1,0,0,0,\n        0,3,0,0,1,0,0,0,0,0,0,0,1,0,0,3,\n        0,0,0,1,1,2,0,0,0,0,0,0,1,1,0,0,\n        1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n        1,1,1,1,0,0,0,0,2,0,0,0,1,1,1,0,\n        0,3,0,1,1,1,1,0,0,0,0,0,1,0,0,0,\n        0,0,0,0,0,0,1,1,1,1,1,1,1,0,3,0,\n        0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0\n    ],\n    tiles: [],\n    regions: [],\n    availableTileLocations: [],\n    availableMonumentLocations: [],\n    initialTreasures: 0,\n    remainingTreasures: 0,\n    treasuresToTake: 0,\n    conflictTile: null,\n    leaderGroupsAtWar: []\n})\n\nconst riverPath = [\n    ' ',' ',' ',' ','╔','=','=','=','╝',' ',' ',' ','║',' ',' ',' ',\n    ' ',' ',' ',' ','║',' ',' ',' ',' ',' ',' ',' ','║',' ',' ',' ',\n    ' ',' ',' ','╔','╝',' ',' ',' ',' ',' ',' ',' ','╚','╗',' ',' ',\n    '=','=','=','╝',' ',' ',' ',' ',' ',' ',' ',' ',' ','╚','=','╗',\n    ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','╔','╝',\n    ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','║',' ',\n    '=','=','=','╗',' ',' ',' ',' ',' ',' ',' ',' ','╔','=','╝',' ',\n    ' ',' ',' ','╚','=','=','╗',' ',' ',' ',' ',' ','║',' ',' ',' ',\n    ' ',' ',' ',' ',' ',' ','╚','=','=','=','=','=','╝',' ',' ',' ',\n    ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',\n    ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '\n]\n\nconst getters = {\n    map: (state) => {\n        return state.map\n    },\n    getRiverPath: () => (index) => {\n        if (!riverPath && index < riverPath.length) return null\n        return riverPath[index]\n    },\n    tiles: (state) => {\n        return state.tiles\n    },\n    tile: (state) => (index) => {\n        return state.tiles[index]\n    },\n    regions: (state) => {\n        return state.regions\n    },\n    initialTreasures: (state) => {\n        return state.initialTreasures\n    },\n    remainingTreasures: (state) => {\n        return state.remainingTreasures\n    },\n    kingdoms: (state) => {\n        return state.regions.filter(region => region.isKingdom)\n    },\n    getNeighbors: (state) => (index) => {\n        if (state.tiles.length > 0) {\n            // top left corner\n            if (index === 0) {\n                return {\n                    right: state.tiles[1],\n                    bottomRight: state.tiles[index + boardStats.columns + 1],\n                    bottom: state.tiles[index + boardStats.columns]\n                }\n            // top edge\n            } else if (index < boardStats.columns - 1) {\n                return {\n                    right: state.tiles[index + 1],\n                    bottomRight: state.tiles[index + boardStats.columns + 1],\n                    bottom: state.tiles[index + boardStats.columns],\n                    bottomLeft: state.tiles[index + boardStats.columns - 1],\n                    left: state.tiles[index - 1]\n                }\n            // top right corner\n            } else if (index === boardStats.columns - 1) {\n                return {\n                    bottom: state.tiles[index + boardStats.columns],\n                    bottomLeft: state.tiles[index + boardStats.columns - 1],\n                    left: state.tiles[index - 1]\n                }\n            // bottom left corner\n            } else if (index === boardStats.columns * (boardStats.rows - 1)) {\n                return {\n                    top: state.tiles[index - boardStats.columns],\n                    topRight: state.tiles[index - boardStats.columns + 1],\n                    right: state.tiles[index + 1]\n                }\n            // left edge\n            } else if (index > boardStats.columns - 1 && index % boardStats.columns === 0) {\n                return {\n                    top: state.tiles[index - boardStats.columns],\n                    topRight: state.tiles[index - boardStats.columns + 1],\n                    right: state.tiles[index + 1],\n                    bottomRight: state.tiles[index + boardStats.columns + 1],\n                    bottom: state.tiles[index + boardStats.columns]\n                }\n            // bottom right corner\n            } else if (index === boardStats.columns * boardStats.rows - 1) {\n                return {\n                    top: state.tiles[index - boardStats.columns],\n                    left: state.tiles[index - 1],\n                    topLeft: state.tiles[index - boardStats.columns - 1]\n                }\n            // right edge\n            } else if (index % boardStats.columns === boardStats.columns - 1) {\n                return {\n                    top: state.tiles[index - boardStats.columns],\n                    bottom: state.tiles[index + boardStats.columns],\n                    bottomLeft: state.tiles[index + boardStats.columns - 1],\n                    left: state.tiles[index - 1],\n                    topLeft: state.tiles[index - boardStats.columns - 1]\n                }\n            // bottom edge\n            } else if (index > boardStats.columns * (boardStats.rows - 1)) {\n                return {\n                    top: state.tiles[index - boardStats.columns],\n                    topRight: state.tiles[index - boardStats.columns + 1],\n                    right: state.tiles[index + 1],\n                    left: state.tiles[index - 1],\n                    topLeft: state.tiles[index - boardStats.columns - 1]\n                }\n            } else {\n                return {\n                    top: state.tiles[index - boardStats.columns],\n                    topRight: state.tiles[index - boardStats.columns + 1],\n                    right: state.tiles[index + 1],\n                    bottomRight: state.tiles[index + boardStats.columns + 1],\n                    bottom: state.tiles[index + boardStats.columns],\n                    bottomLeft: state.tiles[index + boardStats.columns - 1],\n                    left: state.tiles[index - 1],\n                    topLeft: state.tiles[index - boardStats.columns - 1]\n                }\n            }\n        }\n    },\n    getRegion: (state) => (index) => {\n        let regionIndex = null\n        for (let i = 0; i < state.regions.length; i++) {\n            if (state.regions[i].tileIndexes.includes(index)) {\n                regionIndex = i\n                break;\n            }\n        }\n        return regionIndex !== null ? state.regions[regionIndex] : null\n    },\n    getKingdomIndex: (state) => (index) => {\n        var kingdoms = state.regions.filter(region => region.isKingdom)\n        return kingdoms ? kingdoms.findIndex(region => region.tileIndexes.includes(index)) : null\n    },\n    getAvailableTileLocations: (state) => {\n        return state.availableTileLocations\n    },\n    availableMonumentLocations: (state) => {\n        return state.availableMonumentLocations\n    },\n    neighborRegions: (state, getters) => (tile) => {\n        const neighbors = getters.getNeighbors(tile.index)\n        const neighborRegions = []\n        if (neighbors.left &&\n            neighbors.left.tileType !== tileTypes.empty &&\n            neighbors.left.tileType !== tileTypes.catastrophe)\n            neighborRegions.push(getters.getRegion(neighbors.left.index))\n        if (neighbors.top &&\n            neighbors.top.tileType !== tileTypes.empty &&\n            neighbors.top.tileType !== tileTypes.catastrophe)\n            neighborRegions.push(getters.getRegion(neighbors.top.index))\n        if (neighbors.right &&\n            neighbors.right.tileType !== tileTypes.empty &&\n            neighbors.right.tileType !== tileTypes.catastrophe)\n            neighborRegions.push(getters.getRegion(neighbors.right.index))\n        if (neighbors.bottom &&\n            neighbors.bottom.tileType !== tileTypes.empty &&\n            neighbors.bottom.tileType !== tileTypes.catastrophe)\n            neighborRegions.push(getters.getRegion(neighbors.bottom.index))\n        return Array.from(new Set(neighborRegions));\n    },\n    isValidTileLocation: (state, getters) => (index) => {\n        let availableTileLocations = getters.getAvailableTileLocations\n        return availableTileLocations && availableTileLocations.some(x => x === index)\n    },\n    selectedBoardLeader: (state, getters) => (playerId) => {\n        return getters.tiles.filter(tile => tile.isLeaderTile && tile.playerId == playerId && tile.isHighlighted)[0]\n    },\n    treasuresToTake: (state) => {\n        return state.treasuresToTake\n    },\n    conflictTile: (state) => {\n        return state.conflictTile\n    },\n    getRevoltBoardStrength: (state, getters) => (leader) => {\n        let boardStrength = []\n        let leaderNeighbors = getters.getNeighbors(leader.index)\n        if (leaderNeighbors.top && leaderNeighbors.top.tileType === tileTypes.temple)\n            boardStrength.push({ ...leaderNeighbors.top })\n        if (leaderNeighbors.right && leaderNeighbors.right.tileType === tileTypes.temple)\n            boardStrength.push({ ...leaderNeighbors.right })\n        if (leaderNeighbors.bottom && leaderNeighbors.bottom.tileType === tileTypes.temple)\n            boardStrength.push({ ...leaderNeighbors.bottom })\n        if (leaderNeighbors.left && leaderNeighbors.left.tileType === tileTypes.temple)\n            boardStrength.push({ ...leaderNeighbors.left })\n        return boardStrength\n    },\n    getWarBoardStrength: (state, getters) => (leader) => {\n        let boardStrength = []\n        if (!leader) return boardStrength\n        let leaderRegion = getters.getRegion(leader.index)\n        if (!leaderRegion || !leaderRegion?.tileIndexes) return boardStrength\n        for (const tileIndex of leaderRegion.tileIndexes) {\n            const tile = getters.tile(tileIndex)\n            if (leader.tileType === tileTypes.priest && tile.tileType === tileTypes.temple)\n                boardStrength.push({ ...tile })\n            if (leader.tileType === tileTypes.king && tile.tileType === tileTypes.settlement)\n                boardStrength.push({ ...tile })\n            if (leader.tileType === tileTypes.trader && tile.tileType === tileTypes.market)\n                boardStrength.push({ ...tile })\n            if (leader.tileType === tileTypes.farmer && tile.tileType === tileTypes.farm)\n                boardStrength.push({ ...tile })\n        }\n        return boardStrength\n    },\n    leaderGroupsAtWar: (state) => {\n        return state.leaderGroupsAtWar\n    }\n}\n\nconst actions = {\n    init ({state, commit, dispatch}) {\n        commit('resetAvailableTileLocations')\n        let newTiles = []\n        for (let i = 0; i < state.map.length; i++) {\n            const tileType = state.map[i] === mapTypes.treasure ||\n                    state.map[i] === mapTypes.priorityTreasure\n                ? tileTypes.temple\n                : tileTypes.empty\n            newTiles.push({\n                index: i,\n                tileType: tileType,\n                isLeaderTile: false,\n                hasTreasure: tileType === tileTypes.temple,\n                playerId: 0\n            })\n        }\n        commit('setTiles', newTiles)\n        dispatch('setRegions')\n        commit('setTreasureCounts')\n    },\n    handleBoardClick ({commit, rootGetters, dispatch, getters}, clickedTile) {\n        if (!clickedTile) return\n        let currentActionType = rootGetters['game/currentActionType']\n        if (currentActionType === actionTypes.playTile) {\n            let currentPlayer = rootGetters['players/currentPlayer']\n            let selectedBoardLeader = getters.selectedBoardLeader(currentPlayer.id)\n            let playerHasSelectedTiles = currentPlayer.selectedTiles && currentPlayer.selectedTiles.length >= 1\n\n            // Select/Deselect player leader tile\n            if (clickedTile.isLeaderTile &&\n                clickedTile.playerId === currentPlayer.id &&\n                rootGetters['game/remainingActions'] > 0\n            ) {\n                commit('players/clearTileSelection', currentPlayer.id, { root: true })\n                commit('updateTile', { ...clickedTile, isHighlighted: !clickedTile.isHighlighted })\n                let selectedLeaderTile = getters.tile(clickedTile.index)\n                if (selectedLeaderTile.isHighlighted) {\n                    dispatch('calculateAvailableTileLocations', selectedLeaderTile)\n                } else {\n                    commit('resetAvailableTileLocations')\n                }\n            // Place a tile\n            } else if ((playerHasSelectedTiles || selectedBoardLeader) &&\n                getters.isValidTileLocation(clickedTile.index)\n            ) {\n                dispatch('game/saveSnapshot', null, { root: true })\n                if (selectedBoardLeader) commit('removeTile', { index: selectedBoardLeader.index })\n                const selectedTile = playerHasSelectedTiles ? currentPlayer.selectedTiles[0] : selectedBoardLeader\n                const newTile = {\n                    ...clickedTile,\n                    isLeaderTile: selectedTile.isLeaderTile,\n                    tileType: selectedTile.tileType,\n                    playerId: currentPlayer.id\n                }\n                commit('addTile', newTile)\n                dispatch('players/removeSelectedTiles', currentPlayer.id, { root: true })\n                commit('resetAvailableTileLocations')\n\n                if (selectedBoardLeader) {\n                    commit('log/logActionMessage', {\n                        playerId: currentPlayer.id,\n                        text: `moved ${helpers.getLogToken(newTile)}\n                            from ${helpers.getCoordinatesByIndex(selectedBoardLeader.index)}\n                            to ${helpers.getCoordinatesByIndex(newTile.index)}`\n                    }, { root: true })\n                } else {\n                    commit('log/logActionMessage', {\n                        playerId: currentPlayer.id,\n                        text: `placed ${helpers.getLogToken(newTile)}\n                            on ${helpers.getCoordinatesByIndex(newTile.index)}`\n                    }, { root: true })\n                }\n\n                dispatch('checkForDisplacedLeader')\n                dispatch('checkForWar', { ...newTile })\n                if (rootGetters['game/currentActionType'] !== actionTypes.playTile) return\n\n                const neighborKingdoms = getters.neighborRegions(newTile).filter(x => x.isKingdom)\n                dispatch('setRegions')\n                if (neighborKingdoms.length <= 1 && playerHasSelectedTiles) dispatch('checkForTileScore', newTile)\n                dispatch('checkForRevolt', newTile)\n                if (rootGetters['game/currentActionType'] !== actionTypes.playTile) return\n\n                dispatch('checkForMonument', newTile)\n                if (rootGetters['game/currentActionType'] !== actionTypes.playTile) return\n\n                commit('game/actionCompleted', null, { root: true })\n                dispatch('checkForTreasureToTake')\n            }\n        }\n        if (currentActionType === actionTypes.takeTreasure) {\n            if (clickedTile.isHighlighted) {\n                dispatch('takeTreasure', clickedTile)\n            }\n        }\n        if (currentActionType === actionTypes.buildMonumentMultiple) {\n            let monumentType = rootGetters['game/selectedMonumentType']\n            dispatch('buildMonument', { ...clickedTile, monumentType: monumentType })\n        }\n        if (currentActionType === actionTypes.warChooseLeader) {\n            if (clickedTile.isHighlighted &&\n                clickedTile.isLeaderTile &&\n                getters.leaderGroupsAtWar.length > 0\n            ) {\n                const chosenLeaderGroup = getters.leaderGroupsAtWar.filter(x => x[0].tileType === clickedTile.tileType)\n                if (chosenLeaderGroup && chosenLeaderGroup.length > 0)\n                dispatch('triggerWar', { attacker: chosenLeaderGroup[0][0], defender: chosenLeaderGroup[0][1] })\n            }\n        }\n    },\n    calculateAvailableTileLocations({state, getters, commit}, selectedTile) {\n        let eligibleTileLocations = []\n        for (let i = 0; i < state.tiles.length; i++) {\n            let mapSquare = state.map[i]\n            let mapSquareTile = state.tiles[i]\n            if (mapSquareTile) {\n                if (selectedTile.isLeaderTile) {\n                    const neighborRegions = getters.neighborRegions(mapSquareTile)\n                    const isJoiningKingdoms = neighborRegions.filter(region => region.isKingdom).length > 1\n                    const neighbors = getters.getNeighbors(i)\n                    const hasTempleNeighbor = (neighbors.left && neighbors.left.tileType === tileTypes.temple) ||\n                        (neighbors.top && neighbors.top.tileType === tileTypes.temple) ||\n                        (neighbors.bottom && neighbors.bottom.tileType === tileTypes.temple) ||\n                        (neighbors.right && neighbors.right.tileType === tileTypes.temple)\n                    if (!isJoiningKingdoms &&\n                        hasTempleNeighbor &&\n                        mapSquareTile.tileType == tileTypes.empty &&\n                        mapSquare !== mapTypes.river) {\n                            eligibleTileLocations.push(i)\n                        }\n                } else if (selectedTile.tileType === tileTypes.catastrophe) {\n                    if (!mapSquareTile.hasTreasure &&\n                        mapSquareTile.tileType !== tileTypes.catastrophe &&\n                        mapSquareTile.tileType !== tileTypes.monumentBottomLeft &&\n                        mapSquareTile.tileType !== tileTypes.monumentBottomRight &&\n                        mapSquareTile.tileType !== tileTypes.monumentTopLeft &&\n                        mapSquareTile.tileType !== tileTypes.monumentTopRight &&\n                        !mapSquareTile.isLeaderTile)\n                        eligibleTileLocations.push(i)\n                } else {\n                    if (mapSquareTile.tileType == tileTypes.empty &&\n                        ((mapSquare === mapTypes.river && selectedTile.tileType === tileTypes.farm) ||\n                         (mapSquare !== mapTypes.river && selectedTile.tileType !== tileTypes.farm)))\n                        eligibleTileLocations.push(i)\n                }\n            }\n        }\n        commit('setAvailableTileLocations', eligibleTileLocations)\n    },\n    setRegions({state, getters, commit}) {\n        commit('resetRegions')\n        let indexesToCheck = [...state.tiles\n            .filter(x => x.tileType !== tileTypes.empty &&\n                x.tileType !== tileTypes.catastrophe &&\n                (!getters.conflictTile || getters.conflictTile.index !== x.index))\n            .map(x => x.index)]\n        let checkedIndexes = []\n        for (let i = 0; i < indexesToCheck.length; i++) {\n            if (!checkedIndexes.some(x => x === indexesToCheck[i])) {\n                let newRegionIndexes = []\n                let queue = [indexesToCheck[i]]\n                let isKingdom = false;\n                while (queue.length > 0) {\n                    const queueIndex = queue.shift()\n                    if (!checkedIndexes.some(x => x === queueIndex)) {\n                        newRegionIndexes.push(queueIndex)\n                        checkedIndexes.push(queueIndex)\n                        let indexContainsLeader = state.tiles[queueIndex]?.isLeaderTile\n                        if (indexContainsLeader && !isKingdom) isKingdom = indexContainsLeader\n                        const neighbors = getters.getNeighbors(queueIndex)\n                        if (neighbors.left &&\n                            neighbors.left.tileType !== tileTypes.empty &&\n                            neighbors.left.tileType !== tileTypes.catastrophe) {\n                            queue.push(neighbors.left.index)\n                        }\n                        if (neighbors.top &&\n                            neighbors.top.tileType !== tileTypes.empty &&\n                            neighbors.top.tileType !== tileTypes.catastrophe) {\n                            queue.push(neighbors.top.index)\n                        }\n                        if (neighbors.right &&\n                            neighbors.right.tileType !== tileTypes.empty &&\n                            neighbors.right.tileType !== tileTypes.catastrophe) {\n                            queue.push(neighbors.right.index)\n                        }\n                        if (neighbors.bottom &&\n                            neighbors.bottom.tileType !== tileTypes.empty &&\n                            neighbors.bottom.tileType !== tileTypes.catastrophe) {\n                            queue.push(neighbors.bottom.index)\n                        }\n                    }\n                }\n                if (newRegionIndexes.length > 0) {\n                    commit('addRegion', { tileIndexes: newRegionIndexes, isKingdom: isKingdom })\n                }\n            }\n        }\n    },\n    checkForTileScore({state, getters, commit}, payload) {\n        if (payload && !payload.isLeaderTile) {\n            let region = getters.getRegion(payload.index)\n            if (region && region.isKingdom) {\n                let matchingLeader = null\n                let matchingKing = null\n                // check if kingdom has any matching leaders to score\n                for (let i = 0; i < region.tileIndexes.length; i++) {\n                    let matchingTile = state.tiles[region.tileIndexes[i]]\n                    if (matchingTile && matchingTile.isLeaderTile) {\n                        if ((matchingTile.tileType === tileTypes.priest && payload.tileType === tileTypes.temple) ||\n                            (matchingTile.tileType === tileTypes.king && payload.tileType === tileTypes.settlement) ||\n                            (matchingTile.tileType === tileTypes.farmer && payload.tileType === tileTypes.farm) ||\n                            (matchingTile.tileType === tileTypes.trader && payload.tileType === tileTypes.market)) {\n                            matchingLeader = matchingTile\n                        } else if (matchingTile.tileType === tileTypes.king) {\n                            matchingKing = matchingTile\n                        }\n                    }\n                }\n                if (matchingLeader !== null) {\n                    commit('players/incrementScore', {\n                        playerId: matchingLeader.playerId,\n                        scoreName: helpers.getTileNameByType(payload.tileType)\n                    }, { root: true })\n                } else if (matchingKing !== null) {\n                    commit('players/incrementScore', {\n                        playerId: matchingKing.playerId,\n                        scoreName: helpers.getTileNameByType(payload.tileType)\n                    }, { root: true })\n                }\n            }\n        }\n    },\n    checkForTreasureToTake({getters, commit, dispatch}) {\n        for (const region of getters.regions) {\n            let tilesWithTreasure = []\n            if (region && region.isKingdom) {\n                let matchingTrader = null\n                for (let i = 0; i < region.tileIndexes.length; i++) {\n                    let matchingTile = getters.tile(region.tileIndexes[i])\n                    if (matchingTile) {\n                        if (matchingTile.hasTreasure)\n                            tilesWithTreasure.push(matchingTile)\n                        if (matchingTile.tileType === tileTypes.trader) {\n                            matchingTrader = matchingTile\n                        }\n                    }\n                }\n                if (tilesWithTreasure.length > 1 && matchingTrader !== null) {\n                    commit('game/setActionPlayerId', matchingTrader.playerId, { root: true })\n                    const priorityTiles = tilesWithTreasure.filter(tile => getters.map[tile.index] === mapTypes.priorityTreasure)\n                    if (priorityTiles.length === 1) {\n                        dispatch('takeTreasure', priorityTiles[0])\n                    } else if (priorityTiles.length > 1) {\n                        if (priorityTiles.length)\n                        for (let i = 0; i < priorityTiles.length; i++) {\n                            commit('updateTile', { ...priorityTiles[i], isHighlighted: true })\n                        }\n                        commit('game/setActionType', actionTypes.takeTreasure, { root: true })\n                    } else {\n                        for (let i = 0; i < tilesWithTreasure.length; i++) {\n                            commit('updateTile', { ...tilesWithTreasure[i], isHighlighted: true })\n                        }\n                        commit('game/setActionType', actionTypes.takeTreasure, { root: true })\n                    }\n                }\n            }\n            commit('setTreasuresToTake', tilesWithTreasure.length - 1)\n        }\n    },\n    checkForMonument({getters, commit}, payload) {\n        commit('resetAvailableMonumentLocations')\n        var neighbors = getters.getNeighbors(payload.index)\n        let top = neighbors.top?.tileType ?? tileTypes.empty\n        let topRight = neighbors.topRight?.tileType  ?? tileTypes.empty\n        let right = neighbors.right?.tileType  ?? tileTypes.empty\n        let bottomRight = neighbors.bottomRight?.tileType  ?? tileTypes.empty\n        let bottom = neighbors.bottom?.tileType  ?? tileTypes.empty\n        let bottomLeft =neighbors.bottomLeft?.tileType  ?? tileTypes.empty\n        let left = neighbors.left?.tileType  ?? tileTypes.empty\n        let topLeft = neighbors.topLeft?.tileType ?? tileTypes.empty\n\n        let foundAvailableMonumentLocations = []\n        if ([topLeft, top, left].every(x => x === payload.tileType))\n            foundAvailableMonumentLocations.push({ index: neighbors.topLeft.index, tileType: neighbors.topLeft.tileType })\n        if ([top, topRight, right].every(x => x === payload.tileType))\n            foundAvailableMonumentLocations.push({ index: neighbors.top.index, tileType: neighbors.top.tileType })\n        if ([right, bottomRight, bottom].every(x => x === payload.tileType))\n            foundAvailableMonumentLocations.push({ index: payload.index, tileType: payload.tileType })\n        if ([bottom, bottomLeft, left].every(x => x === payload.tileType))\n            foundAvailableMonumentLocations.push({ index: neighbors.left.index, tileType: neighbors.left.tileType })\n\n        if (foundAvailableMonumentLocations && foundAvailableMonumentLocations.length > 0) {\n            commit('setAvailableMonumentLocations', foundAvailableMonumentLocations)\n            commit('game/setActionType', actionTypes.buildMonument, { root: true })\n        }\n    },\n    buildMonument({getters, commit, dispatch, rootGetters}, payload) {\n        let target = getters.tile(payload.index)\n        let targetNeighbors = getters.getNeighbors(target.index)\n        commit('updateTile', { ...target, tileType: tileTypes.monumentTopLeft })\n        commit('updateTile', { ...targetNeighbors.right, tileType: tileTypes.monumentTopRight })\n        commit('updateTile', { ...targetNeighbors.bottom, tileType: tileTypes.monumentBottomLeft })\n        commit('updateTile', {\n            ...targetNeighbors.bottomRight,\n            tileType: tileTypes.monumentBottomRight,\n            monumentType: payload.monumentType\n        })\n        getters.availableMonumentLocations.forEach(location => {\n            let tile = getters.tile(location.index)\n            commit('updateTile', { ...tile, isHighlighted: false })\n        })\n        commit('game/removeFromRemainingMonuments', payload.monumentType, { root: true })\n        commit('resetAvailableMonumentLocations')\n        commit('game/resetSelectedMonumentType', null, { root: true })\n\n        commit('log/logActionMessage', {\n            playerId: rootGetters['game/actionPlayerId'],\n            text: `built ${helpers.getMonumentNameByType(payload.monumentType)} monument at ${helpers.getCoordinatesByIndex(payload.index)}`\n        }, { root: true })\n\n        dispatch('checkForDisplacedLeader')\n        dispatch('setRegions')\n        commit('game/setActionType', actionTypes.playTile, { root: true })\n        commit('game/actionCompleted', null, { root: true })\n        dispatch('checkForTreasureToTake')\n    },\n    checkForMonumentScore({getters, rootGetters, commit}) {\n        let playerId = rootGetters['game/actionPlayerId']\n        let kingdoms = getters.kingdoms\n        kingdoms.forEach(kingdom => {\n            let playerLeaders = []\n            let monuments = []\n            kingdom.tileIndexes.forEach(index => {\n                let tile = getters.tiles[index]\n                if (tile.isLeaderTile && tile.playerId === playerId)\n                    playerLeaders.push(tile.tileType)\n                if (tile.monumentType)\n                    monuments.push(tile.monumentType)\n            })\n            if (playerLeaders.length > 0 && monuments.length > 0) {\n                monuments.forEach(monument => {\n                    if (monumentTypes.redMonuments.includes(monument) && playerLeaders.includes(tileTypes.priest))\n                        commit('players/incrementScore', { playerId: playerId, scoreName: helpers.getTileNameByType(tileTypes.temple) }, { root: true })\n                    if (monumentTypes.blueMonuments.includes(monument) && playerLeaders.includes(tileTypes.farmer))\n                        commit('players/incrementScore', { playerId: playerId, scoreName: helpers.getTileNameByType(tileTypes.farm) }, { root: true })\n                    if (monumentTypes.greenMonuments.includes(monument) && playerLeaders.includes(tileTypes.trader))\n                        commit('players/incrementScore', { playerId: playerId, scoreName: helpers.getTileNameByType(tileTypes.market) }, { root: true })\n                    if (monumentTypes.blackMonuments.includes(monument) && playerLeaders.includes(tileTypes.king))\n                        commit('players/incrementScore', { playerId: playerId, scoreName: helpers.getTileNameByType(tileTypes.settlement) }, { root: true })\n                })\n            }\n        })\n    },\n    checkForDisplacedLeader({state, getters, commit}) {\n        for (let i = 0; i < state.tiles.length; i++) {\n            let tile = state.tiles[i]\n            if (tile.isLeaderTile) {\n                let neighbors = getters.getNeighbors(i)\n                let hasTemple = false\n                if (neighbors.bottom && neighbors.bottom.tileType == tileTypes.temple) hasTemple = true\n                if (neighbors.left && neighbors.left.tileType == tileTypes.temple) hasTemple = true\n                if (neighbors.right && neighbors.right.tileType == tileTypes.temple) hasTemple = true\n                if (neighbors.top && neighbors.top.tileType == tileTypes.temple) hasTemple = true\n                if (!hasTemple) {\n                    commit('players/addLeaderToPlayer', tile, { root: true })\n                    commit('removeTile', { index: tile.index })\n                }\n            }\n        }\n    },\n    checkForRevolt({state, getters, commit}, tile) {\n        if (!tile || !tile.isLeaderTile) return\n        const region = getters.getRegion(tile.index)\n        if (region && region.isKingdom) {\n            let matchingDefenderLeader = null\n            for (let i = 0; i < region.tileIndexes.length; i++) {\n                var matchingTile = state.tiles[region.tileIndexes[i]]\n                if (matchingTile &&\n                    matchingTile.isLeaderTile &&\n                    matchingTile.tileType === tile.tileType &&\n                    matchingTile.playerId !== tile.playerId) {\n                        matchingDefenderLeader = { ...matchingTile }\n                        break\n                }\n            }\n            if (matchingDefenderLeader) {\n                commit('updateTile', { ...tile, isHighlighted: true })\n                commit('updateTile', { ...matchingDefenderLeader, isHighlighted: true })\n                commit('game/resetConflictData', null, { root: true })\n                commit('game/setActionPlayerId', tile.playerId, { root: true })\n                commit('game/setConflictAttackerLeader', tile, { root: true })\n                commit('game/setConflictDefenderLeader', matchingDefenderLeader, { root: true })\n                commit('game/setConflictAttackerBoardTiles', getters.getRevoltBoardStrength(tile), { root: true })\n                commit('game/setConflictDefenderBoardTiles', getters.getRevoltBoardStrength(matchingDefenderLeader), { root: true })\n                commit('game/setConflictTileType', tileTypes.temple, { root: true })\n                commit('game/setActionType', actionTypes.conflictAttack, { root: true })\n                commit('game/setConflictType', conflictTypes.revolt, { root: true })\n                commit('log/logActionMessage', {\n                    text: `A Revolt has begun between ${helpers.getLogToken(tile)}\n                        and ${helpers.getLogToken(matchingDefenderLeader)}`\n                }, { root: true })\n            }\n        }\n    },\n    checkForWar({getters, commit, dispatch}, tile) {\n        if (!tile || tile.isLeaderTile || tile.tileType === tileTypes.catastrophe) return\n        if (!getters.conflictTile) commit('setConflictTile', tile)\n        commit('resetLeaderGroupsAtWar')\n        let redLeaders = []\n        let blackLeaders = []\n        let greenLeaders = []\n        let blueLeaders = []\n        const neighborKingdoms = getters.neighborRegions(tile).filter(x => x.isKingdom)\n        for (const neighborKingdom of neighborKingdoms) {\n            for (const tileIndex of neighborKingdom.tileIndexes) {\n                const tile = getters.tile(tileIndex)\n                if (!tile.isLeaderTile) continue\n                if (tile.tileType === tileTypes.priest) redLeaders.push({ ...tile })\n                if (tile.tileType === tileTypes.king) blackLeaders.push({ ...tile })\n                if (tile.tileType === tileTypes.trader) greenLeaders.push({ ...tile })\n                if (tile.tileType === tileTypes.farmer) blueLeaders.push({ ...tile })\n            }\n        }\n        let leaderGroups = [redLeaders, blackLeaders, greenLeaders, blueLeaders]\n        let leaderGroupsAtWar = []\n        // Find which groups have more than one leader to trigger a war\n        for (const leaderGroup of leaderGroups) {\n            if (leaderGroup.length >= 2) {\n                leaderGroup.sort((a, b) => {\n                    if (a.playerId === tile.playerId && b.playerId !== tile.playerId) return -1\n                    if (a.playerId !== tile.playerId && b.playerId === tile.playerId) return 1\n                    return a.playerId - b.playerId\n                })\n                leaderGroupsAtWar.push(leaderGroup)\n                for (const leader of leaderGroup) {\n                    commit('updateTile', { ...leader, isHighlighted: true })\n                }\n            }\n        }\n\n        if (leaderGroupsAtWar.length == 0) {\n            commit('resetConflictTile')\n        // if there is more than one group the active player has to choose who fights\n        } else if (leaderGroupsAtWar.length > 1) {\n            commit('setLeaderGroupsAtWar', leaderGroupsAtWar)\n            commit('game/setActionType', actionTypes.warChooseLeader, { root: true })\n        // if only one group then trigger a war immediately\n        } else if (leaderGroupsAtWar.length === 1) {\n            dispatch('triggerWar', { attacker: leaderGroupsAtWar[0][0], defender: leaderGroupsAtWar[0][1] })\n        }\n    },\n    triggerWar({commit, getters}, payload) {\n        if (!payload || !payload.attacker || !payload.defender) return\n        commit('game/resetConflictData', null, { root: true })\n        if (payload.attacker.tileType === tileTypes.priest) commit('game/setConflictTileType', tileTypes.temple, { root: true })\n        if (payload.attacker.tileType === tileTypes.king) commit('game/setConflictTileType', tileTypes.settlement, { root: true })\n        if (payload.attacker.tileType === tileTypes.trader) commit('game/setConflictTileType', tileTypes.market, { root: true })\n        if (payload.attacker.tileType === tileTypes.farmer) commit('game/setConflictTileType', tileTypes.farm, { root: true })\n        const attacker = { ...payload.attacker }\n        const defender = { ...payload.defender }\n        commit('updateTile', { ...attacker, isHighlighted: true })\n        commit('updateTile', { ...defender, isHighlighted: true })\n        commit('game/setActionPlayerId', attacker.playerId, { root: true })\n        commit('game/setConflictAttackerLeader', attacker, { root: true })\n        commit('game/setConflictDefenderLeader', defender, {root: true })\n        commit('game/setConflictAttackerBoardTiles', getters.getWarBoardStrength(attacker), { root: true })\n        commit('game/setConflictDefenderBoardTiles', getters.getWarBoardStrength(defender), {root: true })\n        commit('game/setActionType', actionTypes.conflictAttack, { root: true })\n        commit('game/setConflictType', conflictTypes.war, { root: true })\n        commit('game/setConflictWinnerPlayerId', 0, { root: true })\n        commit('log/logActionMessage', {\n            text: `A War has begun between ${helpers.getLogToken(attacker)}\n                and ${helpers.getLogToken(defender)}`\n        }, { root: true })\n    },\n    takeTreasure({getters, rootGetters, commit, dispatch}, tile) {\n        commit('removeTreasure')\n        commit('players/incrementScore', { playerId: rootGetters['game/actionPlayerId'], scoreName: 'treasure' }, { root: true })\n        commit('updateTile', { ...tile, hasTreasure: false, isHighlighted: false })\n        commit('resetBoardTileHighlights')\n        commit('log/logActionMessage', {\n            playerId: rootGetters['game/actionPlayerId'],\n            text: `retreived a {treasure} from ${helpers.getCoordinatesByIndex(tile.index)}`\n        }, { root: true })\n\n        dispatch('checkForTreasureToTake')\n        if (getters.treasuresToTake < 1) {\n            commit('game/setActionPlayerId', rootGetters['game/turnPlayerId'], { root: true })\n            commit('game/setActionType', actionTypes.playTile, { root: true })\n        }\n    }\n}\n\nconst mutations = {\n    setTreasureCounts(state) {\n        const initialTreasureCount = state.map.filter(x => x === mapTypes.treasure || x === mapTypes.priorityTreasure).length\n        state.initialTreasures = initialTreasureCount\n        state.remainingTreasures = initialTreasureCount\n    },\n    removeTreasure(state) {\n        state.remainingTreasures--\n    },\n    addTile(state, payload) {\n        if (payload && state.tiles.length - 1 >= payload.index) {\n            let tile = {\n                index: payload.index,\n                tileType: payload.tileType,\n                isLeaderTile: payload.isLeaderTile,\n                playerId: payload?.playerId ?? 0,\n                monumentType: payload?.monumentType\n            }\n            state.tiles.splice(payload.index, 1, tile)\n        }\n    },\n    removeTile(state, payload) {\n        let newTile = {\n            index: payload.index,\n            tileType: tileTypes.empty,\n            isLeaderTile: false,\n            playerId: 0,\n            monumentType: null\n        }\n        state.tiles.splice(payload.index, 1, newTile)\n    },\n    updateTile(state, payload) {\n        let matchingTile = state.tiles[payload.index]\n        if (matchingTile) {\n            matchingTile = {...payload}\n            state.tiles.splice(payload.index, 1, matchingTile)\n        }\n    },\n    setTiles(state, payload) {\n        if (payload) {\n            Vue.set(state, 'tiles', [...payload]);\n        }\n    },\n    resetRegions(state) {\n        state.regions.splice(0)\n    },\n    addRegion(state, payload) {\n        state.regions.push({regionIndex: state.regions.length, tileIndexes: [...payload.tileIndexes], isKingdom: payload.isKingdom})\n    },\n    setAvailableTileLocations(state, payload) {\n        if (payload) {\n            Vue.set(state, 'availableTileLocations', payload)\n        }\n    },\n    resetAvailableTileLocations(state) {\n        state.availableTileLocations.splice(0)\n    },\n    setAvailableMonumentLocations(state, payload) {\n        if (payload) {\n            Vue.set(state, 'availableMonumentLocations', payload)\n        }\n    },\n    resetAvailableMonumentLocations(state) {\n        state.availableMonumentLocations.splice(0)\n    },\n    resetBoardTileHighlights(state) {\n        state.tiles.forEach(tile => tile.isHighlighted = false)\n    },\n    setTreasuresToTake(state, payload) {\n        state.treasuresToTake = payload\n    },\n    setConflictTile(state, tile) {\n        state.conflictTile = { ...tile }\n    },\n    resetConflictTile(state) {\n        state.conflictTile = null\n    },\n    setLeaderGroupsAtWar(state, payload) {\n        state.leaderGroupsAtWar = [...payload]\n    },\n    resetLeaderGroupsAtWar(state) {\n        state.leaderGroupsAtWar = []\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}","import { actionTypes, tileTypes } from '../../common/constants'\n\nconst state = () => ({\n    players: []\n})\n\nconst getters = {\n    currentPlayer: (state, getters, rootState, rootGetters) => {\n        let turnPlayerId = rootGetters['game/turnPlayerId']\n        if (state.players.filter(x => x.id === turnPlayerId).length > 0){\n            return state.players.filter(x => x.id === turnPlayerId)[0]\n        }\n        return null;\n    },\n    getPlayer: (state) => (playerId) => {\n        let matchingPlayers = state.players.filter(x => x.id == playerId)\n        if (matchingPlayers && matchingPlayers.length > 0) {\n            return matchingPlayers[0]\n        }\n        return null\n    },\n    all: (state) => {\n        return state.players\n    }\n}\n\nconst actions = {\n    async createNewPlayer({commit, state, dispatch}, payload) {\n        var hand = await dispatch('bag/drawTiles', 6, { root: true })\n        var newPlayer = {\n            id: state.players.length + 1,\n            name: payload.name,\n            hand: hand,\n            leaders: [tileTypes.king, tileTypes.priest, tileTypes.farmer, tileTypes.trader],\n            selectedTiles: [],\n            catastropheTiles: 2,\n            score: {\n                temple: 0,\n                market: 0,\n                farm: 0,\n                settlement: 0,\n                treasure: 0\n            },\n            isHuman: payload.isHuman\n        }\n        commit('addNewPlayer', newPlayer)\n        commit('game/incrementPlayerCount', null, { root: true })\n    },\n    async refillPlayerHands({commit, state, dispatch, rootGetters}) {\n        for (const player of state.players) {\n            if (player.hand.length < 6) {\n                let missingTiles = 6 - player.hand.length\n                let drawnTiles = await dispatch('bag/drawTiles', missingTiles, { root: true })\n                if (rootGetters['game/currentActionType'] === actionTypes.gameOver) break\n                commit('addTilesToPlayerHand', { playerId: player.id, tilesToAdd: drawnTiles })\n            }\n        }\n    },\n    async swapTiles({commit, dispatch}, player) {\n        if (player) {\n            const tilesToRemove = [...player.selectedTiles]\n            commit('clearTileSelection', player.id)\n            commit('removeTilesFromHand', { playerId: player.id, tilesToRemove: tilesToRemove })\n            let drawnTiles = await dispatch('bag/drawTiles', tilesToRemove.length, { root: true })\n            commit('addTilesToPlayerHand', { playerId: player.id, tilesToAdd: drawnTiles })\n        }\n    },\n    addTileSelection({commit, rootGetters, dispatch}, tile) {\n        if (tile) {\n            let currentActionType = rootGetters['game/currentActionType']\n            let isPlayTileActionType = currentActionType === actionTypes.playTile\n            if (isPlayTileActionType)\n                commit('clearTileSelection', tile.playerId)\n\n            commit('addTileSelection', tile)\n\n            if (isPlayTileActionType)\n                dispatch('board/calculateAvailableTileLocations', tile, { root: true })\n        }\n    },\n    removeTileSelection({commit}, tile) {\n        commit('removeTileSelection', tile)\n        commit('board/resetAvailableTileLocations', null, { root: true })\n    },\n    removeSelectedTiles({commit, getters}, playerId) {\n        let player = getters.getPlayer(playerId)\n        player.selectedTiles.forEach(selectedTile => {\n            if (selectedTile.isLeaderTile) {\n                commit('removeLeaderFromHand', { playerId, ...selectedTile })\n            }\n            else if (selectedTile.tileType == tileTypes.catastrophe) {\n                commit('removeCatastropheFromHand', { playerId, ...selectedTile })\n            } else {\n                commit('removeTileFromHand', { playerId, ...selectedTile })\n            }\n        })\n        commit('clearTileSelection', playerId)\n        commit('board/resetAvailableTileLocations', null, { root: true })\n    }\n}\n\nconst mutations = {\n    loadPlayers(state, players) {\n        state.players = [...players]\n    },\n    clearPlayers(state) {\n        state.players.splice(0)\n    },\n    addNewPlayer(state, player) {\n        state.players.push(player)\n    },\n    addTileSelection(state, tile) {\n        state.players.filter(x => x.id === tile.playerId)[0].selectedTiles.push({\n            index: tile.index, tileType: tile.tileType, isLeaderTile: tile.isLeaderTile\n        })\n    },\n    removeTileSelection(state, tile) {\n        let selectedTiles = state.players.filter(x => x.id === tile.playerId)[0].selectedTiles\n        let selectedTileIndex = selectedTiles.findIndex(x => x.index === tile.index && x.isLeaderTile === tile.isLeaderTile)\n        selectedTiles.splice(selectedTileIndex, 1)\n    },\n    clearTileSelection(state, playerId) {\n        let selectedTiles = state.players.filter(x => x.id === playerId)[0].selectedTiles\n        selectedTiles.splice(0, selectedTiles.length)\n    },\n    removeTileFromHand(state, tile) {\n        let playerHand = state.players.filter(x => x.id === tile.playerId)[0].hand\n        if (playerHand && playerHand.length > tile.index) {\n            playerHand.splice(tile.index, 1)\n        }\n    },\n    removeTilesFromHand(state, payload) {\n        let playerHand = state.players.filter(x => x.id === payload.playerId)[0].hand\n        let indexesToRemove = payload.tilesToRemove.map(tileToRemove => tileToRemove.index)\n        if (playerHand && playerHand.length >= indexesToRemove.length) {\n            let filteredHand = playerHand.filter((x, index) => !indexesToRemove.includes(index))\n            state.players.filter(x => x.id === payload.playerId)[0].hand = filteredHand\n        }\n    },\n    removeLeaderFromHand(state, leader) {\n        let playerLeaders = state.players.filter(x => x.id === leader.playerId)[0].leaders\n        if (playerLeaders && playerLeaders.includes(leader.tileType)) {\n            var index = playerLeaders.indexOf(leader.tileType)\n            playerLeaders.splice(index, 1)\n        }\n    },\n    removeCatastropheFromHand(state, catastrophe) {\n        let player = state.players.filter(x => x.id === catastrophe.playerId)[0]\n        if (player && player.catastropheTiles > catastrophe.index) {\n            player.catastropheTiles--\n        }\n    },\n    addTilesToPlayerHand(state, payload) {\n        let playerHand = state.players.filter(x => x.id === payload.playerId)[0].hand\n        playerHand = [...playerHand, ...payload.tilesToAdd]\n        state.players.filter(x => x.id === payload.playerId)[0].hand = playerHand\n    },\n    addLeaderToPlayer(state, leader) {\n        let playerLeaders = state.players.filter(x => x.id === leader.playerId)[0].leaders\n        playerLeaders.push(leader.tileType)\n        playerLeaders = playerLeaders.sort((a,b) => a - b);\n    },\n    incrementScore(state, payload) {\n        let scoreCount = 1\n        if (payload.scoreCount) scoreCount = payload.scoreCount\n        state.players.filter(x => x.id === payload.playerId)[0].score[payload.scoreName] += scoreCount\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}","import { actionTypes, tileTypes } from '../../common/constants'\n\nconst state = () => ({\n    bag: [],\n    temples: 0,\n    markets: 0,\n    settlements: 0,\n    farms: 0,\n    startingBag: []\n})\n\nconst defaultState = {\n    bag: [],\n    temples: 47,\n    markets: 30,\n    settlements: 30,\n    farms: 36\n}\n\nconst getters = {\n    all(state) {\n        return state\n    },\n    debugBagStats(state) {\n        return {\n            bagCount: state.bag.length,\n            temples: state.temples,\n            markets: state.markets,\n            settlements: state.settlements,\n            farms: state.farms\n        }\n    },\n    bagSpaceRemaining(state) {\n        return Math.round(state.bag.length / state.startingBag.length * 100)\n    }\n}\n\nconst actions = {\n    init({commit}) {\n        commit('setState', defaultState)\n        commit('fillBag')\n        commit('shuffleBag')\n    },\n    drawTiles ({state, commit, dispatch}, numberOfTiles) {\n        if (numberOfTiles) {\n            commit('shuffleBag')\n            if (numberOfTiles > state.bag.length) {\n                commit('log/logActionMessage', {\n                    text: `Game has ended due to running out of tiles`\n                }, { root: true })\n                dispatch('game/save', null, { root: true })\n                commit('game/setActionType', actionTypes.gameOver, { root: true })\n            }\n            let drawnTiles = state.bag.slice(0, numberOfTiles);\n            commit('removeTiles', { numberOfTiles, drawnTiles })\n            return drawnTiles\n        }\n    },\n}\n\nconst mutations = {\n    fillBag(state) {\n        let unshuffled = [];\n        state.bag.splice(0)\n        unshuffled = [...unshuffled, ...Array(state.temples).fill(tileTypes.temple, 0)]\n        unshuffled = [...unshuffled, ...Array(state.markets).fill(tileTypes.market, 0)]\n        unshuffled = [...unshuffled, ...Array(state.settlements).fill(tileTypes.settlement, 0)]\n        unshuffled = [...unshuffled, ...Array(state.farms).fill(tileTypes.farm, 0)]\n        state.bag = [...unshuffled]\n    },\n    shuffleBag(state) {\n        let unshuffled = [...state.bag];\n        let shuffled = unshuffled\n            .map(value => ({ value, sort: Math.random() }))\n            .sort((a, b) => a.sort - b.sort)\n            .map(({ value }) => value)\n        state.bag = [...shuffled]\n    },\n    removeTiles(state, payload) {\n        state.bag.splice(0, payload.numberOfTiles)\n        payload.drawnTiles.forEach(tile => {\n            if (tile === tileTypes.temple)\n                state.temples--;\n            if (tile === tileTypes.market)\n                state.markets--;\n            if (tile === tileTypes.settlement)\n                state.settlements--;\n            if (tile === tileTypes.farm)\n                state.farms--;\n        });\n    },\n    setStartingBag(state) {\n        state.startingBag = [...state.bag]\n    },\n    setState(state, newState) {\n        Object.assign(state, newState)\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}","import { actionTypes, conflictTypes, messageTypes, monumentTypes, tileTypes } from '../../common/constants'\nimport helpers from '../../common/helpers'\n\nconst DEBUG = false\n\nconst state = () => ({\n    turnPlayerId: 0,\n    actionPlayerId: 0,\n    visiblePlayerId: 0,\n    numberOfPlayers: 0,\n    remainingActions: 0,\n    currentActionType: actionTypes.loading,\n    conflictType: conflictTypes.none,\n    conflictAttackerLeader: null,\n    conflictDefenderLeader: null,\n    conflictAttackerTiles: [],\n    conflictDefenderTiles: [],\n    conflictAttackerBoardTiles: [],\n    conflictDefenderBoardTiles: [],\n    conflictTileType: tileTypes.empty,\n    conflictWinnerPlayerId: 0,\n    remainingMonuments: [],\n    selectedMonumentType: 0,\n    snapshot: null\n})\n\nconst defaultState = {\n    turnPlayerId: 1,\n    actionPlayerId: 1,\n    visiblePlayerId: 0,\n    numberOfPlayers: 0,\n    remainingActions: 2,\n    currentActionType: actionTypes.playTile,\n    conflictType: conflictTypes.none,\n    conflictAttackerLeader: null,\n    conflictDefenderLeader: null,\n    conflictAttackerTiles: [],\n    conflictDefenderTiles: [],\n    conflictAttackerBoardTiles: [],\n    conflictDefenderBoardTiles: [],\n    conflictTileType: tileTypes.empty,\n    conflictWinnerPlayerId: 0,\n    remainingMonuments: [\n        monumentTypes.redBlue,\n        monumentTypes.blueGreen,\n        monumentTypes.greenRed,\n        monumentTypes.blackRed,\n        monumentTypes.blackGreen,\n        monumentTypes.blackBlue\n    ],\n    selectedMonumentType: 0,\n    snapshot: null\n}\n\nconst getters = {\n    debug() {\n        return DEBUG\n    },\n    isSaveValid() {\n        if (localStorage.gameState) {\n            let gameState = JSON.parse(localStorage.gameState)\n            return gameState.version === process.env.VUE_APP_VERSION\n        }\n        return false;\n    },\n    currentActionType(state) {\n        return state.currentActionType\n    },\n    turnPlayerId(state) {\n        return state.turnPlayerId\n    },\n    actionPlayerId: (state) => {\n        return state.actionPlayerId\n    },\n    visiblePlayerId: (state) => {\n        return state.visiblePlayerId\n    },\n    remainingActions(state) {\n        return state.remainingActions\n    },\n    numberOfPlayers(state) {\n        return state.numberOfPlayers\n    },\n    conflictAttackerLeader: (state) => {\n        return state.conflictAttackerLeader\n    },\n    conflictDefenderLeader: (state) => {\n        return state.conflictDefenderLeader\n    },\n    conflictAttackerTiles: (state) => {\n        return state.conflictAttackerTiles\n    },\n    conflictDefenderTiles: (state) => {\n        return state.conflictDefenderTiles\n    },\n    conflictAttackerBoardTiles: (state) => {\n        return state.conflictAttackerBoardTiles\n    },\n    conflictDefenderBoardTiles: (state) => {\n        return state.conflictDefenderBoardTiles\n    },\n    conflictTileType: (state) => {\n        return state.conflictTileType\n    },\n    remainingMonuments: (state) => {\n        return state.remainingMonuments\n    },\n    selectedMonumentType: (state) => {\n        return state.selectedMonumentType\n    },\n    hasSnapshot: (state) => {\n        return !!state.snapshot\n    },\n    conflictType: (state) => {\n        return state.conflictType\n    },\n    conflictWinnerPlayerId: (state) => {\n        return state.conflictWinnerPlayerId\n    }\n}\n\nconst actions = {\n    init({commit}) {\n        commit('setState', defaultState)\n    },\n    save({state, rootGetters}) {\n        let gameState = {}\n        gameState.version = process.env.VUE_APP_VERSION\n        gameState.players = rootGetters['players/all']\n        gameState.tiles = rootGetters['board/tiles']\n        gameState.bag = rootGetters['bag/all']\n        let messages =  rootGetters['log/messages']\n        gameState.log = messages.filter(x => x.messageType != messageTypes.system)\n        gameState.game = state\n        localStorage.gameState = JSON.stringify(gameState);\n    },\n    load({commit, dispatch}) {\n        commit('setActionType', actionTypes.loading)\n        if (localStorage.gameState) {\n            let gameState = JSON.parse(localStorage.gameState);\n            commit('players/loadPlayers', gameState.players, { root: true })\n            commit('board/setTiles', gameState.tiles, { root: true })\n            commit('board/setTreasureCounts', gameState.tiles, { root: true })\n            dispatch('board/setRegions', null, { root: true })\n            commit('bag/setState', gameState.bag, { root: true })\n            commit('log/setMessages', gameState.log, { root: true })\n            commit('setState', gameState.game)\n            commit('log/logSystemMessage', 'Game load successful.', { root: true })\n        }\n    },\n    saveSnapshot({state, rootGetters, commit}) {\n        let snapshot = {}\n        let players = rootGetters['players/all']\n        snapshot.players = []\n        players.forEach(player => {\n            // I know... but it works for deep cloning. Don't hate me\n            snapshot.players.push(JSON.parse(JSON.stringify({...player, selectedTiles: []})))\n        })\n        snapshot.log = JSON.parse(JSON.stringify(rootGetters['log/messages']))\n        snapshot.tiles = [...rootGetters['board/tiles']]\n        snapshot.bag = rootGetters['bag/all']\n        snapshot.game = {}\n        snapshot.game.turnPlayerId = state.turnPlayerId,\n        snapshot.game.actionPlayerId = state.actionPlayerId,\n        snapshot.game.visiblePlayerId = state.visiblePlayerId,\n        snapshot.game.remainingActions = state.remainingActions,\n        snapshot.game.currentActionType = state.currentActionType,\n        snapshot.game.conflictAttackerLeader = { ...state.conflictAttackerLeader },\n        snapshot.game.conflictDefenderLeader = { ...state.conflictDefenderLeader },\n        snapshot.game.conflictAttackerTiles = [...state.conflictAttackerTiles],\n        snapshot.game.conflictDefenderTiles = [...state.conflictDefenderTiles],\n        snapshot.game.remainingMonuments = [...state.remainingMonuments],\n        snapshot.game.selectedMonumentType = 0\n        commit('setSnapshot', { ...snapshot })\n    },\n    restoreSnapshot({state, getters, commit, dispatch}) {\n        if (getters.hasSnapshot) {\n            commit('players/loadPlayers', state.snapshot.players, { root: true })\n            commit('board/setTiles', state.snapshot.tiles, { root: true })\n            commit('board/setTreasureCounts', state.snapshot.tiles, { root: true })\n            dispatch('board/setRegions', null, { root: true })\n            commit('bag/setState', state.snapshot.bag, { root: true })\n            commit('log/setMessages', [...state.snapshot.log], { root: true })\n            commit('setState', { ...state, ...state.snapshot.game })\n        }\n    },\n    resolveConflict({getters, commit, dispatch}) {\n        let winner = null\n        let loser = null\n        let winnerStrength = 0\n        let loserStrength = 0\n        let loserTiles = []\n        const attackerStrength = getters.conflictAttackerBoardTiles.length + getters.conflictAttackerTiles.length\n        const defenderStrength = getters.conflictDefenderBoardTiles.length + getters.conflictDefenderTiles.length\n        if (attackerStrength > defenderStrength) {\n            winnerStrength = attackerStrength\n            loserStrength = defenderStrength\n            winner = { ...getters.conflictAttackerLeader }\n            loser = { ...getters.conflictDefenderLeader }\n            loserTiles = [...getters.conflictDefenderBoardTiles]\n        } else {\n            winnerStrength = defenderStrength\n            loserStrength = attackerStrength\n            winner = { ...getters.conflictDefenderLeader }\n            loser = { ...getters.conflictAttackerLeader }\n            loserTiles = [...getters.conflictAttackerBoardTiles]\n        }\n        if (getters.conflictType === conflictTypes.revolt) {\n            commit('players/incrementScore', {\n                playerId: winner.playerId,\n                scoreName: helpers.getTileNameByType(tileTypes.temple)\n            }, { root: true })\n        } else {\n            let scoreCount = 0\n            for (const loserTile of loserTiles) {\n                if (loserTile.hasTreasure) continue\n                if (loserTile.tileType === getters.conflictTileType) {\n                    scoreCount++\n                    commit('board/removeTile', { index: loserTile.index }, { root: true })\n                }\n            }\n            commit('players/incrementScore', {\n                playerId: winner.playerId,\n                scoreName: helpers.getTileNameByType(getters.conflictTileType),\n                scoreCount: scoreCount\n            }, { root: true })\n        }\n        commit('players/addLeaderToPlayer', loser, { root: true })\n        commit('board/removeTile', { index: loser.index }, { root: true })\n        commit('board/resetBoardTileHighlights', null, { root:true })\n        dispatch('board/checkForDisplacedLeader', null, { root: true })\n        dispatch('board/setRegions', null, { root: true })\n        commit('setConflictWinnerPlayerId', winner.playerId)\n        commit('log/logActionMessage', {\n            text: `${helpers.getLogToken(winner)} (${winnerStrength})\n                wins the ${(getters.conflictType === conflictTypes.revolt ? 'Revolt' : 'War')}\n                against ${helpers.getLogToken(loser)} (${loserStrength})`\n        }, { root: true })\n    }\n}\n\nconst mutations = {\n    nextActivePlayer(state) {\n        let turnPlayerId = state.turnPlayerId >= state.numberOfPlayers\n            ? 1 : state.turnPlayerId + 1\n        state.turnPlayerId = turnPlayerId\n        state.actionPlayerId = turnPlayerId\n        state.remainingActions = 2\n        state.currentActionType = actionTypes.playTile\n    },\n    incrementPlayerCount(state) {\n        state.numberOfPlayers++\n    },\n    actionCompleted(state) {\n        state.remainingActions--\n    },\n    setActionType(state, actionType) {\n        state.currentActionType = actionType\n    },\n    setState(state, newState) {\n        Object.assign(state, newState)\n    },\n    setActionPlayerId(state, playerId) {\n        if (state.visiblePlayerId !== playerId)\n            state.visiblePlayerId = 0\n        state.actionPlayerId = playerId\n    },\n    setVisiblePlayerId(state, playerId) {\n        state.visiblePlayerId = playerId\n    },\n    setConflictAttackerLeader(state, leader) {\n        state.conflictAttackerLeader = { ...leader }\n    },\n    setConflictDefenderLeader(state, leader) {\n        state.conflictDefenderLeader = { ...leader }\n    },\n    setConflictAttackerTiles(state, tiles) {\n        state.conflictAttackerTiles = [...tiles]\n    },\n    setConflictDefenderTiles(state, tiles) {\n        state.conflictDefenderTiles = [...tiles]\n    },\n    setConflictAttackerBoardTiles(state, tiles) {\n        state.conflictAttackerBoardTiles = [...tiles]\n    },\n    setConflictDefenderBoardTiles(state, tiles) {\n        state.conflictDefenderBoardTiles = [...tiles]\n    },\n    setConflictTileType(state, tileType) {\n        state.conflictTileType = tileType\n    },\n    resetConflictData(state) {\n        state.conflictAttackerLeader = null\n        state.conflictDefenderLeader = null\n        state.conflictAttackerTiles = []\n        state.conflictDefenderTiles = []\n        state.conflictAttackerBoardTiles = [],\n        state.conflictDefenderBoardTiles = [],\n        state.conflictTileType = tileTypes.empty\n        state.conflictWinnerPlayerId = 0\n        state.conflictType = conflictTypes.none\n    },\n    removeFromRemainingMonuments(state, monumentType) {\n        let monumentToRemoveIndex = state.remainingMonuments.findIndex(m => m === monumentType)\n        state.remainingMonuments.splice(monumentToRemoveIndex, 1)\n    },\n    resetSelectedMonumentType(state) {\n        state.selectedMonumentType = 0;\n    },\n    setSelectedMonumentType(state, monumentType) {\n        state.selectedMonumentType = monumentType\n    },\n    setSnapshot(state, snapshot) {\n        state.snapshot = { ...snapshot }\n    },\n    clearSnapshot(state) {\n        state.snapshot = null\n    },\n    setConflictType(state, conflictType) {\n        state.conflictType = conflictType\n    },\n    setConflictWinnerPlayerId(state, playerId) {\n        state.conflictWinnerPlayerId = playerId\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}","import Vue from 'vue';\nimport { messageTypes } from '../../common/constants'\n\nconst state = () => ({\n    messages: []\n})\n\nconst getters = {\n    messages(state) {\n        return state.messages\n    }\n}\n\nconst mutations = {\n    init(state) {\n        Vue.set(state, 'messages', [])\n    },\n    logActionMessage(state, messageInfo) {\n        state.messages.unshift({\n            timestamp: new Date().toLocaleString(\"en-US\"),\n            messageType: messageTypes.action,\n            text: messageInfo.text,\n            playerId: messageInfo.playerId\n        })\n    },\n    logSystemMessage(state, messageText) {\n        state.messages.unshift({\n            timestamp: new Date().toLocaleString(\"en-US\"),\n            messageType: messageTypes.system,\n            text: messageText\n        })\n    },\n    setMessages(state, messages) {\n        Vue.set(state, 'messages', messages)\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations\n}","const state = () => ({\n    showCoordinates: true,\n    showIndexes: false,\n    showKingdoms: true,\n    showLogTimestamps: true,\n    showLeaderStrength: true\n})\n\nconst getters = {\n    all(state) {\n        return state\n    },\n    showCoordinates(state) {\n        return state.showCoordinates\n    },\n    showIndexes(state) {\n        return state.showIndexes\n    },\n    showKingdoms(state) {\n        return state.showKingdoms\n    },\n    showLogTimestamps(state) {\n        return state.showLogTimestamps\n    },\n    showLeaderStrength(state) {\n        return state.showLeaderStrength\n    }\n}\n\nconst actions = {\n    save({state}) {\n        localStorage.gameSettings = JSON.stringify(state);\n    },\n    load({commit}) {\n        if (localStorage.gameSettings) {\n            let gameSettings = JSON.parse(localStorage.gameSettings);\n            commit('setState', gameSettings)\n        }\n    }\n}\n\nconst mutations = {\n    setState(state, newState) {\n        Object.assign(state, newState)\n    },\n    setShowCoordinates(state, payload) {\n        state.showCoordinates = payload\n    },\n    setShowIndexes(state, payload) {\n        state.showIndexes = payload\n    },\n    setShowKingdoms(state, payload) {\n        state.showKingdoms = payload\n    },\n    setShowLogTimestamps(state, payload) {\n        state.showLogTimestamps = payload\n    },\n    setShowLeaderStrength(state, payload) {\n        state.showLeaderStrength = payload\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport board from './modules/board'\nimport players from './modules/players'\nimport bag from './modules/bag'\nimport game from './modules/game'\nimport log from './modules/log'\nimport settings from './modules/settings'\n\nVue.use(Vuex)\n\nconst debug = process.env.NODE_ENV !== 'production'\n\nexport default new Vuex.Store({\n  modules: {\n    board,\n    players,\n    bag,\n    game,\n    settings,\n    log\n  },\n  strict: debug\n})","import Vue from 'vue'\nimport App from './App.vue'\nimport { BootstrapVue, IconsPlugin } from 'bootstrap-vue'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\n\nimport store from './store'\n\nVue.use(BootstrapVue)\nVue.use(IconsPlugin)\n\nVue.config.productionTip = false\n\nnew Vue({\n  store,\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkriver_game\"] = self[\"webpackChunkriver_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1439); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","on","startNewGame","staticClass","showGameEnd","_e","showWarBoard","_l","map","mapSquare","index","key","attrs","getTile","showMonumentsAboveHand","getPlayer","actionPlayerId","allPlayers","player","class","id","visiblePlayerId","_v","_s","appVersion","staticRenderFns","leaderIcon","showCurrentPlayerMessage","playerName","remainingActionsMessage","showTakeTreasureMessage","treasureMessage","showBuildMonumentMessage","showBuildMonumentMultipleMessage","showSwapTilesMessage","showWarMessage","warTileType","showWarChooseLeaderMessage","showPlayerActionButtons","areActionsDepleted","beginSwapTiles","hasSnapshot","undoLastAction","showPassTurnMessageBox","doEndTurn","passMonumentBuilding","stopSwapTiles","doSwapTiles","selectedTiles","length","showRevoltAttackMessage","commitTilesToConflict","tileTypes","empty","temple","market","settlement","farm","catastrophe","king","priest","farmer","trader","generic","monumentTopLeft","monumentTopRight","monumentBottomLeft","monumentBottomRight","leaderTileTypes","mapTypes","ground","river","treasure","priorityTreasure","actionTypes","loading","playTile","swapTiles","takeTreasure","buildMonument","buildMonumentMultiple","conflictAttack","conflictDefend","conflictChooseLeader","gameOver","playerIcons","boardStats","columns","rows","breakpoints","small","medium","large","extraLarge","monumentTypes","redBlue","blueGreen","greenRed","blackRed","blackGreen","blackBlue","redMonuments","blueMonuments","greenMonuments","blackMonuments","messageTypes","system","action","conflictTypes","none","revolt","war","helpers","getTileNameByType","tileType","pascalToKebab","Object","keys","find","getCoordinatesByIndex","row","Math","floor","toString","toUpperCase","getPlayerIconNameById","getActionNameByType","actionTypeId","getMessageNameByType","messageType","capitalizeFirstLetter","string","slice","getMonumentNameByType","monumentType","pascalToProper","replace","getLogToken","tile","playerId","split","word","toLowerCase","join","name","computed","showRevoltDefendMessage","showWarAttackMessage","showWarDefendMessage","methods","text","root","size","buttonSize","okVariant","okTitle","cancelVariant","footerClass","then","isHighlighted","tilesToRemove","component","confettiInstances","_m","getWinnerName","winningPlayerId","playerScores","playerScore","score","data","mounted","getScores","scored","messages","message","getClass","showLogTimestamps","timestamp","getLeaderIcon","_b","getMessageIcon","getTimestamp","icon","properties","getMapSquareClass","doMapSquareClick","hasTile","isLeaderTile","hasTreasure","isConflictTile","showLeaderPointer","showLeaderStrength","showMonument","isRiverTile","riverPath","showRiverHorizontalLeft","showRiverHorizontalRight","showRiverVerticalBottom","showRiverVerticalTop","showKingdoms","style","kingdomStyle","showCoordinates","coordinates","showIndexes","debug","tileClass","tileStyle","treasureStyle","props","selected","highlight","disabled","showPointer","calculatedSize","window","unmounted","cssClass","onWindowResize","iconClass","showStrength","boardStrength","mapIndex","showEmpty","isEmpty","monumentClass","monumentStyle","primaryTileClass","secondaryTileClass","type","required","primaryTileType","secondaryTileType","components","CivilizationTile","LeaderTile","MonumentTile","mapSquareType","isPriorityTreasureSquare","mapClass","monumentTypes1","isSelectedMonument","isAvailableMonument","isBuildingMonument","nativeOn","$event","selectMonument","monumentTypes2","$emit","scopedSlots","_u","fn","proxy","staticStyle","saveSettings","model","value","callback","$$v","expression","directives","rawName","modifiers","numberOfPlayers","actionTypeName","turnPlayerId","debugBagStats","get","set","onNewGameClicked","isHuman","setPlayerVisible","isSelectedTile","isHighlightedLeader","isDisabled","isInConflict","selectTile","playerTiles1","playerTiles2","catastropheTiles","n","selectable","default","selectedBoardLeader","leaderTileType","hand","showScore","round","bagSpaceRemaining","initialTreasures","remainingTreasures","conflictAttackerLeader","getResultClass","conflictAttackerBoardTiles","conflictAttackerTiles","conflictDefenderLeader","conflictDefenderTiles","conflictDefenderBoardTiles","conflictWinnerPlayerId","closeWarBoard","ActionBar","GameEnd","GameLog","MapSquare","MonumentCard","NavBar","PlayerHand","PlayerCard","ProgressCard","WarBoard","localStorage","state","tiles","regions","availableTileLocations","availableMonumentLocations","treasuresToTake","conflictTile","leaderGroupsAtWar","getters","getRiverPath","kingdoms","filter","region","isKingdom","getNeighbors","right","bottomRight","bottom","bottomLeft","left","top","topRight","topLeft","getRegion","regionIndex","i","tileIndexes","includes","getKingdomIndex","findIndex","getAvailableTileLocations","neighborRegions","neighbors","push","Array","from","Set","isValidTileLocation","some","x","getRevoltBoardStrength","leader","leaderNeighbors","getWarBoardStrength","leaderRegion","tileIndex","actions","init","commit","dispatch","newTiles","handleBoardClick","rootGetters","clickedTile","currentActionType","currentPlayer","playerHasSelectedTiles","selectedLeaderTile","selectedTile","newTile","neighborKingdoms","warChooseLeader","chosenLeaderGroup","attacker","defender","calculateAvailableTileLocations","eligibleTileLocations","mapSquareTile","isJoiningKingdoms","hasTempleNeighbor","setRegions","indexesToCheck","checkedIndexes","newRegionIndexes","queue","queueIndex","shift","indexContainsLeader","checkForTileScore","payload","matchingLeader","matchingKing","matchingTile","scoreName","checkForTreasureToTake","tilesWithTreasure","matchingTrader","priorityTiles","checkForMonument","foundAvailableMonumentLocations","every","target","targetNeighbors","forEach","location","checkForMonumentScore","kingdom","playerLeaders","monuments","monument","checkForDisplacedLeader","hasTemple","checkForRevolt","matchingDefenderLeader","checkForWar","redLeaders","blackLeaders","greenLeaders","blueLeaders","neighborKingdom","leaderGroups","leaderGroup","sort","a","b","triggerWar","mutations","setTreasureCounts","initialTreasureCount","removeTreasure","addTile","splice","removeTile","updateTile","setTiles","Vue","resetRegions","addRegion","setAvailableTileLocations","resetAvailableTileLocations","setAvailableMonumentLocations","resetAvailableMonumentLocations","resetBoardTileHighlights","setTreasuresToTake","setConflictTile","resetConflictTile","setLeaderGroupsAtWar","resetLeaderGroupsAtWar","namespaced","players","rootState","matchingPlayers","all","async","newPlayer","leaders","missingTiles","drawnTiles","tilesToAdd","addTileSelection","isPlayTileActionType","removeTileSelection","removeSelectedTiles","loadPlayers","clearPlayers","addNewPlayer","selectedTileIndex","clearTileSelection","removeTileFromHand","playerHand","removeTilesFromHand","indexesToRemove","tileToRemove","filteredHand","removeLeaderFromHand","indexOf","removeCatastropheFromHand","addTilesToPlayerHand","addLeaderToPlayer","incrementScore","scoreCount","bag","temples","markets","settlements","farms","startingBag","defaultState","bagCount","drawTiles","numberOfTiles","fillBag","unshuffled","fill","shuffleBag","shuffled","random","removeTiles","setStartingBag","setState","newState","assign","DEBUG","remainingActions","conflictType","conflictTileType","remainingMonuments","selectedMonumentType","snapshot","isSaveValid","gameState","JSON","parse","process","version","save","log","game","stringify","load","saveSnapshot","restoreSnapshot","resolveConflict","winner","loser","winnerStrength","loserStrength","loserTiles","attackerStrength","defenderStrength","loserTile","nextActivePlayer","incrementPlayerCount","actionCompleted","setActionType","actionType","setActionPlayerId","setVisiblePlayerId","setConflictAttackerLeader","setConflictDefenderLeader","setConflictAttackerTiles","setConflictDefenderTiles","setConflictAttackerBoardTiles","setConflictDefenderBoardTiles","setConflictTileType","resetConflictData","removeFromRemainingMonuments","monumentToRemoveIndex","m","resetSelectedMonumentType","setSelectedMonumentType","setSnapshot","clearSnapshot","setConflictType","setConflictWinnerPlayerId","logActionMessage","messageInfo","unshift","Date","toLocaleString","logSystemMessage","messageText","setMessages","gameSettings","setShowCoordinates","setShowIndexes","setShowKingdoms","setShowLogTimestamps","setShowLeaderStrength","Vuex","modules","board","settings","strict","BootstrapVue","IconsPlugin","store","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","r","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}