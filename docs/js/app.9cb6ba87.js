(function(){"use strict";var e={7364:function(e,t,a){var r=a(6369),i=function(){var e=this,t=e._self._c;return t("div",{staticClass:"main-app container"},[t("div",{staticClass:"row"},[t("div",{staticClass:"col"},[t("div",{staticClass:"map-container"},[t("div",{staticClass:"grid"},e._l(e.map,(function(a,r){return t("map-square",{key:r,staticClass:"cell",attrs:{"map-square-type":a,index:r,"show-coordinates":e.showCoordinates,tile:e.getTile(r)}})})),1)])])]),t("div",{staticClass:"row mt-3"},[t("div",{staticClass:"col"},[e.currentPlayer?.isHuman?t("player-hand",{attrs:{player:e.currentPlayer,size:"lg",selectable:""}}):e._e()],1)]),t("div",{staticClass:"row mt-3"},[t("div",{staticClass:"col"},[t("b-button",{attrs:{variant:"primary",disabled:e.isEndTurnDisabled},on:{click:e.doEndTurn}},[e._v(" End Turn ")])],1)]),t("div",{staticClass:"row mt-3"},[t("div",{staticClass:"col"},[t("b-form-checkbox",{model:{value:e.showCoordinates,callback:function(t){e.showCoordinates=t},expression:"showCoordinates"}},[e._v(" Show Coordinates ")])],1)]),t("div",{staticClass:"row mt-3"},[t("div",{staticClass:"col"},[t("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.debug-sidebar",modifiers:{"debug-sidebar":!0}}],attrs:{variant:"secondary"}},[e._v(" Show Debug Info ")])],1)]),t("b-sidebar",{attrs:{id:"debug-sidebar",right:"",shadow:"","sidebar-class":"border-left border-dark text-left"}},[t("div",{staticClass:"px-3 py-2"},[e._v(" Current Player: "+e._s(e.currentPlayer?.id)),t("br"),e._v(" Bag: "+e._s(e.debugBagStats)),t("br"),e._v(" Hands: "),t("br"),e._l(e.allPlayers,(function(a,r){return t("player-hand",{key:r,staticClass:"mt-2",class:{"border-danger":a.id===e.currentPlayer.id},attrs:{player:e.getPlayer(a.id),size:"sm"}})}))],2)])],1)},s=[],l=a(3822),n=function(){var e=this,t=e._self._c;return t("div",{staticClass:"map-square",class:e.getMapSquareClass(),on:{click:e.doMapSquareClick}},[e.hasTile?t("civilization-tile",{staticClass:"tile",attrs:{tile:e.tile}}):e._e(),e.showCoordinates?t("div",{staticClass:"coordinates small",class:{"text-white":e.hasTile}},[e._v(e._s(e.coordinates))]):e._e()],1)},o=[],c=function(){var e=this,t=e._self._c;return t("div",{class:e.getTileClass(),style:{height:`${e.size}px`,width:`${e.size}px`}})},d=[],u={name:"CivilizationTile",props:{tile:Number,size:Number},methods:{getTileClass(){switch(this.tile){case 1:case 2:return"temple";case 3:return"market";case 4:return"settlement";case 5:return"farm";case 6:return"catastrophe"}}}},m=u,p=a(1001),f=(0,p.Z)(m,c,d,!1,null,"43acb4ef",null),y=f.exports,h={name:"MapSquare",components:{CivilizationTile:y},props:{mapSquareType:Number,index:Number,showCoordinates:Boolean,tile:Number},computed:{coordinates(){var e=Math.floor(this.index/16)+10;return`${e.toString(36).toUpperCase()}-${this.index%16+1}`},hasTile(){return this.tile>0}},methods:{getMapSquareClass(){return 1===this.mapSquareType?"water":"ground"},doMapSquareClick(){this.$store.dispatch("board/handleBoardClick",{index:this.index})}}},g=h,b=(0,p.Z)(g,n,o,!1,null,"53539d0e",null),v=b.exports,T=function(){var e=this,t=e._self._c;return t("div",{staticClass:"card"},[t("div",{staticClass:"card-body",class:{"p-1":"sm"===e.size}},[t("div",{staticClass:"row align-items-center justify-content-center",style:{height:("lg"===e.size?80:40)+"px"}},e._l(e.player.hand,(function(a,r){return t("div",{key:r,staticClass:"col-auto",class:{"p-1":"sm"===e.size}},[t("civilization-tile",{class:{"selected-tile":e.isSelectedHandTile(r)},attrs:{size:"lg"===e.size?60:30,tile:a},nativeOn:{click:function(t){return e.selectHandTile(r)}}})],1)})),0)])])},w=[],C={name:"PlayerHand",components:{CivilizationTile:y},props:{player:Object,size:String,selectable:{type:Boolean,default:!1}},computed:{...(0,l.Se)("game",{remainingActions:"remainingActions"})},methods:{isSelectedHandTile(e){return this.selectable&&this.player.selectedTiles.some((t=>t.index===e))},selectHandTile(e){this.selectable&&this.remainingActions>0&&this.$store.dispatch("players/addTileSelection",{index:e})}}},P=C,S=(0,p.Z)(P,T,w,!1,null,"07588fc8",null),x=S.exports,_={name:"App",components:{MapSquare:v,PlayerHand:x},data(){return{showCoordinates:!1}},mounted(){this.$store.dispatch("players/createNewPlayer",{isHuman:!0}),this.$store.dispatch("players/createNewPlayer",{isHuman:!1}),this.$store.dispatch("players/createNewPlayer",{isHuman:!1}),this.$store.dispatch("players/createNewPlayer",{isHuman:!1})},computed:{...(0,l.Se)("bag",{debugBagStats:"debugBagStats"}),...(0,l.Se)("board",{map:"map",tiles:"tiles"}),...(0,l.Se)("players",{playerHand:"playerHand",currentPlayer:"currentPlayer",allPlayers:"all"}),...(0,l.Se)("game",{remainingActions:"remainingActions"}),isEndTurnDisabled(){return 0!=this.remainingActions}},methods:{getTile(e){return this.tiles[e]},async doEndTurn(){await this.$store.dispatch("players/refillPlayerHands"),this.$store.commit("game/nextActivePlayer")},getPlayer(e){let t=this.allPlayers.filter((t=>t.id==e));return t&&t.length>0?t[0]:null}}},k=_,A=(0,p.Z)(k,i,s,!1,null,"2f235a83",null),H=A.exports,O=a(6681),z=a(9425);a(7024);const N={treasure:1,temple:2,market:3,settlement:4,farm:5,catastrophe:6},$={ground:0,water:1},B={playUnit:0,swapTiles:1},q=()=>({map:[0,0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],tiles:[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],phase:null}),M={map:e=>e.map,tiles:e=>e.tiles},j={handleBoardClick({commit:e,state:t,rootGetters:a,dispatch:r},i){let s=a["players/currentPlayer"],l=t.map[i.index],n=t.tiles[i.index];i&&s.selectedTiles&&s.selectedTiles.length>=1&&n===$.ground&&(l===$.water&&s.selectedTiles[0].tile===N.farm||l===$.ground&&s.selectedTiles[0].tile!==N.farm)&&(e("addTile",{...s.selectedTiles[0],...i}),r("players/removeSelectedTiles",null,{root:!0}),e("game/actionCompleted",null,{root:!0}))}},E={addTile(e,t){t&&e.tiles.length-1>=t.index&&e.tiles.splice(t.index,1,t.tile)}};var I={namespaced:!0,state:q,getters:M,actions:j,mutations:E};a(7658);const Z=()=>({players:[]}),U={playerHand:(e,t)=>t.currentPlayer?t.currentPlayer.hand:[],currentPlayer:(e,t,a,r)=>{let i=r["game/currentPlayerId"];return e.players.filter((e=>e.id===i)).length>0?e.players.filter((e=>e.id===i))[0]:null},all:e=>e.players},D={async createNewPlayer({commit:e,state:t,dispatch:a},r){e("bag/shuffleBag",null,{root:!0});var i=await a("bag/drawTiles",{numberOfTiles:6},{root:!0}),s={id:t.players.length+1,hand:i,selectedTiles:[],score:{red:0,green:0,blue:0,black:0,wild:0},isHuman:r.isHuman};e("createNewPlayer",s),e("game/incrementPlayerCount",null,{root:!0})},async refillPlayerHands({commit:e,state:t,dispatch:a}){for(const r of t.players)if(r.hand.length<6){let t=6-r.hand.length,i=await a("bag/drawTiles",{numberOfTiles:t},{root:!0});e("addTilesToPlayerHand",{id:r.id,tilesToAdd:i})}},addTileSelection({commit:e,getters:t,rootGetters:a},r){if(r){let i=a["game/currentActionType"],s=t.currentPlayer;i===B.playUnit&&e("clearTileSelection",{id:s.id}),r={...r,id:s.id,tile:s.hand[r.index]},e("addTileSelection",{id:s.id,...r})}},removeSelectedTiles({commit:e,getters:t}){let a=t.currentPlayer;a.selectedTiles.forEach((t=>{e("removeTileFromHand",{id:a.id,index:t.index})})),e("clearTileSelection",{id:a.id})}},F={createNewPlayer(e,t){e.players.push(t)},addTileSelection(e,t){e.players.filter((e=>e.id==t.id))[0].selectedTiles.push({index:t.index,tile:t.tile})},clearTileSelection(e,t){let a=e.players.filter((e=>e.id==t.id))[0].selectedTiles;a.splice(0,a.length)},removeTileFromHand(e,t){let a=e.players.filter((e=>e.id==t.id))[0].hand;a&&a.length>t.index&&a.splice(t.index,1)},addTilesToPlayerHand(e,t){let a=e.players.filter((e=>e.id==t.id))[0].hand;a=[...a,...t.tilesToAdd],e.players.filter((e=>e.id==t.id))[0].hand=a}};var G={namespaced:!0,state:Z,getters:U,actions:D,mutations:F};const X=()=>({bag:[],temples:47,markets:30,settlements:30,farms:36}),J={debugBagStats(e){return{bagCount:e.bag.length,temples:e.temples,markets:e.markets,settlements:e.settlements,farms:e.farms}}},K={drawTiles({state:e,commit:t},a){if(a){t("shuffleBag");let r=e.bag.slice(0,a.numberOfTiles);return t("removeTiles",{...a,drawnTiles:r}),r}}},L={shuffleBag(e){let t=[...e.bag];0==e.bag.length&&(e.bag.splice(0),t=[...t,...Array(e.temples).fill(N.temple,0)],t=[...t,...Array(e.markets).fill(N.market,0)],t=[...t,...Array(e.settlements).fill(N.settlement,0)],t=[...t,...Array(e.farms).fill(N.farm,0)]);let a=t.map((e=>({value:e,sort:Math.random()}))).sort(((e,t)=>e.sort-t.sort)).map((({value:e})=>e));e.bag=[...a]},removeTiles(e,t){e.bag.splice(0,t.numberOfTiles),t.drawnTiles.forEach((t=>{t===N.temple&&e.temples--,t===N.market&&e.markets--,t===N.settlement&&e.settlements--,t===N.farm&&e.farms--}))}};var Q={namespaced:!0,state:X,getters:J,actions:K,mutations:L};const R=()=>({currentPlayerId:1,numberOfPlayers:0,remainingActions:2,currentActionType:B.playUnit}),V={currentActionType(e){return e.currentActionType},currentPlayerId(e){return e.currentPlayerId},remainingActions(e){return e.remainingActions}},W={nextActivePlayer(e){e.currentPlayerId=e.currentPlayerId>=e.numberOfPlayers?1:e.currentPlayerId+1,e.remainingActions=2,e.currentAction=B.playUnit},incrementPlayerCount(e){e.numberOfPlayers++},actionCompleted(e){e.remainingActions--}};var Y={namespaced:!0,state:R,getters:V,mutations:W};r["default"].use(l.ZP);const ee=!1;var te=new l.ZP.Store({modules:{board:I,players:G,bag:Q,game:Y},strict:ee});r["default"].use(O.XG7),r["default"].use(z.A7),r["default"].config.productionTip=!1,new r["default"]({store:te,render:e=>e(H)}).$mount("#app")}},t={};function a(r){var i=t[r];if(void 0!==i)return i.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,a),s.exports}a.m=e,function(){var e=[];a.O=function(t,r,i,s){if(!r){var l=1/0;for(d=0;d<e.length;d++){r=e[d][0],i=e[d][1],s=e[d][2];for(var n=!0,o=0;o<r.length;o++)(!1&s||l>=s)&&Object.keys(a.O).every((function(e){return a.O[e](r[o])}))?r.splice(o--,1):(n=!1,s<l&&(l=s));if(n){e.splice(d--,1);var c=i();void 0!==c&&(t=c)}}return t}s=s||0;for(var d=e.length;d>0&&e[d-1][2]>s;d--)e[d]=e[d-1];e[d]=[r,i,s]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={143:0};a.O.j=function(t){return 0===e[t]};var t=function(t,r){var i,s,l=r[0],n=r[1],o=r[2],c=0;if(l.some((function(t){return 0!==e[t]}))){for(i in n)a.o(n,i)&&(a.m[i]=n[i]);if(o)var d=o(a)}for(t&&t(r);c<l.length;c++)s=l[c],a.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return a.O(d)},r=self["webpackChunkriver_game"]=self["webpackChunkriver_game"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=a.O(void 0,[998],(function(){return a(7364)}));r=a.O(r)})();
//# sourceMappingURL=app.9cb6ba87.js.map